Name,Text
NiceGuyTax2,"['NiceGuyTax', 'investors', 'niceGuys', 'payoutIndex', 'currentNiceGuyIndex', 'investorIndex', 'currentNiceGuy', 'index', 'niceGuyIndex', 'Investor', 'NiceGuy', 'Investor has addr', 'NiceGuy has addr', 'NiceGuyTax', '', 'currentNiceGuy is equal to msg sender', 'If msg value is different from 9 ether', 'If investorIndex is less then 8', 'investors length increments of 1', 'investors index addr is equal to msg sender', 'If investorIndex is greater then 7', 'niceGuys length increments of 1', 'niceGuys niceGuyIndex addr is equal to msg sender', 'If investorIndex is greater then 8', 'currentNiceGuy is equal to niceGuys currentNiceGuyIndex addr', 'currentNiceGuyIndex increments of 1', 'If investorIndex is less then 9', 'investorIndex increments of 1', 'investorIndex is equal to 0', 'While this balance is greater then 9 ether', 'payoutIndex increments of 1']"
FairAndDeasy,"['fairandeasy', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'fairandeasy', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 divided by 100 ether', 'If msg value is greater then 50 ether', 'amount is equal to 50 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of 0', 'collectedFees is equal to 0', 'balance increments of amount', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 150', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
TwoAndAHalfPonzi,"['TwoAndAHalfPonzi', 'VALUE', 'VALUEBACK', 'payouts', 'payoutIndex', 'payoutTotal', 'entryIndex', 'Payout', 'Payout has addr', 'Payout has yield', 'TwoAndAHalfPonzi', '', 'If msg value is different from VALUE', 'payouts length increments of 1', 'payouts entryIndex addr is equal to msg sender', 'payouts entryIndex yield is equal to VALUEBACK', 'While payouts payoutIndex yield is less then this balance', 'payoutTotal increments of payouts payoutIndex yield', 'payoutIndex increments of 1']"
EthPonzi,"['PonziScheme', 'round', 'lastDepositor', 'lastDepositorAmount', 'startingAmount', 'nextAmount', 'PonziScheme', '', 'checkAmount', 'increaseRound', 'round is equal to 1', 'startingAmount is equal to _startingAmount', 'nextAmount is equal to _startingAmount', 'If round corresponds to 1', 'If msg value is different from startingAmount', 'lastDepositorAmount is equal to msg value', 'lastDepositor is equal to msg sender', 'nextAmount is equal to msg value multiplied by 2', 'If amount is different from lastDepositorAmount multiplied by 2', 'round is equal to round plus 1']"
SquareRootPonzi,"['squareRootPonzi', 'masterCalculator', 'calculatedTo', 'index', 'to', 'z', 'MasterCalculators', 'MasterCalculators has ethereumAddress', 'MasterCalculators has name', 'MasterCalculators has squareRoot', '', 'CalculateSqrt', 'sqrt', 'If msg value corresponds to 1 finney', 'If this balance is greater then 2 finney', 'masterCalculator index ethereumAddress is equal to msg sender', 'masterCalculator index name is equal to masterly calculated: ', 'calculatedTo increments of 100 ether', 'masterCalculator index squareRoot is equal to CalculateSqrt', 'If masterCalculator length is greater then 3', 'y is equal to x', 'While z is less then y', 'y is equal to z', 'z is equal to  divided by 2', 'If x is greater then masterCalculator length plus 1']"
TheWhaleGame,"['thewhalegame', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'thewhalegame', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 5 ether', 'If msg value is greater then 500 ether', 'amount is equal to 500 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 100 multiplied by 3', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 100 multiplied by 3', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 200', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
FirePonzi,"['FirePonzi', 'onlyowner', 'persons', 'payoutCursor_Id_', 'balance', 'owner', 'payoutCursor_Id', 'deposited_value', 'new_id', 'MultipliedPayout', 'Player', 'Player has etherAddress', 'Player has deposit', 'quick', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 100 finney', 'If msg value is greater then 2 ether', 'deposited_value is equal to 2 ether', 'deposited_value is equal to msg value', 'persons length increments of 1', 'persons new_id etherAddress is equal to msg sender', 'persons new_id deposit is equal to deposited_value', 'balance increments of deposited_value', 'While balance is greater then persons payoutCursor_Id_ deposit divided by 100 multiplied by 115', 'balance decreases of MultipliedPayout', 'Invalid symbol payoutCursor_Id_', 'owner is equal to _owner']"
ResetPonzi9,"['ResetPonzi', 'persons', 'niceGuys', 'payoutIdx', 'currentNiceGuyIdx', 'investor', 'currentNiceGuy', 'idx', 'ngidx', 'Person', 'NiceGuy', 'Person has addr', 'NiceGuy has addr', 'ResetPonzi', '', 'enter', 'currentNiceGuy is equal to msg sender', 'If msg value is different from 9 ether', 'If investor is less then 9', 'persons length increments of 1', 'persons idx addr is equal to msg sender', 'investor increments of 1', 'If investor is greater or equal to 9', 'niceGuys length increments of 1', 'niceGuys ngidx addr is equal to msg sender', 'investor increments of 1', 'If investor corresponds to 10', 'currentNiceGuy is equal to niceGuys currentNiceGuyIdx addr', 'investor is equal to 0', 'currentNiceGuyIdx increments of 1', 'If idx is different from 0', 'While this balance is greater then 10 ether', 'payoutIdx increments of 1']"
WealthShare,"['WealthShare', 'onlyowner', 'depositors', 'Total_Savers', 'Fees', 'Balance', 'Total_Deposited', 'Total_Paid_Out', 'Message', 'owner', 'amount', 'minimal', 'Times', 'i', 'payout', 'nr', 'InvestorArray', 'InvestorArray has etherAddress', 'InvestorArray has amount', 'WealthShare', '', 'enter', 'If msg sender corresponds to owner', 'owner is equal to 0xEe462A6717f17C57C826F1ad9b4d3813495296C9', 'If msg value is greater then 200 finney', 'Total_Savers is equal to depositors length plus 1', 'depositors length increments of 1', 'depositors length minus 1 etherAddress is equal to msg sender', 'depositors length minus 1 amount is equal to amount', 'Balance increments of amount', 'Total_Deposited increments of amount', 'Fees is equal to Balance multiplied by 1 divided by 100', 'Balance decreases of Fees', 'If Fees is different from 0', 'If Fees is less then minimal', 'Total_Paid_Out increments of Fees', None, 'i is less then Times', 'If Fees is greater then 0', 'Total_Paid_Out increments of Fees', 'Fees decreases of minimal', 'If Total_Deposited multiplied by 50 divided by 100 is less then Balance', 'While Balance is greater then 0 Invalid symbol ', 'payout is equal to Balance divided by ', 'Balance decreases of Balance divided by ', 'Total_Paid_Out increments of Balance divided by ', 'nr increments of 1', 'Message is equal to The Wealth has been paid to Depositors!', 'Message is equal to The Balance has to be at least 50% full to be able to pay out!']"
FastRealisticPyramid2,"['FastRealisticPyramid', 'onlyowner', 'person', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'FastRealisticPyramid', '', 'enter', 'collectFees', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 divided by 100 ether Invalid symbol ', 'person length increments of 1', 'person idx etherAddress is equal to msg sender', 'person idx amount is equal to msg value', 'If idx is different from 0', 'collectedFees increments of msg value divided by 10', 'balance increments of msg value', 'collectedFees increments of msg value', 'If balance is greater then person payoutIdx amount multiplied by 7 divided by 5', 'balance decreases of person payoutIdx amount multiplied by 7 divided by 5', 'payoutIdx increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', 'owner is equal to _owner']"
GoodFellas,"['Goodfellas', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'LittleCactus', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 divided by 100 ether', 'If msg value is greater then 50 ether', 'amount is equal to 50 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 300', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
EthVenturesFinal1,"['EthVenturesFinal', 'manager', 'investors', 'total_investors', 'fees', 'balance', 'totaldeposited', 'totalpaidout', 'totaldividends', 'Message_To_Investors', 'owner', 'PRE_payout', 'PRE_amount', 'PRE_i', 'amount', 'alreadyinvestor', 'alreadyinvestor_id', 'i', 'InvestorArray', 'InvestorArray has etherAddress', 'InvestorArray has amount', 'EthVenturesFinal', '', 'Enter', 'NewOwner', 'Emergency', 'EmergencyBalanceReset', 'NewMessage', 'NewManualInvestor', 'ManualDeposit', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 2 ether', 'totalpaidout increments of PRE_amount divided by 100', 'PRE_amount decreases of PRE_amount divided by 100', 'If investors length is different from 0 Invalid symbol ', None, 'PRE_i is less then investors length', 'PRE_payout is equal to PRE_amount multiplied by investors PRE_i amount divided by totaldeposited', 'totalpaidout increments of PRE_payout', 'totaldividends increments of PRE_payout', 'Message_To_Investors is equal to Dividends have been paid out!', 'fees is equal to amount divided by 100', 'totaldeposited increments of amount', 'amount decreases of amount divided by 100', 'balance increments of amount', None, 'i is less then investors length', 'If msg sender corresponds to investors i etherAddress', 'alreadyinvestor is equal to True', 'alreadyinvestor_id is equal to i', 'If alreadyinvestor corresponds to False', 'total_investors is equal to investors length plus 1', 'investors length increments of 1', 'investors length minus 1 etherAddress is equal to msg sender', 'investors length minus 1 amount is equal to amount', 'Message_To_Investors is equal to New Investor has joined us!', 'investors alreadyinvestor_id amount increments of amount', 'If fees is different from 0', 'totalpaidout increments of fees', 'owner is equal to new_owner', 'Message_To_Investors is equal to The contract has a new manager!', 'If balance is different from 0', 'balance is equal to 0', 'Message_To_Investors is equal to Emergency Withdraw has been issued!', 'balance is equal to new_balance', 'Message_To_Investors is equal to The Balance has been edited by the Manager!', 'Message_To_Investors is equal to new_sms', 'total_investors is equal to investors length plus 1', 'investors length increments of 1', 'investors length minus 1 etherAddress is equal to new_investor', 'investors length minus 1 amount is equal to new_amount', 'Message_To_Investors is equal to New manual Investor has been added by the Manager!', 'totaldeposited increments of msg value', 'balance increments of msg value', 'Message_To_Investors is equal to Manual Deposit received from the Manager']"
BestBankWithInterest,"['Best_Bank_with_Interest', 'balances', 'term_deposit_end_block', 'thebank', 'minimum_deposit_amount', 'deposit_fee', 'contract_alive_until_this_block', 'count_customer_deposits', 'interest', 'Best_Bank_with_Interest', 'deposit', 'withdraw', 'set_minimum_payment', 'set_deposit_fee', 'get_available_interest_amount', 'get_term_deposit_end_date', 'get_balance', 'extend_life_of_contract', 'close_bank', '', 'thebank is equal to msg sender', 'minimum_deposit_amount is equal to 250 ether', 'deposit_fee is equal to 5 ether', 'contract_alive_until_this_block is equal to 3000000', 'count_customer_deposits is equal to 0', ' is equal to contract_alive_until_this_block', 'If msg value is less then minimum_deposit_amount', 'If  corresponds to 0', 'deposit_fee is equal to 0 ether', 'If msg sender corresponds to thebank', ' increments of msg value', 'count_customer_deposits increments of 1', ' increments of msg value minus deposit_fee', ' increments of deposit_fee', ' is equal to block number plus 30850', 'If withdraw_amount is less then 10 ether', 'If withdraw_amount is greater then ', 'If block number is less then ', 'If msg sender corresponds to thebank', 'interest is equal to 0 ether', 'If interest is greater then ', 'interest is equal to ', ' decreases of interest', ' decreases of withdraw_amount', 'If not msg sender send', 'If not msg sender send', 'If msg sender corresponds to thebank', 'minimum_deposit_amount is equal to new_limit', 'If msg sender corresponds to thebank', 'deposit_fee is equal to new_fee', 'If msg sender is different from thebank Invalid symbol ', 'contract_alive_until_this_block is equal to newblock', ' is equal to contract_alive_until_this_block', 'If contract_alive_until_this_block is less then block number Invalid symbol ', ' increments of msg value']"
SmallPonzi1,"['smallponzi', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'smallponzi', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 divided by 100 ether', 'If msg value is greater then 3 ether', 'amount is equal to 3 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 33', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 33', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 133', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
AI,"['Ai', 'onlyowner', 'participants', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Participant', 'Participant has etherAddress', 'Participant has amount', 'Ai', '', 'enter', 'collectFees', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 10 finney', 'If msg value is greater then 100 ether', 'collectedFees increments of msg value minus 100 ether', 'amount is equal to 100 ether', 'amount is equal to msg value', 'participants length increments of 1', 'participants idx etherAddress is equal to msg sender', 'participants idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 15', 'balance increments of amount minus amount divided by 15', 'collectedFees increments of amount', 'While balance is greater then participants payoutIdx amount multiplied by 2', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', 'owner is equal to _owner']"
ResetPonzi6,"['ResetPonzi', 'persons', 'niceGuys', 'payoutIdx', 'currentNiceGuyIdx', 'investor', 'currentNiceGuy', 'ngidx', 'idx', 'Person', 'NiceGuy', 'Person has addr', 'NiceGuy has addr2', 'ResetPonzi', '', 'enter', 'currentNiceGuy is equal to msg sender', 'If msg value is different from 9 divided by 10 ether', 'If investor is greater then 8', 'niceGuys length increments of 1', 'niceGuys ngidx addr2 is equal to msg sender', 'If investor corresponds to 10', 'currentNiceGuy is equal to niceGuys currentNiceGuyIdx addr2', 'currentNiceGuyIdx increments of 1', 'If investor is less then 9', 'persons length increments of 1', 'persons idx addr is equal to msg sender', 'investor increments of 1', 'If investor corresponds to 11', 'investor is equal to 0', 'While this balance is greater then 10 divided by 10 ether', 'payoutIdx increments of 1']"
ProtectTheCastle3,"['ProtectTheCastle', 'jester', 'lastReparation', 'piggyBank', 'collectedFee', 'citizensAddresses', 'citizensAmounts', 'totalCitizens', 'lastCitizenPaid', 'bribedCitizen', 'round', 'amountAlreadyPaidBack', 'amountInvested', 'SIX_HOURS', 'amount', 'ProtectTheCastle', 'repairTheCastle', '', 'newBribedCitizen', 'collectFee', 'newJester', 'bribedCitizen is equal to msg sender', 'jester is equal to msg sender', 'lastReparation is equal to block timestamp', 'amountAlreadyPaidBack is equal to 0', 'amountInvested is equal to 0', 'totalCitizens is equal to 0', 'If amount is less then 10 finney', 'If amount is greater then 100 ether', 'amount is equal to 100 ether', 'If lastReparation plus SIX_HOURS is less then block timestamp', 'If totalCitizens corresponds to 1', 'If totalCitizens corresponds to 2', 'If totalCitizens is greater or equal to 3', 'piggyBank is equal to 0', 'jester is equal to msg sender', 'lastReparation is equal to block timestamp', 'totalCitizens increments of 1', 'amountInvested increments of amount', 'piggyBank increments of amount', 'collectedFee increments of amount multiplied by 3 divided by 100', 'round increments of 1', 'lastReparation is equal to block timestamp', 'totalCitizens increments of 1', 'amountInvested increments of amount', 'piggyBank increments of ', 'collectedFee increments of amount multiplied by 3 divided by 100', 'While  is less then  Invalid symbol ', 'amountAlreadyPaidBack increments of ', 'lastCitizenPaid increments of 1', 'If msg sender corresponds to bribedCitizen', 'bribedCitizen is equal to newBribedCitizen', 'If msg sender corresponds to bribedCitizen', 'If msg sender corresponds to jester', 'jester is equal to newJester']"
NoFeePonzi,"['NoFeePonzi', 'MIN_VALUE', 'MAX_VALUE', 'RET_MUL', 'RET_DIV', 'payouts', 'payoutIndex', 'payoutTotal', 'entryIndex', 'Payout', 'Payout has addr', 'Payout has yield', 'NoFeePonzi', '', 'If  Invalid symbol ', 'payouts length increments of 1', 'payouts entryIndex addr is equal to msg sender', 'payouts entryIndex yield is equal to  divided by RET_DIV', 'While payouts payoutIndex yield is less then this balance', 'payoutTotal increments of payouts payoutIndex yield', 'payoutIndex increments of 1']"
x15v2,"['x15', 'onlyowner', 'participants', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'idx', 'transactionAmount', 'Participant', 'Participant has etherAddress', 'Participant has amount', 'Doubler', '', 'enter', 'collectFees', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 ether', 'participants length increments of 1', 'participants idx etherAddress is equal to msg sender', 'participants idx amount is equal to msg value', 'If idx is different from 0', 'collectedFees increments of msg value divided by 30', 'balance increments of msg value', 'collectedFees increments of msg value', 'If balance is greater then participants payoutIdx amount multiplied by 2', 'balance decreases of participants payoutIdx amount multiplied by 2', 'payoutIdx increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', 'owner is equal to _owner']"
GreedPit,"['GreedPit', 'onlyowner', 'Jump', 'Rescue', 'NewHero', 'owner', 'balance', 'uniqueUsers', 'usersProfits', 'rescues', 'collectedFees', 'jumpFee', 'baseMultiplier', 'maxMultiplier', 'payoutOrder', 'rescueRecord', 'timeOfLastDeposit', 'hero', 'users', 'entries', 'dValue', 'tokensToUse', 'tokensUsed', 'randMultiplier', 'currentEntries', 'finalMultiplier', 'saviour', 'entryPayout', 'entryDeposit', 'profit', 'saviourShare', 'isHero', 'payout', 'FACTOR', 'factor', 'lastBlockNumber', 'hashVal', 'User', 'Entry', 'User has id', 'User has addr', 'User has nickname', 'User has rescueCount', 'User has rescueTokens', 'Entry has entryAddress', 'Entry has deposit', 'Entry has payout', 'Entry has tokens', 'GreedPit', '', 'init', 'jumpIn', 'rand', 'addNewUser', 'collectFees', 'changeOwner', 'changeBaseMultiplier', 'changeMaxMultiplier', 'changeFee', 'setNickname', 'currentBalance', 'heroOfThePit', 'userName', 'totalRescues', 'multipliers', 'pitFee', 'nextPayoutGoal', 'unclaimedFees', 'totalEntries', 'totalUsers', 'awaitingPayout', 'entryDetails', 'userId', 'userTokens', 'userRescues', 'userProfits', 'recycle', 'owner is equal to msg sender', 'If msg sender corresponds to owner', 'If msg value is less then 100 finney', 'If msg value is greater then 5', 'timeOfLastDeposit is equal to now', 'If msg value is greater then 50 ether', 'If this balance is greater or equal to balance plus collectedFees plus msg value', 'dValue is equal to 50 ether', 'dValue is equal to msg value', 'randMultiplier is equal to ', 'randMultiplier is equal to ', 'randMultiplier is equal to ', 'While tokensToUse is greater then 0 Invalid symbol ', 'Invalid symbol tokensToUse', 'Invalid symbol tokensUsed', 'If finalMultiplier is greater then maxMultiplier', 'finalMultiplier is equal to maxMultiplier', 'If msg value is less then 50 ether', 'If msg value is less then 50 ether', 'msg sender rescueTokens decreases of tokensUsed', 'balance increments of  divided by 100', 'collectedFees increments of  divided by 100', 'While balance is greater then entries payoutOrder payout', 'saviour is equal to False', 'If msg sender addr is different from entries payoutOrder entryAddress', 'Invalid symbol msg sender rescueCount', 'If entryDeposit is greater or equal to 1 ether', 'msg sender rescueTokens increments of ', 'msg sender rescueTokens increments of ', 'saviour is equal to True', 'isHero is equal to entries payoutOrder entryAddress corresponds to hero', 'If saviour Invalid symbol  Invalid symbol  Invalid symbol  Invalid symbol ', 'If dValue is less then 10 ether', 'saviourShare is equal to 3 plus rand', 'If dValue is greater or equal to 10 ether Invalid symbol ', 'saviourShare is equal to 7 plus rand', 'If dValue is greater or equal to 25 ether Invalid symbol ', 'saviourShare is equal to 12 plus rand', 'If dValue is greater or equal to 40 ether', 'saviourShare is equal to rand', 'saviourShare is multiplied by profit divided by 100', 'balance decreases of entryPayout', 'usersProfits increments of entryPayout', 'Invalid symbol rescues', 'Invalid symbol payoutOrder', 'If saviour Invalid symbol msg sender rescueCount is greater then rescueRecord', 'rescueRecord is equal to msg sender rescueCount', 'hero is equal to msg sender', 'If users Address addr corresponds to address', 'users Address id is equal to ', 'users Address addr is equal to Address', 'users Address nickname is equal to UnnamedPlayer', 'users Address rescueCount is equal to 0', 'users Address rescueTokens is equal to 0', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', 'owner is equal to newOwner', 'If multi is less then 110 Invalid symbol ', 'baseMultiplier is equal to multi', 'If multi is less then 200 Invalid symbol ', 'maxMultiplier is equal to multi', 'If fee is less then 0 Invalid symbol ', 'jumpFee is equal to fee', 'If  is greater or equal to 2 Invalid symbol ', 'msg sender nickname is equal to name', 'pitBalance is equal to balance divided by 1 finney', 'info is equal to The balance of the pit in Finneys (contract balance minus fees).', 'theHero is equal to hero', 'nickname is equal to users theHero nickname', 'peopleSaved is equal to rescueRecord', 'info is equal to The current rescue record holder. All hail!', 'nickname is equal to users Address nickname', 'rescueCount is equal to rescues', 'info is equal to The number of times that people have been rescued from the pit (aka the number of times people made a profit).', 'BaseMultiplier is equal to baseMultiplier', 'MaxMultiplier is equal to maxMultiplier', 'info is equal to The multipliers applied to all deposits: the final multiplier is a random number between the multpliers shown divided by 100. By default x1.1~x1.5 (up to x2 if rescue tokens are used, granting +0.1 per token). It determines the amount of money you will get when rescued (a saviour share might be deducted).', 'feePercentage is equal to jumpFee', 'info is equal to The fee percentage applied to all deposits. It can change to speed payouts (max 10%).', 'finneys is equal to  divided by 1 finney', 'info is equal to The amount of Finneys (Ethers * 1000) that need to be deposited for the next payout to be executed.', 'ethers is equal to collectedFees divided by 1 ether', 'info is equal to The amount of Ethers obtained through fees that have not yet been collected by the owner.', 'count is equal to entries length', 'info is equal to The number of times that people have jumped into the pit.', 'users is equal to uniqueUsers', 'info is equal to The number of unique users that have joined the pit.', 'count is equal to entries length minus payoutOrder', 'info is equal to The number of people waiting to be saved.', 'If index is less or equal to entries length', 'user is equal to entries index entryAddress', 'nickName is equal to entries index entryAddress nickname', 'deposit is equal to entries index deposit divided by 1 finney', 'payout is equal to entries index payout divided by 1 finney', 'tokensUsed is equal to entries index tokens', 'info is equal to Entry info: user address, name, expected payout in Finneys (approximate), rescue tokens used.', 'id is equal to users user id', 'info is equal to The id of the user, represents the order in which he first joined the pit.', 'tokens is equal to ', 'info is equal to The number of Rescue Tokens the user has. Tokens are awarded when your deposits save people, and used automatically on your next deposit. They provide a 0.1 multiplier increase per token. (+0.5 max)', 'rescueCount is equal to ', 'info is equal to The number of times the user has rescued someone from the pit.', 'profits is equal to usersProfits divided by 1 finney', 'info is equal to The combined earnings of all users in Finney.', 'If now is greater or equal to timeOfLastDeposit plus 10 weeks', 'If balance is greater then 0']"
SwarmRedistribution4,"['RES', 'SwarmRedistribution', 'SwarmRedistribution inherits from RES', 'onlyJohan', 'Transfer', 'Bought', 'Sold', 'BoughtViaJohan', 'Swarm', 'name', 'symbol', 'decimals', 'totalSupply', 'balanceOf', 'JohanNygren', 'dividendPathways', 'totalBasicIncome', 'taxRate', 'swarmTree', 'inSwarmTree', 'JohanInSwarm', 'taxCollected', 'sentAmount', 'i', 'timeStamp', 'node', 'share', 'i', 'node', 'parent', 'index', 'isJohan', 'JohanWasInSwarm', 'i', 'dividendPathway', 'Node', 'dividendPathway has from', 'dividendPathway has amount', 'dividendPathway has timeStamp', 'Node has node', 'Node has parent', 'Node has index', 'RES', 'buy', 'SwarmRedistribution', 'changeJohanNygrensAddress', 'buyViaJohan', 'sell', 'transfer', 'swarmRedistribution', 'iterateThroughSwarm', 'doSwarm', 'removeDividendPathway', 'name is equal to RES', 'symbol is equal to RES', 'decimals is equal to 18', ' is equal to msg value', 'totalSupply increments of msg value', 'taxRate is equal to 20', 'JohanNygren is equal to 0x948176CB42B65d835Ee4324914B104B66fB93B52', 'If msg sender is different from JohanNygren', 'JohanNygren is equal to _newAddress', ' is equal to msg value', 'totalSupply increments of msg value', 'If  is less then _value', ' decreases of _value', 'totalSupply decreases of _value', 'If _to corresponds to msg sender', 'If  is less then _value', 'If  plus _value is less then ', 'If swarmRedistribution corresponds to True', 'sentAmount is equal to _value', 'sentAmount is equal to _value minus taxCollected', ' decreases of sentAmount', ' increments of _value minus taxCollected', 'If swarmTree length is different from 0', 'If dividendPathways _node length is different from 0', None, 'i is less then dividendPathways _node length', 'If  corresponds to False', 'If timeStamp is less or equal to _timeStamp', 'If dividendPathways _node i from corresponds to JohanNygren', 'JohanInSwarm is equal to True', '', 'share is equal to _taxCollected', 'share is equal to 0', None, 'i is less then swarmTree length', 'If node corresponds to JohanNygren', 'isJohan is equal to True', '', ' increments of share', ' increments of share', 'If dividendPathways parent index amount minus _taxCollected is greater then 0', 'dividendPathways parent index amount decreases of _taxCollected', '', 'Invalid symbol swarmTree', 'Invalid symbol JohanInSwarm', 'If not JohanWasInSwarm', 'Invalid symbol dividendPathways node index', None, 'i is less then dividendPathways node length minus 1', ' is equal to ', 'Invalid symbol dividendPathways node length']"
BalancedPonzi1,"['BalancedPonzi', 'persons', 'niceGuys', 'payoutIdx', 'currentNiceGuyIdx', 'investor', 'currentNiceGuy', 'beta', 'ngidx', 'idx', 'Person', 'NiceGuy', 'Person has addr', 'NiceGuy has addr2', 'BalancedPonzi', '', 'funnel', 'currentNiceGuy is equal to msg sender', 'beta is equal to msg sender', 'If msg value is different from 9 ether', 'If investor is greater then 8', 'niceGuys length increments of 1', 'niceGuys ngidx addr2 is equal to msg sender', 'If investor corresponds to 10', 'currentNiceGuy is equal to niceGuys currentNiceGuyIdx addr2', 'currentNiceGuyIdx increments of 1', 'If investor is less then 9', 'persons length increments of 1', 'persons idx addr is equal to msg sender', 'investor increments of 1', 'If investor corresponds to 11', 'investor is equal to 0', 'While this balance is greater then 10 ether', 'payoutIdx increments of 1']"
LittleCactus,"['LittleCactus', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'LittleCactus', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 divided by 100 ether', 'If msg value is greater then 50 ether', 'amount is equal to 50 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 140', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
SmartRevshare2,"['Managed', 'OfficialWebsite', 'SmartRevshare', 'OfficialWebsite inherits from Managed', 'SmartRevshare inherits from OfficialWebsite', 'onlyManager', 'manager', 'Invest', 'Payout', 'currentManager', 'officialWebsite', 'investors', 'payoutIdx', 'currentManager', 'balance', 'payoutValue', 'currDay', 'idx', 'Investor', 'Investor has addr', 'Investor has value', 'Investor has lastDay', 'Investor has leftPayDays', 'Managed', 'setOfficialWebsite', 'SmartRevshare', 'found', '', 'invest', 'payout', 'getDay', 'calculateROI', 'currentManager is equal to msg sender', 'If msg sender is different from currentManager', 'officialWebsite is equal to url', 'If msg sender corresponds to currentManager', 'currentManager is equal to msg sender', 'balance increments of msg value', 'balance increments of msg value', 'If msg value is less then 100 finney', 'balance increments of msg value multiplied by 99 divided by 100', None, 'idx is less then investors length', 'payoutValue is equal to investors idx value divided by 100', 'If balance is less then payoutValue', 'If investors idx lastDay is greater or equal to currDay', 'If investors idx leftPayDays is less or equal to 0', 'payoutIdx is equal to idx', 'investors idx lastDay is equal to currDay', 'investors idx leftPayDays decreases of 1', 'balance decreases of payoutValue', 'If msg value is less or equal to 1 ether', 'If msg value is less or equal to 10 ether', 'If msg value is less or equal to 100 ether']"
PlusOnePonzi2,"['plusOnePonzi', 'VALUE', 'payouts', 'payoutIndex', 'payoutTotal', 'entryIndex', 'Payout', 'Payout has addr', 'Payout has yield', 'PlusOnePonzi', '', 'If msg value is less then VALUE', 'payouts length increments of 1', 'payouts entryIndex addr is equal to msg sender', 'payouts entryIndex yield is equal to 10 ether', 'While payouts payoutIndex yield is less then this balance', 'payoutTotal increments of payouts payoutIndex yield', 'payoutIndex increments of 1']"
SwarmRedistribution2,"['RES', 'SwarmRedistribution', 'SwarmRedistribution inherits from RES', 'onlyJohan', 'isOpen', 'Transfer', 'Bought', 'Sold', 'BoughtViaJohan', 'Swarm', 'name', 'symbol', 'decimals', 'totalSupply', 'balanceOf', 'JohanNygren', 'campaignOpen', 'dividendPathways', 'totalBasicIncome', 'taxRate', 'swarmTree', 'inSwarmTree', 'JohanInSwarm', 'taxCollected', 'sentAmount', 'i', 'timeStamp', 'node', 'share', 'i', 'node', 'parent', 'index', 'isJohan', 'JohanWasInSwarm', 'i', 'dividendPathway', 'Node', 'dividendPathway has from', 'dividendPathway has amount', 'dividendPathway has timeStamp', 'Node has node', 'Node has parent', 'Node has index', 'RES', 'SwarmRedistribution', 'changeJohanNygrensAddress', 'closeCampaign', 'buy', 'buyViaJohan', 'sell', 'transfer', 'swarmRedistribution', 'iterateThroughSwarm', 'doSwarm', 'removeDividendPathway', 'name is equal to RES', 'symbol is equal to RES', 'decimals is equal to 18', 'taxRate is equal to 20', 'JohanNygren is equal to 0x948176CB42B65d835Ee4324914B104B66fB93B52', 'campaignOpen is equal to True', 'If msg sender is different from JohanNygren', 'If campaignOpen is different from True', 'JohanNygren is equal to _newAddress', 'campaignOpen is equal to False', ' is equal to msg value', 'totalSupply increments of msg value', ' is equal to msg value', 'totalSupply increments of msg value', 'If  is less then _value', ' decreases of _value', 'If not msg sender send', 'totalSupply decreases of _value', 'If _to corresponds to msg sender', 'If  is less then _value', 'If  plus _value is less then ', 'If swarmRedistribution corresponds to True', 'sentAmount is equal to _value', 'sentAmount is equal to _value minus taxCollected', ' decreases of sentAmount', ' increments of _value minus taxCollected', 'If swarmTree length is different from 0', 'If dividendPathways _node length is different from 0', None, 'i is less then dividendPathways _node length', 'If  corresponds to False', 'If timeStamp is less or equal to _timeStamp', 'If dividendPathways _node i from corresponds to JohanNygren', 'JohanInSwarm is equal to True', ' is equal to True', '', 'share is equal to _taxCollected', 'share is equal to 0', None, 'i is less then swarmTree length', 'If node corresponds to JohanNygren', 'isJohan is equal to True', '', ' increments of share', ' increments of share', 'If dividendPathways parent index amount minus _taxCollected is greater then 0', 'dividendPathways parent index amount decreases of _taxCollected', ' is equal to False', '', 'Invalid symbol swarmTree', 'Invalid symbol JohanInSwarm', 'If not JohanWasInSwarm', 'Invalid symbol dividendPathways node index', None, 'i is less then dividendPathways node length minus 1', ' is equal to ', 'Invalid symbol dividendPathways node length']"
Rubixi,"['Rubixi', 'onlyowner', 'balance', 'collectedFees', 'feePercent', 'pyramidMultiplier', 'payoutOrder', 'creator', 'participants', '_fee', 'payoutToSend', 'feesToCollect', 'Participant', 'Participant has etherAddress', 'Participant has payout', 'DynamicPyramid', '', 'init', 'addPayout', 'collectAllFees', 'collectFeesInEther', 'collectPercentOfFees', 'changeOwner', 'changeMultiplier', 'changeFeePercentage', 'currentMultiplier', 'currentFeePercentage', 'currentPyramidBalanceApproximately', 'nextPayoutWhenPyramidBalanceTotalsApproximately', 'feesSeperateFromBalanceApproximately', 'totalParticipants', 'numberOfParticipantsWaitingForPayout', 'participantDetails', 'creator is equal to msg sender', 'If msg sender corresponds to creator', 'If msg value is less then 1 ether', 'collectedFees increments of msg value', 'If msg value is greater or equal to 50 ether', '_fee is divided by 2', 'If participants length corresponds to 10', 'pyramidMultiplier is equal to 200', 'If participants length corresponds to 25', 'pyramidMultiplier is equal to 150', 'balance increments of  divided by 100', 'collectedFees increments of  divided by 100', 'While balance is greater then participants payoutOrder payout', 'balance decreases of participants payoutOrder payout', 'payoutOrder increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', '_amt is multiplied by 1 ether', 'If _amt is greater then collectedFees', 'If collectedFees corresponds to 0', 'collectedFees decreases of _amt', 'If collectedFees corresponds to 0 Invalid symbol ', 'collectedFees decreases of feesToCollect', 'creator is equal to _owner', 'If _mult is greater then 300 Invalid symbol ', 'pyramidMultiplier is equal to _mult', 'If _fee is greater then 10', 'feePercent is equal to _fee', 'multiplier is equal to pyramidMultiplier', 'info is equal to This multiplier applies to you as soon as transaction is received, may be lowered to hasten payouts or increased if payouts are fast enough. Due to no float or decimals, multiplier is x100 for a fractional multiplier e.g. 250 is actually a 2.5x multiplier. Capped at 3x max and 1.2x min.', 'fee is equal to feePercent', 'info is equal to Shown in % form. Fee is halved(50%) for amounts equal or greater than 50 ethers. (Fee may change, but is capped to a maximum of 10%)', 'pyramidBalance is equal to balance divided by 1 ether', 'info is equal to All balance values are measured in Ethers, note that due to no decimal placing, these values show up as integers only, within the contract itself you will get the exact decimal value you are supposed to', 'balancePayout is equal to participants payoutOrder payout divided by 1 ether', 'fees is equal to collectedFees divided by 1 ether', 'count is equal to participants length', 'count is equal to participants length minus payoutOrder', 'If orderInPyramid is less or equal to participants length', 'Address is equal to participants orderInPyramid etherAddress', 'Payout is equal to participants orderInPyramid payout divided by 1 ether']"
CrazyEarning,"['CrazyEarning', 'onlyowner', 'crazyearners', 'deposits_until_jackpot', 'totalearners', 'feerate', 'profitrate', 'jackpotrate', 'alpha', 'feeamount', 'balance', 'totaldeposited', 'totalmoneyearned', 'owner', 'amount', 'tot_pl', 'payout', 'nr', 'earnerarray', 'earnerarray has etherAddress', 'earnerarray has amount', 'CrazyEarning', '', 'enter', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 400 finney', 'totalearners is equal to tot_pl plus 1', 'deposits_until_jackpot is equal to 20 minus ', 'crazyearners length increments of 1', 'crazyearners tot_pl etherAddress is equal to msg sender', 'crazyearners tot_pl amount is equal to amount', 'feeamount is equal to amount multiplied by alpha divided by 100', 'balance increments of amount', 'totaldeposited increments of amount', 'If feeamount is different from 0', 'If balance is greater then feeamount', 'balance decreases of feeamount', 'totalmoneyearned increments of feeamount', 'If alpha is less then 100', 'alpha increments of 30', 'alpha is equal to 100', 'While balance is greater then crazyearners nr amount multiplied by 200 divided by 100 Invalid symbol ', 'If nr Invalid symbol 10 corresponds to 0 Invalid symbol ', 'payout is equal to crazyearners nr amount multiplied by 700 divided by 100', 'balance decreases of crazyearners nr amount multiplied by 700 divided by 100', 'totalmoneyearned increments of crazyearners nr amount multiplied by 700 divided by 100', 'payout is equal to crazyearners nr amount multiplied by 200 divided by 100', 'balance decreases of crazyearners nr amount multiplied by 200 divided by 100', 'totalmoneyearned increments of crazyearners nr amount multiplied by 200 divided by 100', 'nr increments of 1']"
x15v3,"['x15', 'onlyowner', 'participants', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'idx', 'transactionAmount', 'Participant', 'Participant has etherAddress', 'Participant has amount', 'Doubler', '', 'enter', 'collectFees', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 ether', 'participants length increments of 1', 'participants idx etherAddress is equal to msg sender', 'participants idx amount is equal to msg value', 'If idx is different from 0', 'collectedFees increments of msg value divided by 30', 'balance increments of msg value', 'collectedFees increments of msg value', 'If balance is greater then participants payoutIdx amount multiplied by 2', 'balance decreases of participants payoutIdx amount multiplied by 2', 'payoutIdx increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', 'owner is equal to _owner']"
FastRealisticPyramid1,"['FastRealisticPyramid', 'onlyowner', 'person', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'FastRealisticPyramid', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'person length increments of 1', 'person idx etherAddress is equal to msg sender', 'person idx amount is equal to msg value', 'If idx is different from 0', 'collectedFees is equal to msg value divided by 10', 'collectedFees is equal to 0', 'balance is equal to balance plus ', 'balance is equal to msg value', 'If balance is greater then person payoutIdx amount multiplied by 7 divided by 5', 'balance decreases of person payoutIdx amount multiplied by 7 divided by 5', 'payoutIdx increments of 1', 'owner is equal to _owner']"
EthVentures1,"['EthVentures', 'manager', 'investors', 'total_investors', 'fees', 'balance', 'totaldeposited', 'totalpaidout', 'totaldividends', 'Message_To_Investors', 'owner', 'PRE_inv_length', 'PRE_payout', 'PRE_amount', 'PRE_i', 'amount', 'inv_length', 'alreadyinvestor', 'alreadyinvestor_id', 'i', 'k', 'InvestorArray', 'InvestorArray has etherAddress', 'InvestorArray has amount', 'InvestorArray has percentage_ownership', 'EthVentures', '', 'Enter', 'NewOwner', 'Emergency', 'NewMessage', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 2 ether', 'totalpaidout increments of PRE_amount divided by 100', 'PRE_amount is equal to PRE_amount minus PRE_amount divided by 100', 'If PRE_inv_length is different from 0 Invalid symbol ', None, 'PRE_i is less then PRE_inv_length', 'PRE_payout is equal to PRE_amount multiplied by investors PRE_i percentage_ownership divided by 10000000000', 'totalpaidout increments of PRE_payout', 'totaldividends increments of PRE_payout', 'fees is equal to amount divided by 100', 'balance increments of amount', 'totaldeposited increments of amount', 'total_investors is equal to inv_length plus 1', 'investors length increments of 1', None, 'i is less then inv_length', 'If msg sender corresponds to investors i etherAddress', 'alreadyinvestor is equal to True', 'alreadyinvestor_id is equal to i', 'If alreadyinvestor corresponds to False', 'investors inv_length etherAddress is equal to msg sender', 'investors inv_length amount is equal to amount', 'investors inv_length percentage_ownership is equal to investors inv_length amount divided by totaldeposited multiplied by 10000000000', None, 'k is less then inv_length', 'investors k percentage_ownership is equal to investors k amount divided by totaldeposited multiplied by 10000000000', 'investors alreadyinvestor_id amount increments of amount', 'investors alreadyinvestor_id percentage_ownership is equal to investors alreadyinvestor_id amount divided by totaldeposited multiplied by 10000000000', 'If fees is different from 0', 'If balance is greater then fees', 'balance decreases of fees', 'totalpaidout increments of fees', 'owner is equal to new_owner', 'If balance is different from 0', 'balance is equal to 0', 'Message_To_Investors is equal to new_sms']"
DynamicPyramid,"['DynamicPyramid', 'onlyowner', 'balance', 'collectedFees', 'feePercent', 'pyramidMultiplier', 'payoutOrder', 'creator', 'participants', '_fee', 'payoutToSend', 'feesToCollect', 'Participant', 'Participant has etherAddress', 'Participant has payout', 'DynamicPyramid', '', 'init', 'addPayout', 'collectAllFees', 'collectFeesInEther', 'collectPercentOfFees', 'changeOwner', 'changeMultiplier', 'changeFeePercentage', 'currentMultiplier', 'currentFeePercentage', 'currentPyramidBalanceApproximately', 'nextPayoutWhenPyramidBalanceTotalsApproximately', 'feesSeperateFromBalanceApproximately', 'totalParticipants', 'numberOfParticipantsWaitingForPayout', 'participantDetails', 'creator is equal to msg sender', 'If msg sender corresponds to creator', 'If msg value is less then 1 ether', 'collectedFees increments of msg value', 'If msg value is greater or equal to 50 ether', '_fee is divided by 2', 'If participants length corresponds to 10', 'pyramidMultiplier is equal to 200', 'If participants length corresponds to 25', 'pyramidMultiplier is equal to 150', 'balance increments of  divided by 100', 'collectedFees increments of  divided by 100', 'While balance is greater then participants payoutOrder payout', 'balance decreases of participants payoutOrder payout', 'payoutOrder increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', '_amt is multiplied by 1 ether', 'If _amt is greater then collectedFees', 'If collectedFees corresponds to 0', 'collectedFees decreases of _amt', 'If collectedFees corresponds to 0 Invalid symbol ', 'collectedFees decreases of feesToCollect', 'creator is equal to _owner', 'If _mult is greater then 300 Invalid symbol ', 'pyramidMultiplier is equal to _mult', 'If _fee is greater then 10', 'feePercent is equal to _fee', 'multiplier is equal to pyramidMultiplier', 'info is equal to This multiplier applies to you as soon as transaction is received, may be lowered to hasten payouts or increased if payouts are fast enough. Due to no float or decimals, multiplier is x100 for a fractional multiplier e.g. 250 is actually a 2.5x multiplier. Capped at 3x max and 1.2x min.', 'fee is equal to feePercent', 'info is equal to Shown in % form. Fee is halved(50%) for amounts equal or greater than 50 ethers. (Fee may change, but is capped to a maximum of 10%)', 'pyramidBalance is equal to balance divided by 1 ether', 'info is equal to All balance values are measured in Ethers, note that due to no decimal placing, these values show up as integers only, within the contract itself you will get the exact decimal value you are supposed to', 'balancePayout is equal to participants payoutOrder payout divided by 1 ether', 'fees is equal to collectedFees divided by 1 ether', 'count is equal to participants length', 'count is equal to participants length minus payoutOrder', 'If orderInPyramid is less or equal to participants length', 'Address is equal to participants orderInPyramid etherAddress', 'Payout is equal to participants orderInPyramid payout divided by 1 ether']"
TimeGame,"['timegame', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'TWELEVE_HOURS', 'regeneration', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'timegame', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'regeneration is equal to block timestamp', 'If regeneration plus TWELEVE_HOURS is less then block timestamp', 'If msg value is less then 1 ether', 'If msg value is greater then 50 ether', 'amount is equal to 50 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'regeneration is equal to block timestamp', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 200', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
CoinFlip,"['Coinflip', 'gamblerlist', 'Total_Players', 'FeeRate', 'Bankroll', 'Total_Deposits', 'Total_Payouts', 'Outcome', 'MinDeposit', 'owner', 'Fees', 'amount', 'payout', 'list_length', 'minimal', 'Times', 'i', 'gamblerarray', 'gamblerarray has etherAddress', 'gamblerarray has amount', 'Coinflip', '', 'enter', 'owner is equal to 0xEe462A6717f17C57C826F1ad9b4d3813495296C9', 'If msg value is greater then 10 finney', 'Total_Players is equal to list_length plus 1', 'gamblerlist length increments of 1', 'gamblerlist list_length etherAddress is equal to msg sender', 'gamblerlist list_length amount is equal to amount', 'Total_Deposits increments of amount', 'Fees is equal to amount multiplied by FeeRate divided by 100', 'amount decreases of amount multiplied by FeeRate divided by 100', 'Bankroll increments of amount', 'If Fees is different from 0', 'If Fees is less then minimal', 'Total_Payouts increments of Fees', None, 'i is less then Times', 'If Fees is greater then 0', 'Total_Payouts increments of Fees', 'Fees decreases of minimal', 'If msg value is greater or equal to MinDeposit Invalid symbol ', 'If  Invalid symbol 2 corresponds to 0', 'Total_Payouts increments of Bankroll', 'Bankroll is equal to 0', 'Outcome is equal to HEADS', 'Outcome is equal to TAILS', ""Outcome is equal to Error, the coin wasn't flipped, try again!""]"
EthVenturePlugin,"['EthVenturePlugin', 'owner', 'Fees', 'minimal', 'Times', 'i', 'EthVenturePlugin', '', 'owner is equal to 0xEe462A6717f17C57C826F1ad9b4d3813495296C9', 'If Fees is different from 0', 'If Fees is less then minimal', None, 'i is less then Times', 'If Fees is greater then 0', 'Fees decreases of minimal']"
DepositHolder2,"['DepositHolder', 'owner_only', 'auditor_only', 'Claim', 'GUARANTEE_PERIOD', 'owner', 'auditor', 'entries', 'oldestHash', 'newestHash', 'paidOut', 'totalPaidOut', 'depositCount', 'required', 'expires', 'i', 'recovered', 'ptr', 'count', 'i', 'entry', 'Entry', 'Entry has next', 'Entry has deposit', 'Entry has expires', 'DepositHolder', 'deposit', 'extend', 'withdraw', 'recover', 'nextWithdrawal', 'check', 'disburse', 'destroy', 'owner is equal to msg sender', 'auditor is equal to owner', 'If msg sender is different from owner', 'If msg sender is different from auditor', 'If msg value is less then required', 'If msg value is greater then required', 'If not msg sender send', 'If oldestHash corresponds to 0', 'oldestHash is equal to ', 'newestHash is equal to ', 'entries newestHash next is equal to ', None, 'i is less then values length minus 1', 'If entries values i expires is different from 0', ' is equal to Entry', 'newestHash is equal to ', 'If entries newestHash expires is different from 0', ' is equal to Entry', 'depositCount increments of values length', 'If not msg sender send', None, 'i is less then max Invalid symbol  Invalid symbol ', 'recovered increments of entries ptr deposit', 'ptr is equal to entries ptr next', 'count increments of 1', 'oldestHash is equal to ptr', 'If oldestHash corresponds to 0', 'newestHash is equal to 0', 'If paidOut is greater then 0', 'If recovered is greater then paidOut', 'recovered decreases of paidOut', 'paidOut is equal to 0', 'paidOut decreases of recovered', 'recovered is equal to 0', 'depositCount decreases of count', 'If hash corresponds to 0', 'hash is equal to oldestHash', 'next is equal to hash', 'when is equal to entries hash expires', 'While next is different from 0 Invalid symbol ', 'count increments of 1', 'value increments of entries next deposit', 'next is equal to entries next next', 'expires is equal to entry expires', 'deposit is equal to entry deposit', 'paidOut increments of amount', 'totalPaidOut increments of amount', 'If not addr send', 'If depositCount is greater then 0']"
Thesimplegame,"['thesimplegame', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'thesimplegame', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 divided by 100 ether', 'If msg value is greater then 10 ether', 'amount is equal to 10 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 125', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
SwarmRedistribution,"['RES', 'SwarmRedistribution', 'SwarmRedistribution inherits from RES', 'onlyJohan', 'isOpen', 'Transfer', 'Bought', 'Sold', 'BoughtViaJohan', 'Swarm', 'name', 'symbol', 'decimals', 'totalSupply', 'balanceOf', 'JohanNygren', 'campaignOpen', 'dividendPathways', 'totalBasicIncome', 'taxRate', 'swarmTree', 'inSwarmTree', 'JohanInSwarm', 'taxCollected', 'sentAmount', 'i', 'timeStamp', 'node', 'share', 'i', 'node', 'parent', 'index', 'isJohan', 'JohanWasInSwarm', 'i', 'dividendPathway', 'Node', 'dividendPathway has from', 'dividendPathway has amount', 'dividendPathway has timeStamp', 'Node has node', 'Node has parent', 'Node has index', 'RES', 'SwarmRedistribution', 'changeJohanNygrensAddress', 'closeCampaign', 'buy', 'buyViaJohan', 'sell', 'transfer', 'swarmRedistribution', 'iterateThroughSwarm', 'doSwarm', 'removeDividendPathway', 'name is equal to RES', 'symbol is equal to RES', 'decimals is equal to 18', 'taxRate is equal to 20', 'JohanNygren is equal to 0x948176CB42B65d835Ee4324914B104B66fB93B52', 'campaignOpen is equal to True', 'If msg sender is different from JohanNygren', 'If campaignOpen is different from True', 'JohanNygren is equal to _newAddress', 'campaignOpen is equal to False', ' increments of msg value', 'totalSupply increments of msg value', ' increments of msg value', 'totalSupply increments of msg value', 'If  is less then _value', ' decreases of _value', 'If not msg sender send', 'totalSupply decreases of _value', 'If _to corresponds to msg sender', 'If  is less then _value', 'If  plus _value is less then ', 'If swarmRedistribution corresponds to True', 'sentAmount is equal to _value', 'sentAmount is equal to _value minus taxCollected', ' decreases of sentAmount', ' increments of _value minus taxCollected', 'If swarmTree length is different from 0', 'If dividendPathways _node length is different from 0', None, 'i is less then dividendPathways _node length', 'If  corresponds to False', 'If timeStamp is less or equal to _timeStamp', 'If dividendPathways _node i from corresponds to JohanNygren', 'JohanInSwarm is equal to True', ' is equal to True', '', 'share is equal to _taxCollected', 'share is equal to 0', None, 'i is less then swarmTree length', 'If node corresponds to JohanNygren', 'isJohan is equal to True', '', ' increments of share', ' increments of share', 'If dividendPathways parent index amount minus _taxCollected is greater then 0', 'dividendPathways parent index amount decreases of _taxCollected', ' is equal to False', '', 'Invalid symbol swarmTree', 'Invalid symbol JohanInSwarm', 'If not JohanWasInSwarm', 'Invalid symbol dividendPathways node index', None, 'i is less then dividendPathways node length minus 1', ' is equal to ', 'Invalid symbol dividendPathways node length']"
EthVentures4,"['EthVentures4', 'manager', 'investors', 'total_investors', 'fees', 'balance', 'totaldeposited', 'totalpaidout', 'totaldividends', 'Message_To_Investors', 'owner', 'PRE_payout', 'PRE_amount', 'PRE_i', 'amount', 'alreadyinvestor', 'alreadyinvestor_id', 'i', 'k', 'InvestorArray', 'InvestorArray has etherAddress', 'InvestorArray has amount', 'InvestorArray has percentage_ownership', 'EthVentures4', '', 'Enter', 'NewOwner', 'Emergency', 'NewMessage', 'NewManualInvestor', 'ManualDeposit', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 2 ether', 'totalpaidout increments of PRE_amount divided by 100', 'PRE_amount decreases of PRE_amount divided by 100', 'If investors length is different from 0 Invalid symbol ', None, 'PRE_i is less then investors length', 'PRE_payout is equal to PRE_amount multiplied by investors PRE_i percentage_ownership divided by 10000000000', 'totalpaidout increments of PRE_payout', 'totaldividends increments of PRE_payout', 'Message_To_Investors is equal to Dividends have been paid out!', 'fees is equal to amount divided by 100', 'totaldeposited increments of amount', 'amount decreases of amount divided by 100', 'balance increments of amount', None, 'i is less then investors length', 'If msg sender corresponds to investors i etherAddress', 'alreadyinvestor is equal to True', 'alreadyinvestor_id is equal to i', 'If alreadyinvestor corresponds to False', 'total_investors is equal to investors length plus 1', 'investors length increments of 1', 'investors length minus 1 etherAddress is equal to msg sender', 'investors length minus 1 amount is equal to amount', 'investors length minus 1 percentage_ownership is equal to amount divided by totaldeposited multiplied by 10000000000', 'Message_To_Investors is equal to New Investor has joined us!', None, 'k is less then investors length', 'investors k percentage_ownership is equal to investors k amount divided by totaldeposited multiplied by 10000000000', 'investors alreadyinvestor_id amount increments of amount', 'investors alreadyinvestor_id percentage_ownership is equal to investors alreadyinvestor_id amount divided by totaldeposited multiplied by 10000000000', 'If fees is different from 0', 'totalpaidout increments of fees', 'owner is equal to new_owner', 'Message_To_Investors is equal to The contract has a new manager!', 'If balance is different from 0', 'balance is equal to 0', 'Message_To_Investors is equal to Emergency Withdraw has been issued!', 'Message_To_Investors is equal to new_sms', 'totaldeposited increments of new_amount', 'total_investors is equal to investors length plus 1', 'investors length increments of 1', 'investors length minus 1 etherAddress is equal to new_investor', 'investors length minus 1 amount is equal to new_amount', 'investors length minus 1 percentage_ownership is equal to new_amount divided by totaldeposited multiplied by 10000000000', 'Message_To_Investors is equal to New manual Investor has been added by the Manager!', 'Message_To_Investors is equal to Manual Deposit received from the Manager']"
DynamicPyramid2,"['DynamicPyramid', 'onlyowner', 'balance', 'collectedFees', 'feePercent', 'pyramidMultiplier', 'payoutOrder', 'creator', 'participants', '_fee', 'payoutToSend', 'feesToCollect', 'Participant', 'Participant has etherAddress', 'Participant has payout', 'DynamicPyramid', '', 'init', 'addPayout', 'collectAllFees', 'collectFeesInEther', 'collectPercentOfFees', 'changeOwner', 'changeMultiplier', 'changeFeePercentage', 'currentMultiplier', 'currentFeePercentage', 'currentPyramidBalanceApproximately', 'nextPayoutWhenPyramidBalanceTotalsApproximately', 'feesSeperateFromBalanceApproximately', 'totalParticipants', 'numberOfParticipantsWaitingForPayout', 'participantDetails', 'creator is equal to msg sender', 'If msg sender corresponds to creator', 'If msg value is less then 1 ether', 'collectedFees increments of msg value', 'If msg value is greater or equal to 50 ether', '_fee is divided by 2', 'If participants length corresponds to 10', 'pyramidMultiplier is equal to 200', 'If participants length corresponds to 25', 'pyramidMultiplier is equal to 150', 'balance increments of  divided by 100', 'collectedFees increments of  divided by 100', 'While balance is greater then participants payoutOrder payout', 'balance decreases of participants payoutOrder payout', 'payoutOrder increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', '_amt is multiplied by 1 ether', 'If _amt is greater then collectedFees', 'If collectedFees corresponds to 0', 'collectedFees decreases of _amt', 'If collectedFees corresponds to 0 Invalid symbol ', 'collectedFees decreases of feesToCollect', 'creator is equal to _owner', 'If _mult is greater then 300 Invalid symbol ', 'pyramidMultiplier is equal to _mult', 'If _fee is greater then 10', 'feePercent is equal to _fee', 'multiplier is equal to pyramidMultiplier', 'info is equal to This multiplier applies to you as soon as transaction is received, may be lowered to hasten payouts or increased if payouts are fast enough. Due to no float or decimals, multiplier is x100 for a fractional multiplier e.g. 250 is actually a 2.5x multiplier. Capped at 3x max and 1.2x min.', 'fee is equal to feePercent', 'info is equal to Shown in % form. Fee is halved(50%) for amounts equal or greater than 50 ethers. (Fee may change, but is capped to a maximum of 10%)', 'pyramidBalance is equal to balance divided by 1 ether', 'info is equal to All balance values are measured in Ethers, note that due to no decimal placing, these values show up as integers only, within the contract itself you will get the exact decimal value you are supposed to', 'balancePayout is equal to participants payoutOrder payout divided by 1 ether', 'fees is equal to collectedFees divided by 1 ether', 'count is equal to participants length', 'count is equal to participants length minus payoutOrder', 'If orderInPyramid is less or equal to participants length', 'Address is equal to participants orderInPyramid etherAddress', 'Payout is equal to participants orderInPyramid payout divided by 1 ether']"
PlusOnePonzi1,"['plusOnePonzi', 'VALUE', 'payouts', 'payoutIndex', 'payoutTotal', 'entryIndex', 'Payout', 'Payout has addr', 'Payout has yield', 'plusOnePonzi', '', 'If msg value is less then VALUE', 'payouts length increments of 1', 'payouts entryIndex addr is equal to msg sender', 'payouts entryIndex yield is equal to 10 ether', 'While payouts payoutIndex yield is less then this balance', 'payoutTotal increments of payouts payoutIndex yield', 'payoutIndex increments of 1']"
EthFactory,"['EthFactory', 'manager', 'depositors', 'Total_Investors', 'Balance', 'Total_Deposited', 'Total_Paid_Out', 'Message', 'owner', 'Amount', 'payment', 'index', 'InvestorArray', 'InvestorArray has EtherAddress', 'InvestorArray has Amount', 'EthFactory', '', 'enter', 'DeleteContract', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is greater then 0', 'Total_Investors is equal to depositors length plus 1', 'depositors length increments of 1', 'depositors length minus 1 EtherAddress is equal to msg sender', 'depositors length minus 1 Amount is equal to Amount', 'Balance increments of Amount', 'Total_Deposited increments of Amount', 'While Balance is greater then  Invalid symbol ', 'If depositors index Amount is different from 0', 'payment is equal to depositors index Amount multiplied by 115 divided by 100', 'Balance decreases of depositors index Amount multiplied by 115 divided by 100', 'Total_Paid_Out increments of depositors index Amount multiplied by 115 divided by 100', 'depositors index Amount is equal to 0', 'Balance is equal to 0']"
NiceGuyPonzi2,"['NiceGuyPonzi', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'niceGuy', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'NiceGuyPonzi', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 divided by 100 ether', 'If msg value is greater then 10 ether', 'amount is equal to 10 ether', 'amount is equal to msg value', 'If niceGuy is less then 10', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'niceGuy increments of 1', 'owner is equal to msg sender', 'niceGuy is equal to 0', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 125', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
ProtectTheCastle2,"['ProtectTheCastle', 'jester', 'lastReparation', 'piggyBank', 'collectedFee', 'citizensAddresses', 'citizensAmounts', 'totalCitizens', 'lastCitizenPaid', 'bribedCitizen', 'round', 'amountAlreadyPaidBack', 'amountInvested', 'SIX_HOURS', 'amount', 'ProtectTheCastle', 'repairTheCastle', '', 'surrender', 'newBribedCitizen', 'collectFee', 'newJester', 'bribedCitizen is equal to msg sender', 'jester is equal to msg sender', 'lastReparation is equal to block timestamp', 'amountAlreadyPaidBack is equal to 0', 'amountInvested is equal to 0', 'totalCitizens is equal to 0', 'If amount is less then 10 finney', 'If amount is greater then 100 ether', 'amount is equal to 100 ether', 'If lastReparation plus SIX_HOURS is less then block timestamp', 'If totalCitizens corresponds to 1', 'If totalCitizens corresponds to 2', 'If totalCitizens is greater or equal to 3', 'piggyBank is equal to 0', 'jester is equal to msg sender', 'lastReparation is equal to block timestamp', 'totalCitizens increments of 1', 'amountInvested increments of amount', 'piggyBank increments of amount', 'collectedFee increments of amount multiplied by 3 divided by 100', 'round increments of 1', 'lastReparation is equal to block timestamp', 'totalCitizens increments of 1', 'amountInvested increments of amount', 'piggyBank increments of ', 'collectedFee increments of amount multiplied by 3 divided by 100', 'While  is less then  Invalid symbol ', 'amountAlreadyPaidBack increments of ', 'lastCitizenPaid increments of 1', 'If msg sender corresponds to bribedCitizen', 'If msg sender corresponds to bribedCitizen', 'bribedCitizen is equal to newBribedCitizen', 'If msg sender corresponds to bribedCitizen', 'If msg sender corresponds to jester', 'jester is equal to newJester']"
NiceGuyTax1,"['NiceGuyTax', 'investors', 'niceGuys', 'payoutIndex', 'currentNiceGuyIndex', 'investorIndex', 'currentNiceGuy', 'index', 'niceGuyIndex', 'Investor', 'NiceGuy', 'Investor has addr', 'NiceGuy has addr', 'NiceGuyTax', '', 'currentNiceGuy is equal to msg sender', 'If msg value is different from 9 ether', 'If investorIndex is less then 8', 'investors length increments of 1', 'investors index addr is equal to msg sender', 'If investorIndex is greater then 7', 'niceGuys length increments of 1', 'niceGuys niceGuyIndex addr is equal to msg sender', 'If investorIndex is greater then 8', 'currentNiceGuy is equal to niceGuys currentNiceGuyIndex addr', 'currentNiceGuyIndex increments of 1', 'If investorIndex is less then 9', 'investorIndex increments of 1', 'investorIndex is equal to 0', 'While this balance is greater or equal to 10 ether', 'payoutIndex increments of 1']"
TheGame2,"['TheGame', 'first_player', 'regeneration', 'jackpot', 'collectedFee', 'playersAddresses', 'playersAmounts', 'totalplayers', 'lastPlayerPaid', 'mainPlayer', 'round', 'amountAlreadyPaidBack', 'amountInvested', 'SIX_HOURS', 'amount', 'TheGame', 'contribute_toTheGame', '', 'restart', 'new_mainPlayer', 'collectFee', 'newfirst_player', 'mainPlayer is equal to msg sender', 'first_player is equal to msg sender', 'regeneration is equal to block timestamp', 'amountAlreadyPaidBack is equal to 0', 'amountInvested is equal to 0', 'totalplayers is equal to 0', 'If amount is less then 1 divided by 2 ether', 'If amount is greater then 25 ether', 'amount is equal to 25 ether', 'If regeneration plus SIX_HOURS is less then block timestamp', 'If totalplayers corresponds to 1', 'If totalplayers corresponds to 2', 'If totalplayers is greater or equal to 3', 'jackpot is equal to 0', 'first_player is equal to msg sender', 'regeneration is equal to block timestamp', 'totalplayers increments of 1', 'amountInvested increments of amount', 'jackpot increments of amount', 'collectedFee increments of amount multiplied by 3 divided by 100', 'round increments of 1', 'regeneration is equal to block timestamp', 'totalplayers increments of 1', 'amountInvested increments of amount', 'jackpot increments of ', 'collectedFee increments of amount multiplied by 3 divided by 100', 'While  is less then  Invalid symbol ', 'amountAlreadyPaidBack increments of ', 'lastPlayerPaid increments of 1', 'If msg sender corresponds to mainPlayer', 'If msg sender corresponds to mainPlayer', 'mainPlayer is equal to new_mainPlayer', 'If msg sender corresponds to mainPlayer', 'If msg sender corresponds to first_player', 'first_player is equal to newfirst_player']"
ResetPonzi2,"['ResetPonzi', 'persons', 'niceGuys', 'payoutIdx', 'currentNiceGuyIdx', 'investor', 'currentNiceGuy', 'beta', 'ngidx', 'idx', 'Person', 'NiceGuy', 'Person has addr', 'NiceGuy has addr2', 'ResetPonzi', '', 'funnel', 'currentNiceGuy is equal to msg sender', 'beta is equal to msg sender', 'If msg value is different from 9 ether', 'If investor is greater then 8', 'niceGuys length increments of 1', 'niceGuys ngidx addr2 is equal to msg sender', 'If investor corresponds to 10', 'currentNiceGuy is equal to niceGuys currentNiceGuyIdx addr2', 'currentNiceGuyIdx increments of 1', 'If investor is less then 9', 'persons length increments of 1', 'persons idx addr is equal to msg sender', 'investor increments of 1', 'If investor corresponds to 11', 'investor is equal to 0', 'While this balance is greater or equal to 10 ether', 'payoutIdx increments of 1']"
DepositHolder1,"['DepositHolder', 'owner_only', 'auditor_only', 'Claim', 'GUARANTEE_PERIOD', 'owner', 'auditor', 'entries', 'oldestHash', 'newestHash', 'paidOut', 'totalPaidOut', 'depositCount', 'required', 'expires', 'i', 'recovered', 'ptr', 'count', 'i', 'entry', 'Entry', 'Entry has next', 'Entry has deposit', 'Entry has expires', 'DepositHolder', 'setOwner', 'setAuditor', 'deposit', 'extend', 'withdraw', 'recover', 'nextWithdrawal', 'check', 'disburse', 'destroy', 'owner is equal to msg sender', 'auditor is equal to owner', 'If msg sender is different from owner', 'If msg sender is different from auditor', 'owner is equal to newOwner', 'auditor is equal to newAuditor', 'If msg value is less then required', 'If msg value is greater then required', 'If not msg sender send', 'If oldestHash corresponds to 0', 'oldestHash is equal to ', 'newestHash is equal to ', 'entries newestHash next is equal to ', None, 'i is less then values length minus 1', 'If entries values i expires is different from 0', ' is equal to Entry', 'newestHash is equal to ', 'If entries newestHash expires is different from 0', ' is equal to Entry', 'depositCount increments of values length', 'If not msg sender send', None, 'i is less then max Invalid symbol  Invalid symbol ', 'recovered increments of entries ptr deposit', 'ptr is equal to entries ptr next', 'count increments of 1', 'oldestHash is equal to ptr', 'If oldestHash corresponds to 0', 'newestHash is equal to 0', 'If paidOut is greater then 0', 'If recovered is greater then paidOut', 'recovered decreases of paidOut', 'paidOut is equal to 0', 'paidOut decreases of recovered', 'recovered is equal to 0', 'depositCount decreases of count', 'If hash corresponds to 0', 'hash is equal to oldestHash', 'next is equal to hash', 'when is equal to entries hash expires', 'While next is different from 0 Invalid symbol ', 'count increments of 1', 'value increments of entries next deposit', 'next is equal to entries next next', 'expires is equal to entry expires', 'deposit is equal to entry deposit', 'paidOut increments of amount', 'totalPaidOut increments of amount', 'If not addr send', 'If depositCount is greater then 0']"
DynamicPyramid1,"['DynamicPyramid', 'onlyowner', 'balance', 'collectedFees', 'feePercent', 'pyramidMultiplier', 'payoutOrder', 'creator', 'participants', '_fee', 'payoutToSend', 'feesToCollect', 'Participant', 'Participant has etherAddress', 'Participant has payout', 'DynamicPyramid', '', 'init', 'addPayout', 'collectAllFees', 'collectFeesInEther', 'collectPercentOfFees', 'changeOwner', 'changeMultiplier', 'changeFeePercentage', 'currentMultiplier', 'currentFeePercentage', 'currentPyramidBalanceApproximately', 'nextPayoutWhenPyramidBalanceTotalsApproximately', 'feesSeperateFromBalanceApproximately', 'totalParticipants', 'numberOfParticipantsWaitingForPayout', 'participantDetails', 'creator is equal to msg sender', 'If msg sender corresponds to creator', 'If msg value is less then 1 ether', 'collectedFees increments of msg value', 'If msg value is greater or equal to 50 ether', '_fee is divided by 2', 'If participants length corresponds to 10', 'pyramidMultiplier is equal to 200', 'If participants length corresponds to 25', 'pyramidMultiplier is equal to 150', 'balance increments of  divided by 100', 'collectedFees increments of  divided by 100', 'While balance is greater then participants payoutOrder payout', 'balance decreases of participants payoutOrder payout', 'payoutOrder increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', '_amt is multiplied by 1 ether', 'If _amt is greater then collectedFees', 'If collectedFees corresponds to 0', 'collectedFees decreases of _amt', 'If collectedFees corresponds to 0 Invalid symbol ', 'collectedFees decreases of feesToCollect', 'creator is equal to _owner', 'If _mult is greater then 300 Invalid symbol ', 'pyramidMultiplier is equal to _mult', 'If _fee is greater then 10', 'feePercent is equal to _fee', 'multiplier is equal to pyramidMultiplier', 'info is equal to This multiplier applies to you as soon as transaction is received, may be lowered to hasten payouts or increased if payouts are fast enough. Due to no float or decimals, multiplier is x100 for a fractional multiplier e.g. 250 is actually a 2.5x multiplier. Capped at 3x max and 1.2x min.', 'fee is equal to feePercent', 'info is equal to Shown in % form. Fee is halved(50%) for amounts equal or greater than 50 ethers. (Fee may change, but is capped to a maximum of 10%)', 'pyramidBalance is equal to balance divided by 1 ether', 'info is equal to All balance values are measured in Ethers, note that due to no decimal placing, these values show up as integers only, within the contract itself you will get the exact decimal value you are supposed to', 'balancePayout is equal to participants payoutOrder payout divided by 1 ether', 'fees is equal to collectedFees divided by 1 ether', 'count is equal to participants length', 'count is equal to participants length minus payoutOrder', 'If orderInPyramid is less or equal to participants length', 'Address is equal to participants orderInPyramid etherAddress', 'Payout is equal to participants orderInPyramid payout divided by 1 ether']"
Send1Get2,"['Send1Get2', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'Send1Get2', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 ether', 'If msg value is greater then 1 ether', 'amount is equal to 1 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 200', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
Quadrupler,"['quadrupler', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'quadrupler', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 ether', 'If msg value is greater then 999 ether', 'amount is equal to 999 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 400', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
FivePercent,"['FivePercent', 'participants', 'payoutIdx', 'balance', 'factor', 'amount', 'idx', 'transactionAmount', 'Participant', 'Participant has etherAddress', 'Participant has amount', '', 'init', 'Infos', 'participantDetails', 'If msg value is less then 10 finney', 'If msg value is greater then 10 ether', 'amount is equal to 10 ether', 'amount is equal to msg value', 'participants length increments of 1', 'participants idx etherAddress is equal to msg sender', 'participants idx amount is equal to amount', 'balance increments of amount', 'While balance is greater then factor multiplied by participants payoutIdx amount divided by 100', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'BalanceInFinney is equal to balance divided by 1 finney', 'PayOutIndex is equal to payoutIdx', 'Participants is equal to participants length', 'NextPayout is equal to factor multiplied by participants payoutIdx amount divided by 1 finney', 'NextPayout is equal to NextPayout divided by 100', 'info is equal to All amounts in Finney (1 Ether = 1000 Finney)', 'PaidOut is equal to N.A.', 'Address is equal to 0', 'PayinInFinney is equal to 0', 'PayoutInFinney is equal to 0', 'If nr is less then participants length', 'Address is equal to participants nr etherAddress', 'PayinInFinney is equal to participants nr amount divided by 1 finney', 'PayoutInFinney is equal to factor multiplied by PayinInFinney divided by 100', 'PaidOut is equal to no', 'If nr is less then payoutIdx', 'PaidOut is equal to yes']"
TheWhaleGame2,"['thewhalegame', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'thewhalegame', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 5 ether', 'If msg value is greater then 500 ether', 'amount is equal to 500 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 100 multiplied by 3', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 100 multiplied by 3', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 125', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
Quick1,"['quick', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'quick', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 ether', 'If msg value is greater then 20 ether', 'amount is equal to 20 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 150', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
ResetPonzi4,"['ResetPonzi', 'persons', 'niceGuys', 'payoutIdx', 'currentNiceGuyIdx', 'investor', 'currentNiceGuy', 'ngidx', 'idx', 'Person', 'NiceGuy', 'Person has addr', 'NiceGuy has addr2', 'ResetPonzi', '', 'enter', 'currentNiceGuy is equal to msg sender', 'If msg value is different from 9 divided by 10 ether', 'If investor is greater then 8', 'niceGuys length increments of 1', 'niceGuys ngidx addr2 is equal to msg sender', 'If investor corresponds to 10', 'currentNiceGuy is equal to niceGuys currentNiceGuyIdx addr2', 'currentNiceGuyIdx increments of 1', 'If investor is less then 9', 'persons length increments of 1', 'persons idx addr is equal to msg sender', 'investor increments of 1', 'If investor corresponds to 11', 'investor is equal to 0', 'If idx is different from 0', 'While this balance is greater then 10 divided by 10 ether', 'payoutIdx increments of 1']"
LittleEthereumDoubler,"['LittleEthereumDoubler', 'execute', 'users', 'index', 'feeAddress', 'a', 'User', 'User has addr', 'User has paidOut', 'User has payoutLeft', 'NewFeeAddress', 'LittleEthereumDoubler', '', 'Start', 'DepositLimit', 'Fees', 'NewDeposit', 'Payout', 'UserDatabase', 'If feeAddress corresponds to tx origin', 'If msg value is different from 0', 'feeAddress is equal to newFeeAddress', 'feeAddress is equal to tx origin', 'a is equal to DepositLimit', 'x is equal to a', 'If x is less then 100 finney', 'If x is greater then 50 ether', 'x is equal to 50 ether', 'Invalid symbol users length', 'users length minus 1 addr is equal to tx origin', 'users length minus 1 payoutLeft is equal to a multiplied by 2', 'While this balance is different from 0', 'If users index payoutLeft is greater then this balance', 'users index payoutLeft decreases of this balance', 'users index paidOut increments of this balance', 'users index paidOut increments of users index payoutLeft', 'Invalid symbol users index payoutLeft', 'Invalid symbol index', 'Address is equal to users id addr', 'PaidOut is equal to users id paidOut divided by 100 finney', 'PayoutLeft is equal to users id payoutLeft divided by 100 finney', 'Payout is equal to  divided by 100 finney', 'info is equal to values are shown in a denomination of 100 finneys ( 100 finney = 0.1 ether = minimum input)']"
StackyGame,"['StackyGame', 'onlyowner', 'participants', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'idx', 'transactionAmount', 'Participant', 'Participant has etherAddress', 'Participant has amount', 'Doubler', '', 'enter', 'collectFees', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is greater then 1 ether', 'participants length increments of 1', 'participants idx etherAddress is equal to msg sender', 'participants idx amount is equal to msg value', 'If idx is different from 0', 'collectedFees increments of msg value multiplied by 1 divided by 20', 'balance increments of msg value', 'collectedFees increments of msg value', 'If balance is greater then participants payoutIdx amount multiplied by 2', 'balance decreases of participants payoutIdx amount multiplied by 2', 'payoutIdx increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', 'owner is equal to _owner']"
HYIP,"['HYIP', 'adminOnly', 'Payout', 'PAYOUT_INTERVAL', 'BENEFICIARIES_INTEREST', 'INVESTORS_INTEREST', 'INTEREST_DENOMINATOR', 'm_admin', 'm_latestPaidTime', 'm_investors', 'm_beneficiaries', 'paidPeriods', 'investorsPayout', 'beneficiariesPayout', 'idx', 'eachBeneficiaryPayout', 'payout', 'Investor', 'Investor has etherAddress', 'Investor has deposit', 'Investor has investmentTime', 'HYIP', '', 'Invest', 'status', 'performPayouts', 'addInvestor', 'changeAdmin', 'addBeneficiary', 'resetBeneficiaryList', 'If msg sender corresponds to m_admin', 'm_admin is equal to msg sender', 'm_latestPaidTime is equal to now', 'bank is equal to this balance', 'investorsCount is equal to m_investors length', 'beneficiariesCount is equal to m_beneficiaries length', 'unpaidTime is equal to now minus m_latestPaidTime', 'unpaidIntervals is equal to unpaidTime divided by PAYOUT_INTERVAL', 'While m_latestPaidTime plus PAYOUT_INTERVAL is less then now', 'If m_beneficiaries length is greater then 0', 'beneficiariesPayout is equal to  divided by INTEREST_DENOMINATOR', 'idx is equal to 0', None, 'idx is less then m_beneficiaries length', 'If not m_beneficiaries idx send', 'idx is equal to m_investors length', None, ' is greater then 0', 'If m_investors idx investmentTime is greater then m_latestPaidTime plus PAYOUT_INTERVAL', 'If not m_investors idx etherAddress send', 'investorsPayout increments of payout', 'm_latestPaidTime increments of PAYOUT_INTERVAL', 'Invalid symbol paidPeriods', 'm_admin is equal to newAdmin', 'Invalid symbol m_beneficiaries']"
DividendProfit1,"['DividendProfit', 'execute', 'deployer', 'dividendAddr', 'DividendProfit', '', 'SetAddr', 'TestContract', 'If msg sender corresponds to deployer', 'deployer is equal to msg sender', 'dividendAddr is equal to deployer', 'If this balance is greater then 69 finney', 'dividendAddr is equal to _newAddr']"
RobinHoodPonzi2,"['RobinHoodPonzi', 'onlyowner', 'participants', 'payoutIdx', 'collectedFees', 'balance', 'fee', 'factor', 'owner', 'amount', 'idx', 'transactionAmount', 'Participant', 'Participant has etherAddress', 'Participant has payin', 'Participant has payout', 'RobinHoodPonzi', '', 'enter', 'Infos', 'participantDetails', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 finney', 'If msg value is greater then 1000 ether', 'amount is equal to 1000 ether', 'amount is equal to msg value', 'participants length increments of 1', 'participants idx etherAddress is equal to msg sender', 'participants idx payin is equal to amount', 'If amount is greater or equal to 1 finney', 'factor is equal to 300', 'If amount is greater or equal to 10 finney', 'factor is equal to 200', 'If amount is greater or equal to 100 finney', 'factor is equal to 180', 'If amount is greater or equal to 1 ether', 'factor is equal to 150', 'If amount is greater or equal to 10 ether', 'factor is equal to 125', 'If amount is greater or equal to 100 ether', 'factor is equal to 110', 'If amount is greater or equal to 500 ether', 'factor is equal to 105', 'participants idx payout is equal to amount multiplied by factor divided by 100', 'collectedFees increments of amount multiplied by fee divided by 100', 'balance increments of amount minus amount multiplied by fee divided by 100', 'While balance is greater then participants payoutIdx payout', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'If collectedFees is greater then 1 ether', 'collectedFees is equal to 0', 'Owner is equal to owner', 'BalanceInFinney is equal to balance divided by 1 finney', 'PayOutIndex is equal to payoutIdx', 'Participants is equal to participants length', 'NextPayout is equal to participants payoutIdx payout divided by 1 finney', 'info is equal to All amounts in Finney (1 Ether = 1000 Finney)', 'PaidOut is equal to N.A.', 'Address is equal to 0', 'PayinInFinney is equal to 0', 'PayoutInFinney is equal to 0', 'If nr is less then participants length', 'Address is equal to participants nr etherAddress', 'PayinInFinney is equal to participants nr payin divided by 1 finney', 'PayoutInFinney is equal to participants nr payout divided by 1 finney', 'PaidOut is equal to no', 'If nr is less then payoutIdx', 'PaidOut is equal to yes']"
DFS,"['DFS', 'numDeposits', 'deposits', 'owner1', 'owner2', 'amount', 'i', 'rest', 'depositDays', 'profit', 'amountToWithdraw', 'Deposit', 'Deposit has amount', 'Deposit has plan', 'Deposit has time', 'Deposit has payed', 'Deposit has sender', 'makeDeposit', 'pay', 'If msg value is less then 3 ether Invalid symbol ', 'If msg value is greater then 1000 ether', 'If not msg sender send', 'amount is equal to 1000 ether', 'amount is equal to msg value', ' is equal to Deposit', 'If not owner1 send', 'If not owner2 send', 'If ref1 is different from address', 'If not ref1 send', 'If ref2 is different from address', 'If not ref2 send', 'If ref3 is different from address', 'If not ref3 send', 'While i is less then numDeposits Invalid symbol ', 'If deposits i plan corresponds to 1', 'If depositDays is greater then 30', 'depositDays is equal to 30', 'profit is equal to deposits i amount multiplied by depositDays multiplied by 7 divided by 2 divided by 100', 'If deposits i plan corresponds to 2', 'If depositDays is greater then 90', 'depositDays is equal to 90', 'profit is equal to deposits i amount multiplied by depositDays multiplied by 27 divided by 20 divided by 100', 'If deposits i plan corresponds to 3', 'If depositDays is greater then 180', 'depositDays is equal to 180', 'profit is equal to deposits i amount multiplied by depositDays multiplied by 9 divided by 10 divided by 100', 'If profit is greater then deposits i payed', 'amountToWithdraw is equal to profit minus deposits i payed', 'If this balance is greater then amountToWithdraw', 'If not deposits i sender send', 'deposits i payed is equal to profit', 'Invalid symbol i', 'If i corresponds to numDeposits', 'i is equal to 0']"
AFreeEtherADay,"['A_Free_Ether_A_Day', 'the_stupid_guy', 'minimum_cash_proof_amount', 'received_amount', 'bonus', 'payout', 'success', 'A_Free_Ether_A_Day', 'show_me_the_money', 'Good_Bye_World', 'Update_Cash_Proof_amount', '', 'the_stupid_guy is equal to msg sender', 'minimum_cash_proof_amount is equal to 100 ether', 'If msg value is less then minimum_cash_proof_amount', 'If the_stupid_guy corresponds to msg sender', 'bonus is equal to 0', 'received_amount is equal to 0', 'payout is equal to received_amount plus bonus', 'If payout is greater then this balance', 'success is equal to msg sender send', 'If not success', 'If msg sender is different from the_stupid_guy', 'If msg sender is different from the_stupid_guy', 'minimum_cash_proof_amount is equal to new_cash_limit']"
EthVentures2,"['EthVentures', 'manager', 'investors', 'total_investors', 'fees', 'balance', 'totaldeposited', 'totalpaidout', 'totaldividends', 'Message_To_Investors', 'owner', 'PRE_inv_length', 'PRE_payout', 'PRE_amount', 'PRE_i', 'amount', 'inv_length', 'alreadyinvestor', 'alreadyinvestor_id', 'i', 'InvestorArray', 'InvestorArray has etherAddress', 'InvestorArray has amount', 'InvestorArray has percentage_ownership', 'EthVentures', '', 'Enter', 'NewOwner', 'Emergency', 'NewMessage', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 5 ether', 'totalpaidout increments of PRE_amount divided by 100', 'PRE_amount is equal to PRE_amount minus PRE_amount divided by 100', 'If PRE_inv_length is different from 0 Invalid symbol ', None, 'PRE_i is less then PRE_inv_length', 'PRE_payout is equal to PRE_amount multiplied by investors PRE_i percentage_ownership divided by 10000000000', 'totalpaidout increments of PRE_payout', 'totaldividends increments of PRE_payout', 'fees is equal to amount divided by 100', 'balance increments of amount', 'totaldeposited increments of amount', None, 'i is less then inv_length', 'If msg sender corresponds to investors i etherAddress', 'alreadyinvestor is equal to True', 'alreadyinvestor_id is equal to i', 'If alreadyinvestor corresponds to False', 'total_investors is equal to inv_length plus 1', 'investors length increments of 1', 'investors inv_length etherAddress is equal to msg sender', 'investors inv_length amount is equal to amount', 'investors inv_length percentage_ownership is equal to investors inv_length amount divided by totaldeposited multiplied by 10000000000', 'investors alreadyinvestor_id amount increments of amount', 'investors alreadyinvestor_id percentage_ownership is equal to investors alreadyinvestor_id amount divided by totaldeposited multiplied by 10000000000', 'If fees is different from 0', 'If balance is greater then fees', 'balance decreases of fees', 'totalpaidout increments of fees', 'owner is equal to new_owner', 'If balance is different from 0', 'Message_To_Investors is equal to new_sms']"
Doubler4,"['Doubler', 'onlyowner', 'participants', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'idx', 'transactionAmount', 'Participant', 'Participant has etherAddress', 'Participant has amount', 'Doubler', '', 'enter', 'collectFees', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 ether', 'participants length increments of 1', 'participants idx etherAddress is equal to msg sender', 'participants idx amount is equal to msg value', 'If idx is different from 0', 'collectedFees increments of msg value divided by 10', 'balance increments of msg value', 'collectedFees increments of msg value', 'If balance is greater then participants payoutIdx amount multiplied by 2', 'balance decreases of participants payoutIdx amount multiplied by 2', 'payoutIdx increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', 'owner is equal to _owner']"
PonzICO,"['PonzICO', 'checkZeroBalance', 'accreditedInvestor', 'LogInvestment', 'LogWithdrawal', 'owner', 'total', 'invested', 'balances', 'investors', 'amount', 'dividend', 'fee', 'i', 'dividend', 'fee', 'i', 'PonzICO', 'ownerFee', 'withdraw', 'reinvest', 'invest', '', 'If  corresponds to 0', 'If msg value is less then 100 finney', 'owner is equal to msg sender', 'If total is less then 200000 ether', 'fee is equal to amount divided by 2', ' increments of fee', ' is equal to 0', 'If not msg sender send', ' is equal to amount', ' is equal to 0', 'dividend decreases of fee', None, 'i is less then investors length', ' increments of dividend multiplied by  divided by total', ' increments of ', 'total increments of ', 'dividend decreases of fee', None, 'i is less then investors length', ' increments of dividend multiplied by  divided by total', 'If  corresponds to 0', ' is equal to msg value', ' increments of msg value', 'total increments of msg value']"
TheUltimatePyramid1,"['theultimatepyramid', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'theultimatepyramid', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 80 divided by 100 ether', 'If msg value is greater then 40 ether', 'amount is equal to 40 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of 0', 'collectedFees is equal to 0', 'balance increments of amount', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 180', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
Government,"['Government', 'lastCreditorPayedOut', 'lastTimeOfNewCredit', 'profitFromCrash', 'creditorAddresses', 'creditorAmounts', 'corruptElite', 'buddies', 'TWELVE_HOURS', 'round', 'amount', 'i', 'i', 'Government', 'lendGovernmentMoney', '', 'totalDebt', 'totalPayedOut', 'investInTheSystem', 'inheritToNextGeneration', 'getCreditorAddresses', 'getCreditorAmounts', 'profitFromCrash is equal to msg value', 'corruptElite is equal to msg sender', 'lastTimeOfNewCredit is equal to block timestamp', 'If lastTimeOfNewCredit plus TWELVE_HOURS is less then block timestamp', 'lastCreditorPayedOut is equal to 0', 'lastTimeOfNewCredit is equal to block timestamp', 'profitFromCrash is equal to 0', 'creditorAddresses is equal to ', 'creditorAmounts is equal to ', 'round increments of 1', 'If amount is greater or equal to 10 Invalid symbol 18', 'lastTimeOfNewCredit is equal to block timestamp', 'If profitFromCrash is less then 10000 multiplied by 10 Invalid symbol 18', 'profitFromCrash increments of amount multiplied by 5 divided by 100', 'If  is greater or equal to amount', ' increments of amount multiplied by 110 divided by 100', 'If  is less or equal to  minus profitFromCrash', ' decreases of ', 'lastCreditorPayedOut increments of 1', None, 'i is less then creditorAmounts length', 'debt increments of ', None, 'i is less then lastCreditorPayedOut', 'payout increments of ', 'profitFromCrash increments of msg value', 'If msg sender corresponds to corruptElite', 'corruptElite is equal to nextGeneration']"
Fibonzi,"['Fibonzi', 'PlayerCreated', 'PlayerBalance', 'PoolCreated', 'PoolJoined', 'PoolPrize', 'TokenCreated', 'TokenUsed', 'owner', 'poolCount', 'playerCount', 'poolJoinedCount', 'fiboIndex', 'poolToCreate', 'tokenCount', 'tokenUsed', 'fiboMax', 'tokenToReward', 'currentShare', 'players', 'pools', 'playersWallets', 'playersToken', 'playersBalance', 'price', 'price', 'share', 'i', 'count', 'j', 'i', 'i', 'currentFibo', 'i', 'count', 'i', 'used', 'i', 'Player', 'Pool', 'Token', 'Player has playerId', 'Player has wallet', 'Player has playerBalance', 'Pool has poolId', 'Pool has price', 'Pool has owner', 'Token has tokenId', 'Token has playerId', 'Token has used', 'Fibonzi', 'openPool', 'joinPool', 'distributeReward', 'withdraw', 'createPool', 'createPlayer', 'createPoolIfNeeded', 'createPlayerToken', 'getFibo', 'getPlayerUsableTokensCount', 'usePlayerToken', 'owner is equal to msg sender', 'Invalid symbol fiboIndex', 'fiboMax is equal to 18', 'pools poolId owner is equal to players msg sender playerId', 'If msg value is greater then pools poolId price', 'pools poolId price is equal to 2 multiplied by price', 'Invalid symbol poolJoinedCount', 'If fiboIndex is less or equal to fiboMax', 'pools poolId owner is equal to players msg sender playerId', 'If msg value is greater then pools poolId price', 'pools poolId price is equal to 2 multiplied by price', 'Invalid symbol poolJoinedCount', 'If fiboIndex is less or equal to fiboMax', 'If tokenCount minus tokenUsed is greater then 0', 'tokenToReward is equal to tokenCount minus tokenUsed', 'currentShare is equal to share', None, 'i is less then playerCount', None, 'j is less then i plus 1 wallet length', 'If not i plus 1 wallet j used', 'Invalid symbol count', 'If count is greater then 0', 'i plus 1 playerBalance increments of share multiplied by count', ' is equal to i plus 1 playerBalance', 'players playersWallets owner playerBalance increments of ', ' is equal to players playersWallets owner playerBalance', None, 'i is less then 10', 'players msg sender playerBalance is equal to 0', ' is equal to 0', 'Invalid symbol poolCount', ' is equal to Pool', None, 'i is less then playerCount', 'Invalid symbol playerCount', ' is equal to Player', ' is equal to playerCount', 'If poolJoinedCount is greater then currentFibo', 'Invalid symbol fiboIndex', 'If poolJoinedCount corresponds to currentFibo', 'If currentFibo is greater then poolCount', 'poolToCreate is equal to currentFibo minus poolCount', None, 'i is less then poolToCreate', 'poolToCreate is equal to 0', 'Invalid symbol tokenCount', 'If tokenCount Invalid symbol 9 corresponds to 0', 'Invalid symbol tokenCount', 'If n is less or equal to 1', None, 'i is less then msg sender length', 'If not msg sender i used', 'Invalid symbol count', None, 'i is less then msg sender length', 'If  Invalid symbol ', 'msg sender i used is equal to True', 'used is equal to True', 'Invalid symbol tokenUsed']"
BalancedPonzi2,"['BalancedPonzi', 'persons', 'niceGuys', 'payoutIdx', 'currentNiceGuyIdx', 'investor', 'currentNiceGuy', 'beta', 'idx', 'ngidx', 'Person', 'NiceGuy', 'Person has addr', 'NiceGuy has addr2', 'BalancedPonzi', '', 'funnel', 'currentNiceGuy is equal to msg sender', 'beta is equal to msg sender', 'If msg value is different from 9 ether', 'If investor is greater then 8', 'niceGuys length increments of 1', 'niceGuys ngidx addr2 is equal to msg sender', 'If investor corresponds to 10', 'currentNiceGuy is equal to niceGuys currentNiceGuyIdx addr2', 'currentNiceGuyIdx increments of 1', 'If investor is less then 9', 'persons length increments of 1', 'persons idx addr is equal to msg sender', 'investor increments of 1', 'If investor corresponds to 11', 'investor is equal to 0', 'If idx is different from 0', 'While this balance is greater then 10 ether', 'payoutIdx increments of 1']"
ShinySquirrels,"['ShinySquirrels', 'minDeposit', 'maxDeposit', 'baseFee', 'baseMultiplier', 'maxMultiplier', 'currentPosition', 'balance', 'feeBalance', 'totalDeposits', 'totalPaid', 'totalSquirrels', 'totalShinyThings', 'totalSprockets', 'totalStars', 'totalHearts', 'totalSkips', 'owner', 'players', 'theLine', 'playerStats', 'player', 'deposit', 'multiplier', 'fee', 'skip', 'squirrels', 'shinyThings', 'sprockets', 'stars', 'hearts', 'playerIndex', 'lineIndex', 'nextPayout', 'payout', 'i', 'PlayerEntry', 'PlayerStat', 'PlayerEntry has addr', 'PlayerEntry has deposit', 'PlayerEntry has paid', 'PlayerEntry has multiplier', 'PlayerEntry has fee', 'PlayerEntry has skip', 'PlayerEntry has squirrels', 'PlayerEntry has shinyThings', 'PlayerEntry has sprockets', 'PlayerEntry has stars', 'PlayerEntry has hearts', 'PlayerStat has addr', 'PlayerStat has entries', 'PlayerStat has deposits', 'PlayerStat has paid', 'PlayerStat has skips', 'PlayerStat has squirrels', 'PlayerStat has shinyThings', 'PlayerStat has sprockets', 'PlayerStat has stars', 'PlayerStat has hearts', 'ShinySquirrels', 'totals', 'settings', 'playerByAddress', 'waitingForPayout', 'entryPayout', 'entryPayoutDue', 'lineOfPlayers', '', 'play', 'skipInLine', 'DynamicPyramid', 'collectFees', 'updateSettings', 'owner is equal to msg sender', 'playerCount is equal to players length', 'currentPlaceInLine is equal to currentPosition', 'playersWaiting is equal to waitingForPayout', 'totalDepositsInFinneys is equal to totalDeposits divided by 1 finney', 'totalPaidOutInFinneys is equal to totalPaid divided by 1 finney', 'squirrelFriends is equal to totalSquirrels', 'shinyThingsFound is equal to totalShinyThings', 'sprocketsCollected is equal to totalSprockets', 'starsWon is equal to totalStars', 'heartsEarned is equal to totalHearts', 'balanceInFinneys is equal to balance divided by 1 finney', 'feeBalanceInFinneys is equal to feeBalance divided by 1 finney', 'minimumDepositInFinneys is equal to minDeposit divided by 1 finney', 'maximumDepositInFinneys is equal to maxDeposit divided by 1 finney', 'entries is equal to playerStats addr entries', 'depositedInFinney is equal to playerStats addr deposits divided by 1 finney', 'paidOutInFinney is equal to playerStats addr paid divided by 1 finney', 'skippedAhead is equal to playerStats addr skips', 'squirrels is equal to playerStats addr squirrels', 'shinyThings is equal to playerStats addr shinyThings', 'sprockets is equal to playerStats addr sprockets', 'stars is equal to playerStats addr stars', 'hearts is equal to playerStats addr hearts', 'waiting is equal to players length minus currentPosition', 'payout is equal to players theLine index deposit multiplied by players theLine index multiplier divided by 100', 'payoutDue is equal to entryPayout minus players theLine index paid', 'addr is equal to player addr', 'orderJoined is equal to ', 'depositInFinney is equal to player deposit divided by 1 finney', 'payoutInFinney is equal to depositInFinney multiplied by player multiplier divided by 100', 'multiplierPercent is equal to player multiplier', 'paid is equal to player paid divided by 1 finney', 'skippedAhead is equal to player skip', 'squirrels is equal to player squirrels', 'shinyThings is equal to player shinyThings', 'sprockets is equal to player sprockets', 'stars is equal to player stars', 'hearts is equal to player hearts', 'If deposit is less then minDeposit Invalid symbol ', 'If players length Invalid symbol 5 corresponds to 0', 'multiplier increments of 2', 'fee increments of 1', 'stars increments of 1', 'If deposit is less then 1 ether', 'multiplier decreases of ', 'fee decreases of ', 'shinyThings increments of 1', 'If deposit is greater or equal to 1 Invalid symbol ', 'skip increments of 4', 'fee increments of 3', 'If deposit is greater or equal to 2 ether Invalid symbol ', 'multiplier increments of 3', 'fee increments of 2', 'hearts increments of 1', 'If deposit is greater or equal to 3 ether', 'stars increments of 1', 'If players length Invalid symbol 5 corresponds to 1', 'multiplier increments of 4', 'fee increments of 2', 'squirrels increments of 1', 'If deposit is less then 1 ether', 'multiplier increments of 6', 'fee increments of 3', 'squirrels increments of 1', 'If deposit is greater or equal to 2 ether', 'If waitingForPayout is greater or equal to 20', 'skip increments of waitingForPayout divided by 2', 'fee increments of 2', 'shinyThings increments of 1', 'multiplier increments of 4', 'fee increments of 4', 'hearts increments of 1', 'If deposit is greater or equal to 4 ether', 'multiplier increments of 1', 'fee decreases of ', 'skip increments of 1', 'hearts increments of 1', 'stars increments of 1', 'If players length Invalid symbol 5 corresponds to 2', 'multiplier increments of 7', 'fee increments of 6', 'sprockets increments of 1', 'If waitingForPayout is greater or equal to 10', 'multiplier decreases of ', 'fee decreases of ', 'skip increments of 1', 'squirrels increments of 1', 'If deposit is greater or equal to 3 ether', 'multiplier increments of 2', 'skip increments of 1', 'stars increments of 1', 'shinyThings increments of 1', 'If deposit corresponds to maxDeposit', 'multiplier increments of 2', 'skip increments of 1', 'hearts increments of 1', 'squirrels increments of 1', 'If players length Invalid symbol 5 corresponds to 3', 'multiplier decreases of ', 'fee increments of 0', 'skip increments of 3', 'shinyThings increments of 1', 'If deposit is less then 1 ether', 'multiplier decreases of ', 'fee increments of 2', 'skip increments of 5', 'squirrels increments of 1', 'If deposit corresponds to 1 ether', 'multiplier increments of 10', 'fee increments of 4', 'skip increments of 2', 'hearts increments of 1', 'If deposit corresponds to maxDeposit', 'multiplier increments of 1', 'fee increments of 5', 'skip increments of 1', 'sprockets increments of 1', 'stars increments of 1', 'hearts increments of 1', 'If players length Invalid symbol 5 corresponds to 4', 'multiplier increments of 2', 'fee decreases of ', 'squirrels increments of 1', 'If deposit is less then 1 ether', 'multiplier increments of 3', 'fee increments of 2', 'skip increments of 3', 'If deposit is greater or equal to 2 ether', 'multiplier increments of 2', 'fee increments of 2', 'skip increments of 1', 'stars increments of 1', 'If deposit corresponds to maxDeposit divided by 2', 'multiplier increments of 2', 'fee increments of 5', 'skip increments of 3', 'shinyThings increments of 1', 'sprockets increments of 1', 'If deposit is greater or equal to 3 ether', 'multiplier increments of 1', 'fee increments of 1', 'skip increments of 1', 'sprockets increments of 1', 'hearts increments of 1', 'msg sender hearts increments of hearts', 'msg sender stars increments of stars', 'msg sender squirrels increments of squirrels', 'msg sender shinyThings increments of shinyThings', 'msg sender sprockets increments of sprockets', 'totalHearts increments of hearts', 'totalStars increments of stars', 'totalSquirrels increments of squirrels', 'totalShinyThings increments of shinyThings', 'totalSprockets increments of sprockets', 'skip increments of msg sender squirrels', 'msg sender squirrels decreases of ', 'multiplier increments of msg sender stars multiplied by 2', 'fee decreases of msg sender hearts', 'multiplier increments of msg sender sprockets', 'fee decreases of ', 'If msg sender shinyThings is greater or equal to 1', 'skip increments of 1', 'fee decreases of ', 'If msg sender hearts is greater or equal to 1 Invalid symbol  Invalid symbol  Invalid symbol  Invalid symbol ', 'multiplier increments of 30', 'If msg sender hearts is greater or equal to 1 Invalid symbol ', 'multiplier increments of 15', 'msg sender hearts decreases of 1', 'msg sender stars decreases of 1', 'If msg sender sprockets is greater or equal to 1 Invalid symbol ', 'msg sender squirrels increments of 5', 'msg sender sprockets decreases of 1', 'msg sender shinyThings decreases of 1', 'If multiplier is greater then maxMultiplier', 'multiplier corresponds to maxMultiplier', 'If waitingForPayout is greater then 15 Invalid symbol ', 'skip is equal to waitingForPayout divided by 2', 'feeBalance increments of deposit multiplied by fee divided by 100', 'balance increments of deposit minus deposit multiplied by fee divided by 100', 'totalDeposits increments of deposit', 'players length increments of 1', 'theLine length increments of 1', ' is equal to skipInLine', 'players playerIndex addr is equal to msg sender', 'players playerIndex deposit is equal to deposit', 'players playerIndex multiplier is equal to multiplier', 'players playerIndex fee is equal to fee', 'players playerIndex squirrels is equal to squirrels', 'players playerIndex shinyThings is equal to shinyThings', 'players playerIndex sprockets is equal to sprockets', 'players playerIndex stars is equal to stars', 'players playerIndex hearts is equal to hearts', 'players playerIndex skip is equal to skip', ' is equal to playerIndex', 'msg sender entries increments of 1', 'msg sender deposits increments of deposit', 'msg sender skips increments of skip', 'totalSkips increments of skip', 'While balance is greater then 0', 'If nextPayout is less or equal to balance', 'payout is equal to nextPayout', 'payout is equal to balance', 'players theLine currentPosition paid increments of payout', 'players theLine currentPosition addr paid increments of payout', 'balance decreases of payout', 'totalPaid increments of payout', 'If balance is greater then 0', 'Invalid symbol currentPosition', 'nextPayout is equal to entryPayoutDue', 'If skip is greater then 0 Invalid symbol ', 'If skip is greater then waitingForPayout minus 2', 'skip is equal to waitingForPayout minus 2', 'While i is less then skip', ' is equal to ', 'Invalid symbol i', '', 'newLineIndex is equal to currentLineIndex minus i', 'newLineIndex is equal to currentLineIndex', 'skip is equal to 0', 'skipped is equal to skip', 'msg sender squirrels is equal to 0', 'msg sender shinyThings is equal to 0', 'msg sender sprockets is equal to 0', 'msg sender stars is equal to 0', 'msg sender hearts is equal to 0', 'If msg sender is different from owner', 'If  is greater then balance plus feeBalance', 'feeBalance is equal to  minus balance', 'feeBalance is equal to 0', 'If msg sender is different from owner', 'If newMultiplier is less then 80 Invalid symbol ', 'If maxMultiplier is less then 125 Invalid symbol ', 'If newFee is less then 0 Invalid symbol ', 'If minDeposit is less then 1 finney Invalid symbol ', 'If maxDeposit is less then 1 finney Invalid symbol ', '', 'baseMultiplier is equal to newMultiplier', 'maxMultiplier is equal to newMaxMultiplier', 'baseFee is equal to newFee', 'minDeposit is equal to newMinDeposit', 'maxDeposit is equal to newMaxDeposit']"
ResetPonzi5,"['ResetPonzi', 'persons', 'niceGuys', 'payoutIdx', 'currentNiceGuyIdx', 'investor', 'currentNiceGuy', 'ngidx', 'idx', 'Person', 'NiceGuy', 'Person has addr', 'NiceGuy has addr2', 'ResetPonzi', '', 'enter', 'currentNiceGuy is equal to msg sender', 'If msg value is different from 9 divided by 10 ether', 'If investor is greater then 8', 'niceGuys length increments of 1', 'niceGuys ngidx addr2 is equal to msg sender', 'If investor corresponds to 10', 'currentNiceGuy is equal to niceGuys currentNiceGuyIdx addr2', 'currentNiceGuyIdx increments of 1', 'If investor is less then 9', 'persons length increments of 1', 'persons idx addr is equal to msg sender', 'investor increments of 1', 'If investor corresponds to 11', 'investor is equal to 0', 'While this balance is greater then 10 divided by 10 ether', 'payoutIdx increments of 1']"
FountainOfWealth,"['FountainOfWealth', 'onlyowner', 'investors', 'investors_needed_until_jackpot', 'totalplayers', 'feerate', 'profitrate', 'jackpotrate', 'fee', 'feeamount', 'balance', 'totaldeposited', 'totalpaidout', 'owner', 'amount', 'tot_pl', 'payout', 'nr', 'InvestorArray', 'InvestorArray has etherAddress', 'InvestorArray has amount', 'FountainOfWealth', '', 'enter', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 100 finney', 'totalplayers is equal to tot_pl plus 1', 'investors_needed_until_jackpot is equal to 20 minus ', 'investors length increments of 1', 'investors tot_pl etherAddress is equal to msg sender', 'investors tot_pl amount is equal to amount', 'feeamount is equal to amount multiplied by fee divided by 100', 'balance increments of amount', 'totaldeposited increments of amount', 'If feeamount is different from 0', 'If balance is greater then feeamount', 'balance decreases of feeamount', 'totalpaidout increments of feeamount', 'If fee is less then 100', 'fee increments of 4', 'fee is equal to 100', 'While balance is greater then investors nr amount multiplied by 40 divided by 100 Invalid symbol ', 'If nr Invalid symbol 20 corresponds to 0 Invalid symbol ', 'payout is equal to investors nr amount multiplied by 70 divided by 100', 'balance decreases of investors nr amount multiplied by 70 divided by 100', 'totalpaidout increments of investors nr amount multiplied by 70 divided by 100', 'payout is equal to investors nr amount multiplied by 40 divided by 100', 'balance decreases of investors nr amount multiplied by 40 divided by 100', 'totalpaidout increments of investors nr amount multiplied by 40 divided by 100', 'nr increments of 1']"
MultiplyX10,"['MultiplyX10', 'depositors', 'Total_Investors', 'Balance', 'Total_Deposited', 'Total_Paid_Out', 'Multiplier', 'Message', 'Amount', 'payment', 'index', 'InvestorArray', 'InvestorArray has EtherAddress', 'InvestorArray has Amount', '', 'enter', 'If msg value is greater then 2 ether', 'Total_Investors is equal to depositors length plus 1', 'depositors length increments of 1', 'depositors length minus 1 EtherAddress is equal to msg sender', 'depositors length minus 1 Amount is equal to Amount', 'Balance increments of Amount', 'Total_Deposited increments of Amount', 'While Balance is greater then  Invalid symbol ', 'If depositors index Amount is different from 0', 'payment is equal to depositors index Amount multiplied by Multiplier', 'Balance decreases of depositors index Amount multiplied by Multiplier', 'Total_Paid_Out increments of depositors index Amount multiplied by Multiplier', 'depositors index Amount is equal to 0', 'Invalid symbol index']"
UfoPonzi,"['UfoPonzi', 'onlyowner', 'participants', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'idx', 'transactionAmount', 'Participant', 'Participant has etherAddress', 'Participant has amount', 'UfoPonzi', '', 'enter', 'collectFees', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'balance increments of msg value', 'If msg value is less then 1 ether', 'participants length increments of 1', 'participants idx etherAddress is equal to msg sender', 'participants idx amount is equal to msg value', 'If idx is different from 0', 'collectedFees increments of msg value divided by 10', 'balance increments of msg value', 'collectedFees increments of msg value', 'If balance is greater then participants payoutIdx amount divided by 10 plus participants payoutIdx amount', 'balance decreases of participants payoutIdx amount divided by 10 plus participants payoutIdx amount', 'payoutIdx increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', 'owner is equal to _owner']"
TheRun,"['theRun', 'onlyowner', 'Balance', 'Payout_id', 'Last_Payout', 'WinningPot', 'Min_multiplier', 'fees', 'feeFrac', 'PotFrac', 'admin', 'players', 'deposit', 'total_multiplier', 'roll', 'salt', 'x', 'y', 'seed', 'h', 'Player', 'Player has addr', 'Player has payout', 'Player has paid', 'theRun', '', 'init', 'Participate', 'random', 'ChangeOwnership', 'WatchBalance', 'WatchBalanceInEther', 'CollectAllFees', 'GetAndReduceFeesByFraction', 'NextPayout', 'WatchFees', 'WatchWinningPot', 'WatchLastPayout', 'Total_of_Players', 'PlayerInfo', 'PayoutQueueSize', 'admin is equal to msg sender', 'If msg sender corresponds to admin', 'If msg value is less then 500 finney', 'If msg value is greater then 20 ether', 'deposit is equal to 20 ether', 'If Balance is less then 1 ether Invalid symbol ', 'total_multiplier increments of 100', 'If  corresponds to 0 Invalid symbol ', 'total_multiplier increments of 100', 'WinningPot increments of  divided by 1000', 'fees increments of  divided by 1000', 'Balance increments of  divided by 1000', 'If  Invalid symbol ', 'If roll Invalid symbol 10 corresponds to 0', 'WinningPot is equal to 0', 'While Balance is greater then players Payout_id payout', 'Last_Payout is equal to players Payout_id payout', 'Balance decreases of players Payout_id payout', 'players Payout_id paid is equal to True', 'Payout_id increments of 1', 'admin is equal to _owner', 'TotalBalance is equal to Balance divided by 1 wei', 'TotalBalanceInEther is equal to Balance divided by 1 ether', 'If fees corresponds to 0', 'feeFrac decreases of 1', 'fees is equal to 0', 'If fees corresponds to 0', 'feeFrac decreases of 1', 'fees decreases of fees divided by 1000 multiplied by p', 'NextPayout is equal to players Payout_id payout divided by 1 wei', 'CollectedFees is equal to fees divided by 1 wei', 'WinningPot is equal to WinningPot divided by 1 wei', 'payout is equal to Last_Payout', 'NumberOfPlayers is equal to players length', 'If id is less or equal to players length', 'Address is equal to players id addr', 'Payout is equal to players id payout divided by 1 wei', 'UserPaid is equal to players id paid', 'QueueSize is equal to players length minus Payout_id']"
Dividend,"['Dividend', 'execute', 'contributors', 'unprocessedProfits', 'totalContributors', 'totalContributions', 'totalProfit', 'totalSUM', 'deployer', 'profitAddr', 'profit', 'profitAmount', 'contriTotal', 'proi', 'contri', 'recontri', 'recoi', 'cProfit', 'Contributor', 'Contributor has addr', 'Contributor has contribution', 'Contributor has profit', 'Dividend', '', 'Enter', 'PayOut', 'TestContract', 'SetProfitAddr', 'If msg sender corresponds to deployer', 'deployer is equal to msg sender', 'profitAddr is equal to deployer', 'If msg sender corresponds to profitAddr', 'unprocessedProfits is equal to msg value', 'If unprocessedProfits is different from 0', 'totalProfit increments of profitAmount', 'If contributors length is different from 0 Invalid symbol ', None, 'proi is less then contributors length', 'contriTotal is equal to contributors proi contribution plus contributors proi profit', 'profit is equal to profitAmount multiplied by contriTotal divided by totalSUM', 'contributors proi profit increments of profit', 'totalSUM increments of profitAmount', 'totalContributions increments of contri', 'totalSUM increments of contri', None, 'recoi is less then contributors length', 'If msg sender corresponds to contributors recoi addr', 'contributors recoi contribution increments of contri', 'recontri is equal to True', 'If recontri corresponds to False', 'totalContributors is equal to contributors length plus 1', 'contributors length increments of 1', 'contributors length minus 1 addr is equal to msg sender', 'contributors length minus 1 contribution is equal to contri', 'contributors length minus 1 profit is equal to 0', 'If msg sender corresponds to contributors ContibutorNumber addr', 'If cProfit is different from 0', 'contributors ContibutorNumber profit is equal to 0', 'totalProfit decreases of cProfit', 'totalSUM decreases of cProfit', 'profitAddr is equal to _newAddr']"
TimeGame2,"['timegame', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'TWELEVE_HOURS', 'regeneration', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'timegame', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'regeneration is equal to block timestamp', 'If regeneration plus TWELEVE_HOURS is less then block timestamp', 'If msg value is less then 1 ether', 'If msg value is greater then 50 ether', 'amount is equal to 50 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'regeneration is equal to block timestamp', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 200', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
BetterBankWithInterest,"['Better_Bank_With_Interest', 'balances', 'term_deposit_end_block', 'thebank', 'minimum_deposit_amount', 'deposit_fee', 'contract_alive_until_this_block', 'count_customer_deposits', 'interest', 'Better_Bank_With_Interest', 'deposit', 'withdraw', 'set_minimum_payment', 'set_deposit_fee', 'get_available_interest_amount', 'get_term_deposit_end_date', 'get_balance', 'extend_life_of_contract', 'close_bank', '', 'thebank is equal to msg sender', 'minimum_deposit_amount is equal to 250 ether', 'deposit_fee is equal to 5 ether', 'contract_alive_until_this_block is equal to 3000000', 'count_customer_deposits is equal to 0', ' is equal to 0', 'If msg value is less then minimum_deposit_amount', 'If  corresponds to 0', 'deposit_fee is equal to 0 ether', 'If msg sender corresponds to thebank', ' increments of msg value', 'count_customer_deposits increments of 1', ' increments of msg value minus deposit_fee', ' increments of deposit_fee', ' is equal to block number plus 30850', 'If withdraw_amount is less then 10 ether', 'If withdraw_amount is greater then ', 'If block number is less then ', 'If msg sender corresponds to thebank', 'interest is equal to 0 ether', 'If interest is greater then ', 'interest is equal to ', ' decreases of interest', ' decreases of withdraw_amount', 'If not msg sender send', 'If not msg sender send', 'If msg sender corresponds to thebank', 'minimum_deposit_amount is equal to new_limit', 'If msg sender corresponds to thebank', 'deposit_fee is equal to new_fee', 'If msg sender is different from thebank Invalid symbol ', 'contract_alive_until_this_block is equal to newblock', ' is equal to contract_alive_until_this_block', 'If contract_alive_until_this_block is less then block number Invalid symbol ', ' increments of msg value']"
ShinySquirrels2,"['ShinySquirrels', 'minDeposit', 'maxDeposit', 'baseFee', 'baseMultiplier', 'maxMultiplier', 'currentPosition', 'balance', 'feeBalance', 'totalDeposits', 'totalPaid', 'totalSquirrels', 'totalShinyThings', 'totalSprockets', 'totalStars', 'totalHearts', 'totalSkips', 'owner', 'players', 'theLine', 'playerStats', 'player', 'deposit', 'multiplier', 'fee', 'skip', 'squirrels', 'shinyThings', 'sprockets', 'stars', 'hearts', 'playerIndex', 'lineIndex', 'nextPayout', 'payout', 'i', 'PlayerEntry', 'PlayerStat', 'PlayerEntry has addr', 'PlayerEntry has deposit', 'PlayerEntry has paid', 'PlayerEntry has multiplier', 'PlayerEntry has fee', 'PlayerEntry has skip', 'PlayerEntry has squirrels', 'PlayerEntry has shinyThings', 'PlayerEntry has sprockets', 'PlayerEntry has stars', 'PlayerEntry has hearts', 'PlayerStat has addr', 'PlayerStat has entries', 'PlayerStat has deposits', 'PlayerStat has paid', 'PlayerStat has skips', 'PlayerStat has squirrels', 'PlayerStat has shinyThings', 'PlayerStat has sprockets', 'PlayerStat has stars', 'PlayerStat has hearts', 'ShinySquirrels', 'totals', 'settings', 'playerByAddress', 'waitingForPayout', 'entryPayout', 'entryPayoutDue', 'lineOfPlayers', '', 'play', 'skipInLine', 'DynamicPyramid', 'collectFees', 'updateSettings', 'owner is equal to msg sender', 'playerCount is equal to players length', 'currentPlaceInLine is equal to currentPosition', 'playersWaiting is equal to waitingForPayout', 'totalDepositsInFinneys is equal to totalDeposits divided by 1 finney', 'totalPaidOutInFinneys is equal to totalPaid divided by 1 finney', 'squirrelFriends is equal to totalSquirrels', 'shinyThingsFound is equal to totalShinyThings', 'sprocketsCollected is equal to totalSprockets', 'starsWon is equal to totalStars', 'heartsEarned is equal to totalHearts', 'balanceInFinneys is equal to balance divided by 1 finney', 'feeBalanceInFinneys is equal to feeBalance divided by 1 finney', 'minimumDepositInFinneys is equal to minDeposit divided by 1 finney', 'maximumDepositInFinneys is equal to maxDeposit divided by 1 finney', 'entries is equal to playerStats addr entries', 'depositedInFinney is equal to playerStats addr deposits divided by 1 finney', 'paidOutInFinney is equal to playerStats addr paid divided by 1 finney', 'skippedAhead is equal to playerStats addr skips', 'squirrels is equal to playerStats addr squirrels', 'shinyThings is equal to playerStats addr shinyThings', 'sprockets is equal to playerStats addr sprockets', 'stars is equal to playerStats addr stars', 'hearts is equal to playerStats addr hearts', 'waiting is equal to players length minus currentPosition', 'payout is equal to players theLine index deposit multiplied by players theLine index multiplier divided by 100', 'payoutDue is equal to entryPayout minus players theLine index paid', 'addr is equal to player addr', 'orderJoined is equal to ', 'depositInFinney is equal to player deposit divided by 1 finney', 'payoutInFinney is equal to depositInFinney multiplied by player multiplier divided by 100', 'multiplierPercent is equal to player multiplier', 'paid is equal to player paid divided by 1 finney', 'skippedAhead is equal to player skip', 'squirrels is equal to player squirrels', 'shinyThings is equal to player shinyThings', 'sprockets is equal to player sprockets', 'stars is equal to player stars', 'hearts is equal to player hearts', 'If deposit is less then minDeposit Invalid symbol ', 'If players length Invalid symbol 5 corresponds to 0', 'multiplier increments of 2', 'fee increments of 1', 'stars increments of 1', 'If deposit is less then 1 ether', 'multiplier decreases of ', 'fee decreases of ', 'shinyThings increments of 1', 'If deposit is greater or equal to 1 Invalid symbol ', 'skip increments of 4', 'fee increments of 3', 'If deposit is greater or equal to 2 ether Invalid symbol ', 'multiplier increments of 3', 'fee increments of 2', 'hearts increments of 1', 'If deposit is greater or equal to 3 ether', 'stars increments of 1', 'If players length Invalid symbol 5 corresponds to 1', 'multiplier increments of 4', 'fee increments of 2', 'squirrels increments of 1', 'If deposit is less then 1 ether', 'multiplier increments of 6', 'fee increments of 3', 'squirrels increments of 1', 'If deposit is greater or equal to 2 ether', 'If waitingForPayout is greater or equal to 20', 'skip increments of waitingForPayout divided by 2', 'fee increments of 2', 'shinyThings increments of 1', 'multiplier increments of 4', 'fee increments of 4', 'hearts increments of 1', 'If deposit is greater or equal to 4 ether', 'multiplier increments of 1', 'fee decreases of ', 'skip increments of 1', 'hearts increments of 1', 'stars increments of 1', 'If players length Invalid symbol 5 corresponds to 2', 'multiplier increments of 7', 'fee increments of 6', 'sprockets increments of 1', 'If waitingForPayout is greater or equal to 10', 'multiplier decreases of ', 'fee decreases of ', 'skip increments of 1', 'squirrels increments of 1', 'If deposit is greater or equal to 3 ether', 'multiplier increments of 2', 'skip increments of 1', 'stars increments of 1', 'shinyThings increments of 1', 'If deposit corresponds to maxDeposit', 'multiplier increments of 2', 'skip increments of 1', 'hearts increments of 1', 'squirrels increments of 1', 'If players length Invalid symbol 5 corresponds to 3', 'multiplier decreases of ', 'fee increments of 0', 'skip increments of 3', 'shinyThings increments of 1', 'If deposit is less then 1 ether', 'multiplier decreases of ', 'fee increments of 2', 'skip increments of 5', 'squirrels increments of 1', 'If deposit corresponds to 1 ether', 'multiplier increments of 10', 'fee increments of 4', 'skip increments of 2', 'hearts increments of 1', 'If deposit corresponds to maxDeposit', 'multiplier increments of 1', 'fee increments of 5', 'skip increments of 1', 'sprockets increments of 1', 'stars increments of 1', 'hearts increments of 1', 'If players length Invalid symbol 5 corresponds to 4', 'multiplier increments of 2', 'fee decreases of ', 'squirrels increments of 1', 'If deposit is less then 1 ether', 'multiplier increments of 3', 'fee increments of 2', 'skip increments of 3', 'If deposit is greater or equal to 2 ether', 'multiplier increments of 2', 'fee increments of 2', 'skip increments of 1', 'stars increments of 1', 'If deposit corresponds to maxDeposit divided by 2', 'multiplier increments of 2', 'fee increments of 5', 'skip increments of 3', 'shinyThings increments of 1', 'sprockets increments of 1', 'If deposit is greater or equal to 3 ether', 'multiplier increments of 1', 'fee increments of 1', 'skip increments of 1', 'sprockets increments of 1', 'hearts increments of 1', 'msg sender hearts increments of hearts', 'msg sender stars increments of stars', 'msg sender squirrels increments of squirrels', 'msg sender shinyThings increments of shinyThings', 'msg sender sprockets increments of sprockets', 'totalHearts increments of hearts', 'totalStars increments of stars', 'totalSquirrels increments of squirrels', 'totalShinyThings increments of shinyThings', 'totalSprockets increments of sprockets', 'skip increments of msg sender squirrels', 'msg sender squirrels decreases of ', 'multiplier increments of msg sender stars multiplied by 2', 'fee decreases of msg sender hearts', 'multiplier increments of msg sender sprockets', 'fee decreases of ', 'If msg sender shinyThings is greater or equal to 1', 'skip increments of 1', 'fee decreases of ', 'If msg sender hearts is greater or equal to 1 Invalid symbol  Invalid symbol  Invalid symbol  Invalid symbol ', 'multiplier increments of 30', 'If msg sender hearts is greater or equal to 1 Invalid symbol ', 'multiplier increments of 15', 'msg sender hearts decreases of 1', 'msg sender stars decreases of 1', 'If msg sender sprockets is greater or equal to 1 Invalid symbol ', 'msg sender squirrels increments of 5', 'msg sender sprockets decreases of 1', 'msg sender shinyThings decreases of 1', 'If multiplier is greater then maxMultiplier', 'multiplier corresponds to maxMultiplier', 'If waitingForPayout is greater then 15 Invalid symbol ', 'skip is equal to waitingForPayout divided by 2', 'feeBalance increments of deposit multiplied by fee divided by 100', 'balance increments of deposit minus deposit multiplied by fee divided by 100', 'totalDeposits increments of deposit', 'players length increments of 1', 'theLine length increments of 1', ' is equal to skipInLine', 'players playerIndex addr is equal to msg sender', 'players playerIndex deposit is equal to deposit', 'players playerIndex multiplier is equal to multiplier', 'players playerIndex fee is equal to fee', 'players playerIndex squirrels is equal to squirrels', 'players playerIndex shinyThings is equal to shinyThings', 'players playerIndex sprockets is equal to sprockets', 'players playerIndex stars is equal to stars', 'players playerIndex hearts is equal to hearts', 'players playerIndex skip is equal to skip', ' is equal to playerIndex', 'msg sender entries increments of 1', 'msg sender deposits increments of deposit', 'msg sender skips increments of skip', 'totalSkips increments of skip', 'While balance is greater then 0', 'If nextPayout is less or equal to balance', 'payout is equal to nextPayout', 'payout is equal to balance', 'players theLine currentPosition paid increments of payout', 'players theLine currentPosition addr paid increments of payout', 'balance decreases of payout', 'totalPaid increments of payout', 'If balance is greater then 0', 'Invalid symbol currentPosition', 'nextPayout is equal to entryPayoutDue', 'If skip is greater then 0 Invalid symbol ', 'If skip is greater then waitingForPayout minus 2', 'skip is equal to waitingForPayout minus 2', 'While i is less then skip', ' is equal to ', 'Invalid symbol i', '', 'newLineIndex is equal to currentLineIndex minus i', 'newLineIndex is equal to currentLineIndex', 'skip is equal to 0', 'skipped is equal to skip', 'msg sender squirrels is equal to 0', 'msg sender shinyThings is equal to 0', 'msg sender sprockets is equal to 0', 'msg sender stars is equal to 0', 'msg sender hearts is equal to 0', 'If msg sender is different from owner', 'If  is greater then balance plus feeBalance', 'feeBalance is equal to  minus balance', 'feeBalance is equal to 0', 'If msg sender is different from owner', 'If newMultiplier is less then 80 Invalid symbol ', 'If maxMultiplier is less then 125 Invalid symbol ', 'If newFee is less then 0 Invalid symbol ', 'If minDeposit is less then 1 finney Invalid symbol ', 'If maxDeposit is less then 1 finney Invalid symbol ', '', 'baseMultiplier is equal to newMultiplier', 'maxMultiplier is equal to newMaxMultiplier', 'baseFee is equal to newFee', 'minDeposit is equal to newMinDeposit', 'maxDeposit is equal to newMaxDeposit']"
EthStick,"['Ethstick', 'onlypig', 'NewKing', 'pig', 'balance', 'maxDeposit', 'fee', 'multiplier', 'payoutOrder', 'donkeysInvested', 'investmentRecord', 'carrots', 'eligibleForFees', 'donkeyKing', 'donkeys', 'entries', 'ranking', 'dValue', 'index', 'newEntry', 'done', 'samePosition', 'existingAt', 'payout', 'fees', 'luckyDonkey', 'i', 'FACTOR', 'factor', 'lastBlockNumber', 'hashVal', 'Donkey', 'Entry', 'Donkey has addr', 'Donkey has nickname', 'Donkey has invested', 'Entry has entryAddress', 'Entry has deposit', 'Entry has payout', 'Entry has paid', 'Ethstick', '', 'init', 'chase', 'rankDown', 'addNewDonkey', 'rand', 'changePig', 'changeMultiplier', 'changeFee', 'changeMaxDeposit', 'changeRankingSize', 'changeEligibleDonkeys', 'setNickname', 'carrotsCaught', 'currentBalance', 'theDonkeyKing', 'donkeyName', 'currentMultiplier', 'generousFee', 'nextPayoutGoal', 'totalEntries', 'entryDetails', 'donkeyRanking', 'donkeyInvested', 'totalInvested', 'currentDepositLimit', 'donkeysEligibleForFees', 'pig is equal to msg sender', 'ranking length is equal to 10', 'If msg sender corresponds to pig', 'If msg value is less then 100 finney', 'If msg value is greater then maxDeposit multiplied by 1 ether', 'dValue is equal to maxDeposit multiplied by 1 ether', 'dValue is equal to msg value', 'balance increments of  divided by 100', 'donkeysInvested increments of dValue', 'msg sender invested increments of dValue', 'While ranking index invested is less then newEntry Invalid symbol ', 'If index is greater then 0', 'done is equal to index minus 1 addr invested is greater then newEntry', 'If ranking index addr corresponds to msg sender', 'existingAt is equal to index', '', 'If ranking index addr corresponds to msg sender', ' is equal to ', 'samePosition is equal to True', 'If not done', 'Invalid symbol index', 'done is equal to True', 'index is equal to 0', 'If ranking index addr corresponds to msg sender Invalid symbol ', ' is equal to ', 'samePosition is equal to True', 'If not samePosition', ' is equal to ', 'While balance is greater then entries payoutOrder payout', 'entries payoutOrder paid is equal to True', 'balance decreases of payout', 'Invalid symbol carrots', 'Invalid symbol payoutOrder', 'If fees is greater then 0', 'If entries length is greater or equal to 50 Invalid symbol ', 'fees is equal to dValue multiplied by fee divided by 100', 'If ranking luckyDonkey addr is different from address', 'If msg sender invested is greater then investmentRecord', 'donkeyKing is equal to msg sender', 'investmentRecord is equal to msg sender invested', 'If ranking 0 addr is different from donkeys donkeyKing addr Invalid symbol ', ' is equal to ', ' is equal to ', None, 'i is greater then index', ' is equal to ', 'If donkeys Address addr corresponds to address', 'donkeys Address addr is equal to Address', 'donkeys Address nickname is equal to GullibleDonkey', 'donkeys Address invested is equal to 0', 'pig is equal to newPig', 'If multi is less then 110 Invalid symbol ', 'multiplier is equal to multi', 'If newFee is greater then 5', 'fee is equal to newFee', 'If max is less then 1 Invalid symbol ', 'maxDeposit is equal to max', 'If size is less then 5 Invalid symbol ', 'ranking length is equal to size', 'If number is less then 5 Invalid symbol ', 'eligibleForFees is equal to number', 'If  is greater or equal to 2 Invalid symbol ', 'msg sender nickname is equal to name', 'amount is equal to carrots', 'info is equal to The number of payouts sent to participants.', 'theBalance is equal to balance divided by 1 finney', 'info is equal to The balance of the contract in Finneys.', 'king is equal to donkeyKing', 'nickname is equal to donkeys donkeyKing nickname', 'totalInvested is equal to donkeys donkeyKing invested divided by 1 ether', 'info is equal to The greediest of all donkeys. You go, ass!', 'nickname is equal to donkeys Address nickname', 'theMultiplier is equal to multiplier', 'info is equal to The multiplier applied to all deposits (x100). It determines the amount of money you will get when you catch the carrot.', 'feePercentage is equal to fee', 'info is equal to The generously modest fee percentage applied to all deposits. It can change to lure more donkeys (max 5%).', 'finneys is equal to  divided by 1 finney', 'info is equal to The amount of Finneys (Ethers * 1000) that need to be deposited for the next donkey to catch his carrot.', 'count is equal to entries length', 'info is equal to The number of times the carrot was chased by gullible donkeys.', 'If index is less then entries length Invalid symbol ', 'donkey is equal to entries index entryAddress', 'nickName is equal to entries index entryAddress nickname', 'deposit is equal to entries index deposit divided by 1 finney', 'payout is equal to entries index payout divided by 1 finney', 'paid is equal to entries index paid', 'info is equal to Entry info: donkey address, name, deposit, expected payout in Finneys, payout status.', 'If index is less then ranking length', 'donkey is equal to ranking index addr', 'nickname is equal to ranking index addr nickname', 'totalInvested is equal to ranking index addr invested divided by 1 ether', 'info is equal to Top donkey stats: address, name, ethers deposited. Lower index number means higher rank.', 'invested is equal to ', 'info is equal to The amount of Ethers the donkey has chased carrots with.', 'invested is equal to donkeysInvested divided by 1 ether', 'info is equal to The combined investments of all donkeys in Ethers.', 'ethers is equal to maxDeposit', 'info is equal to The current maximum number of Ethers you may deposit at once.', 'top is equal to eligibleForFees', 'info is equal to The number of donkeys in the ranking that are eligible to receive fees.']"
EthVentures3,"['EthVentures3', 'manager', 'investors', 'total_investors', 'fees', 'balance', 'totaldeposited', 'totalpaidout', 'totaldividends', 'Message_To_Investors', 'owner', 'PRE_inv_length', 'PRE_payout', 'PRE_amount', 'PRE_i', 'amount', 'inv_length', 'alreadyinvestor', 'alreadyinvestor_id', 'i', 'k', 'InvestorArray', 'InvestorArray has etherAddress', 'InvestorArray has amount', 'InvestorArray has percentage_ownership', 'EthVentures3', '', 'Enter', 'NewOwner', 'Emergency', 'NewMessage', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 2 ether', 'totalpaidout increments of PRE_amount divided by 100', 'PRE_amount is equal to PRE_amount minus PRE_amount divided by 100', 'If PRE_inv_length is different from 0 Invalid symbol ', None, 'PRE_i is less then PRE_inv_length', 'PRE_payout is equal to PRE_amount multiplied by investors PRE_i percentage_ownership divided by 10000000000', 'totalpaidout increments of PRE_payout', 'totaldividends increments of PRE_payout', 'fees is equal to amount divided by 100', 'balance increments of amount', 'totaldeposited increments of amount', None, 'i is less then inv_length', 'If msg sender corresponds to investors i etherAddress', 'alreadyinvestor is equal to True', 'alreadyinvestor_id is equal to i', 'If alreadyinvestor corresponds to False', 'total_investors is equal to inv_length plus 1', 'investors length increments of 1', 'investors inv_length etherAddress is equal to msg sender', 'investors inv_length amount is equal to amount', 'investors inv_length percentage_ownership is equal to investors inv_length amount divided by totaldeposited multiplied by 10000000000', None, 'k is less then inv_length', 'investors k percentage_ownership is equal to investors k amount divided by totaldeposited multiplied by 10000000000', 'investors alreadyinvestor_id amount increments of amount', 'investors alreadyinvestor_id percentage_ownership is equal to investors alreadyinvestor_id amount divided by totaldeposited multiplied by 10000000000', 'If fees is different from 0', 'If balance is greater then fees', 'balance decreases of fees', 'totalpaidout increments of fees', 'owner is equal to new_owner', 'If balance is different from 0', 'balance is equal to 0', 'Message_To_Investors is equal to new_sms']"
X15,"['x15', 'onlyowner', 'participants', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'idx', 'transactionAmount', 'Participant', 'Participant has etherAddress', 'Participant has amount', 'Doubler', '', 'enter', 'collectFees', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 ether', 'participants length increments of 1', 'participants idx etherAddress is equal to msg sender', 'participants idx amount is equal to msg value', 'If idx is different from 0', 'collectedFees increments of msg value divided by 30', 'balance increments of msg value', 'collectedFees increments of msg value', 'If balance is greater then participants payoutIdx amount multiplied by 2', 'balance decreases of participants payoutIdx amount multiplied by 2', 'payoutIdx increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', 'owner is equal to _owner']"
NewPonzi,"['newponzi', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'newponzi', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 divided by 100 ether', 'If msg value is greater then 10 ether', 'amount is equal to 10 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 125', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
Quick2,"['quick2', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'quick2', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 divided by 100 ether', 'If msg value is greater then 20 ether', 'amount is equal to 20 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 150', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
ZeroPonzi,"['ZeroPonzi', 'MIN_VALUE', 'MAX_VALUE', 'RET_MUL', 'RET_DIV', 'payouts', 'payoutIndex', 'payoutTotal', 'entryIndex', 'Payout', 'Payout has addr', 'Payout has yield', 'ZeroPonzi', '', 'If  Invalid symbol ', 'payouts length increments of 1', 'payouts entryIndex addr is equal to msg sender', 'payouts entryIndex yield is equal to  divided by RET_DIV', 'While payouts payoutIndex yield is less then this balance', 'payoutTotal increments of payouts payoutIndex yield', 'payoutIndex increments of 1']"
BigRisk2,"['BigRisk', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'BigRisk', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'amount is equal to msg value', 'If amount Invalid symbol 100 ether is different from 0', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'balance increments of amount', 'While balance is greater or equal to persons payoutIdx amount multiplied by 2', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
FairAndDeasy2,"['fairandeasy', 'onlyowner', 'persons', 'payoutIdx', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'fairandeasy', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 divided by 100 ether', 'If msg value is greater then 50 ether', 'amount is equal to 50 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 150', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
FreeEtherADayFundsReturn,"['Free_Ether_A_Day_Funds_Return', 'owner', 'poorguy', 'success', 'Free_Ether_A_Day_Funds_Return', 'return_funds', '', 'kill', 'owner is equal to msg sender', 'If msg sender is different from poorguy', 'If msg value corresponds to 100 ether', 'If not success', 'If msg sender corresponds to owner']"
Rubixi1,"['Rubixi', 'onlyowner', 'balance', 'collectedFees', 'feePercent', 'pyramidMultiplier', 'payoutOrder', 'creator', 'participants', '_fee', 'payoutToSend', 'feesToCollect', 'Participant', 'Participant has etherAddress', 'Participant has payout', 'DynamicPyramid', '', 'init', 'addPayout', 'collectAllFees', 'collectFeesInEther', 'collectPercentOfFees', 'changeOwner', 'changeMultiplier', 'changeFeePercentage', 'currentMultiplier', 'currentFeePercentage', 'currentPyramidBalanceApproximately', 'nextPayoutWhenPyramidBalanceTotalsApproximately', 'feesSeperateFromBalanceApproximately', 'totalParticipants', 'numberOfParticipantsWaitingForPayout', 'participantDetails', 'creator is equal to msg sender', 'If msg sender corresponds to creator', 'If msg value is less then 1 ether', 'collectedFees increments of msg value', 'If msg value is greater or equal to 50 ether', '_fee is divided by 2', 'If participants length corresponds to 10', 'pyramidMultiplier is equal to 200', 'If participants length corresponds to 25', 'pyramidMultiplier is equal to 150', 'balance increments of  divided by 100', 'collectedFees increments of  divided by 100', 'While balance is greater then participants payoutOrder payout', 'balance decreases of participants payoutOrder payout', 'payoutOrder increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', '_amt is multiplied by 1 ether', 'If _amt is greater then collectedFees', 'If collectedFees corresponds to 0', 'collectedFees decreases of _amt', 'If collectedFees corresponds to 0 Invalid symbol ', 'collectedFees decreases of feesToCollect', 'creator is equal to _owner', 'If _mult is greater then 300 Invalid symbol ', 'pyramidMultiplier is equal to _mult', 'If _fee is greater then 10', 'feePercent is equal to _fee', 'multiplier is equal to pyramidMultiplier', 'info is equal to This multiplier applies to you as soon as transaction is received, may be lowered to hasten payouts or increased if payouts are fast enough. Due to no float or decimals, multiplier is x100 for a fractional multiplier e.g. 250 is actually a 2.5x multiplier. Capped at 3x max and 1.2x min.', 'fee is equal to feePercent', 'info is equal to Shown in % form. Fee is halved(50%) for amounts equal or greater than 50 ethers. (Fee may change, but is capped to a maximum of 10%)', 'pyramidBalance is equal to balance divided by 1 ether', 'info is equal to All balance values are measured in Ethers, note that due to no decimal placing, these values show up as integers only, within the contract itself you will get the exact decimal value you are supposed to', 'balancePayout is equal to participants payoutOrder payout divided by 1 ether', 'fees is equal to collectedFees divided by 1 ether', 'count is equal to participants length', 'count is equal to participants length minus payoutOrder', 'If orderInPyramid is less or equal to participants length', 'Address is equal to participants orderInPyramid etherAddress', 'Payout is equal to participants orderInPyramid payout divided by 1 ether']"
PlusOnePonzi,"['NiceGuyPonzi', 'persons', 'niceGuys', 'payoutIdx', 'cNiceGuyIdx', 'investor', 'cNiceGuy', 'idx', 'ngidx', 'Person', 'NiceGuy', 'Person has addr', 'NiceGuy has addr', 'NiceGuyPonzi', '', 'enter', 'cNiceGuy is equal to msg sender', 'If msg value is different from 9 divided by 100 ether', 'If investor is less then 9', 'persons length increments of 1', 'persons idx addr is equal to msg sender', 'investor increments of 1', 'If investor is greater or equal to 9', 'niceGuys length increments of 1', 'niceGuys ngidx addr is equal to msg sender', 'investor increments of 1', 'If investor corresponds to 10', 'cNiceGuy is equal to niceGuys cNiceGuyIdx addr', 'investor is equal to 0', 'cNiceGuyIdx increments of 1', 'If idx is different from 0', 'While this balance is greater then 10 divided by 100 ether', 'payoutIdx increments of 1']"
The10ETHPyramid,"['The10ETHPyramid', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'The10ETHPyramid', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 10 ether', 'If msg value is greater then 10 ether', 'amount is equal to 10 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 150', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
Resilience,"['CloseIfBug', 'RES', 'SwarmRedistribution', 'Resilience', 'RES inherits from CloseIfBug', 'SwarmRedistribution inherits from CloseIfBug', 'SwarmRedistribution inherits from RES', 'Resilience inherits from CloseIfBug', 'Resilience inherits from RES', 'Resilience inherits from SwarmRedistribution', 'onlyJohan', 'isOpen', 'Transfer', 'Bought', 'Sold', 'Swarm', 'JohanNygren', 'bugDiscovered', 'name', 'symbol', 'decimals', 'totalSupply', 'balanceOf', 'dividendPathways', 'isHuman', 'totalBasicIncome', 'taxRate', 'exchangeRate', 'humans', 'inHumans', 'taxCollected', 'sentAmount', 'i', 'timeStamp', 'node', 'share', 'i', 'i', 'dividendPathway', 'dividendPathway has from', 'dividendPathway has amount', 'dividendPathway has timeStamp', 'CloseIfBug', 'closeCampaign', 'RES', 'buy', 'sell', 'SwarmRedistribution', 'transfer', 'iterateThroughSwarm', 'doSwarm', 'removeDividendPathway', 'Resilience', 'setBeneficiary', 'bugDiscovered is equal to False', 'If msg sender is different from JohanNygren', 'If bugDiscovered is different from False', 'bugDiscovered is equal to True', 'name is equal to RES', 'symbol is equal to RES', 'decimals is equal to 18', ' increments of msg value', 'totalSupply increments of msg value', 'If  is less then _value', ' decreases of _value', 'If not msg sender send', 'totalSupply decreases of _value', 'taxRate is equal to 20', 'exchangeRate is equal to 0', 'If _to corresponds to msg sender', 'If  is less then _value', 'If  plus _value is less then ', 'If humans length is greater then 0', 'sentAmount is equal to _value', 'sentAmount is equal to _value minus taxCollected', ' decreases of sentAmount', ' increments of _value minus taxCollected', None, 'i is less then dividendPathways _node length', 'If timeStamp is less or equal to _timeStamp', 'If  corresponds to True Invalid symbol ', ' is equal to True', 'If dividendPathways _node i amount minus _taxCollected is greater then 0', 'dividendPathways _node i amount decreases of _taxCollected', None, 'i is less then humans length', ' increments of share', ' increments of share', ' is equal to False', 'Invalid symbol humans', 'Invalid symbol dividendPathways node index', None, 'i is less then dividendPathways node length minus 1', ' is equal to ', 'Invalid symbol dividendPathways node length', 'If JohanNygren is different from 0', 'JohanNygren is equal to msg sender', ' is equal to True']"
EthBank,"['EthBank', 'onlyowner', 'depositors', 'Total_Savers', 'Fees', 'Balance', 'Total_Deposited', 'Total_Paid_Out', 'Interest_Rate', 'Message', 'owner', 'amount', 'minimal', 'Times', 'i', 'payout', 'nr', 'InvestorArray', 'InvestorArray has etherAddress', 'InvestorArray has amount', 'EthBank', '', 'enter', 'Set_Interest_Rate', 'If msg sender corresponds to owner', 'owner is equal to 0xEe462A6717f17C57C826F1ad9b4d3813495296C9', 'If msg value is greater then 200 finney', 'Total_Savers is equal to depositors length plus 1', 'depositors length increments of 1', 'depositors length minus 1 etherAddress is equal to msg sender', 'depositors length minus 1 amount is equal to amount', 'Fees is equal to amount multiplied by Interest_Rate divided by 100', 'Total_Deposited increments of amount', 'amount decreases of amount multiplied by Interest_Rate divided by 100', 'Balance increments of amount', 'If Fees is different from 0', 'If Fees is less then minimal', 'Total_Paid_Out increments of Fees', None, 'i is less then Times', 'If Fees is greater then 0', 'Total_Paid_Out increments of Fees', 'Fees decreases of minimal', 'If Total_Deposited multiplied by 80 divided by 100 is less then Balance', 'While Balance is greater then depositors nr amount multiplied by Interest_Rate divided by 100 Invalid symbol ', 'payout is equal to depositors nr amount multiplied by Interest_Rate divided by 100', 'Balance decreases of depositors nr amount multiplied by Interest_Rate divided by 100', 'Total_Paid_Out increments of depositors nr amount multiplied by Interest_Rate divided by 100', 'nr increments of 1', 'Message is equal to The Full Interest has been paid to Depositors!', 'If Total_Deposited multiplied by 60 divided by 100 is less then Balance', 'While Balance is greater then depositors nr amount multiplied by Interest_Rate divided by 200 Invalid symbol ', 'payout is equal to depositors nr amount multiplied by Interest_Rate divided by 200', 'Balance decreases of depositors nr amount multiplied by Interest_Rate divided by 200', 'Total_Paid_Out increments of depositors nr amount multiplied by Interest_Rate divided by 200', 'nr increments of 1', 'Message is equal to Funds are between 60% and 80%, so only Half Interest has been paid!', 'Message is equal to Funds are below 60%, no interest payout until new Depositors join!', 'Interest_Rate is equal to new_interest', ""Message is equal to The Bank has changed it's Interest Rates!""]"
MyScheme,"['MyScheme', 'treeBalance', 'numInvestorsMinusOne', 'treeDepth', 'myTree', 'amount', 'i', 'eachLevelGets', 'numInLevel', 'MyScheme', 'getNumInvestors', '', 'treeBalance is equal to 0', 'myTree length is equal to 6', ' is equal to msg sender', 'numInvestorsMinusOne is equal to 0', 'a is equal to numInvestorsMinusOne plus 1', 'If amount is greater or equal to 1000000000000000000', 'numInvestorsMinusOne increments of 1', ' is equal to msg sender', 'amount decreases of 1000000000000000000', 'treeBalance increments of 1000000000000000000', 'If numInvestorsMinusOne is less or equal to 2', 'treeBalance is equal to 0', 'treeDepth is equal to 1', 'If numInvestorsMinusOne plus 1 corresponds to myTree length', None, 'i is less then myTree length minus treeDepth minus 2', 'treeBalance decreases of 500000000000000000', 'i is equal to 0', None, 'i is less then myTree length minus treeDepth minus 2', 'treeBalance decreases of eachLevelGets divided by numInLevel minus 1', 'If numInLevel multiplied by  divided by 2 minus 1 corresponds to i', 'numInLevel increments of 1', 'myTree length increments of treeDepth plus 3', 'treeDepth increments of 1', 'treeBalance increments of amount']"
Doubler1,"['Doubler', 'onlyowner', 'participants', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'fee', 'idx', 'txAmount', 'Participant', 'Participant has etherAddress', 'Participant has amount', 'Doubler', '', 'enter', 'collectFees', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'collectedFees increments of fee', 'Invalid symbol participants length', 'participants idx etherAddress is equal to msg sender', 'participants idx amount is equal to msg value minus fee', 'balance increments of msg value minus fee', 'If balance is greater or equal to txAmount', 'If not participants payoutIdx etherAddress send', 'balance decreases of txAmount', 'Invalid symbol payoutIdx', 'If collectedFees corresponds to 0', 'If not owner send', 'collectedFees is equal to 0', 'owner is equal to _owner']"
NotAnotherPonzi,"['NotAnotherPonzi', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'NotAnotherPonzi', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 divided by 100 ether', 'If msg value is greater then 10 ether', 'amount is equal to 10 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 125', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
Triple,"['triple', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'triple', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 3 ether', 'If msg value is greater then 27 ether', 'amount is equal to 27 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 150', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
X3,"['X3', 'onlyowner', 'participants', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'idx', 'transactionAmount', 'Participant', 'Participant has etherAddress', 'Participant has amount', 'X3', '', 'enter', 'collectFees', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 ether', 'participants length increments of 1', 'participants idx etherAddress is equal to msg sender', 'participants idx amount is equal to msg value', 'If idx is different from 0', 'collectedFees increments of msg value divided by 3', 'balance increments of msg value', 'collectedFees increments of msg value', 'If balance is greater then participants payoutIdx amount multiplied by 3', 'balance decreases of participants payoutIdx amount multiplied by 3', 'payoutIdx increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', 'owner is equal to _owner']"
EthMultiplier,"['EthMultiplier', 'entryCosts', 'awaitingPayOut', 'isForSale', 'onlyOwner', 'FPLimits', 'POTODLimits', 'SCPLimits', 'newInvestor', 'lastInvestorPaidOut', 'manualCheckInvestmentRequired', 'newOwner', 'newFeePercentageIsSet', 'newPayOutPercentageIsSet', 'smartContractIsForSale', 'smartContractSaleEnded', 'smartContractPriceIsSet', 'id', 'payoutIdx', 'owner', 'investors', 'feePercentage', 'payOutPercentage', 'smartContactForSale', 'priceOfSmartContract', 'iPayoutIdx', 'Investor', 'Investor has addr', 'Investor has payout', 'Investor has paidOut', 'EthMultiplier', '', 'invest', 'checkInvestmentRequired', 'buySmartContract', 'setFeePercentage', 'setPayOutPercentage', 'putSmartContractOnSale', 'setSmartContractPrice', 'owner is equal to msg sender', 'If msg value is less then min Invalid symbol ', 'investors id addr is equal to msg sender', 'investors id payout is equal to msg value multiplied by  divided by 100', 'While this balance is greater or equal to investors payoutIdx payout', 'Invalid symbol payoutIdx paidOut is equal to True', 'If _manual Invalid symbol ', None, 'iPayoutIdx is less or equal to _investorId', 'amount increments of investors iPayoutIdx payout', 'amount is equal to  multiplied by 100 divided by ', '', 'If  Invalid symbol msg value is less then priceOfSmartContract Invalid symbol ', 'If msg value is greater then priceOfSmartContract', 'owner is equal to msg sender', 'smartContactForSale is equal to False', 'If msg sender is different from owner', 'If _percentage is greater then 25', 'feePercentage is equal to _percentage', 'If _percentage is greater then 100 Invalid symbol ', 'payOutPercentage is equal to _percentageOnTopOfDeposit', 'smartContactForSale is equal to _sell', 'If _price is less or equal to 10 ether', 'priceOfSmartContract is equal to _price']"
SmallPonzi,"['smallponzi', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'smallponzi', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 divided by 100 ether', 'If msg value is greater then 3 ether', 'amount is equal to 3 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 3', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 3', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 133', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
BankWithInterest,"['Bank_With_Interest', 'balances', 'term_deposit_end_block', 'thebank', 'minimum_payment', 'deposit_fee', 'contract_alive_until_this_block', 'any_customer_payments_yet', 'interest', 'Bank_With_Interest', 'deposit', 'withdraw', 'set_minimum_payment', 'set_deposit_fee', 'get_available_interest_amount', 'get_term_deposit_end_date', 'get_balance', 'extend_life_of_contract', 'close_bank', '', 'thebank is equal to msg sender', 'minimum_payment is equal to 250 ether', 'deposit_fee is equal to 5 ether', 'contract_alive_until_this_block is equal to 3000000', ' is equal to 0', 'If msg value is less then minimum_payment', 'If  corresponds to 0', 'deposit_fee is equal to 0 ether', 'If msg sender corresponds to thebank', ' increments of msg value', 'any_customer_payments_yet is equal to True', ' increments of msg value minus deposit_fee', ' increments of deposit_fee', ' is equal to block number plus 30850', 'If withdraw_amount is less then 10 ether', 'If withdraw_amount is greater then ', 'If block number is less then ', 'If msg sender corresponds to thebank', 'interest is equal to 0 ether', 'If interest is greater then ', 'interest is equal to ', ' decreases of interest', ' decreases of withdraw_amount', 'If not msg sender send', 'If not msg sender send', 'If msg sender corresponds to thebank', 'minimum_payment is equal to new_limit', 'If msg sender corresponds to thebank', 'deposit_fee is equal to new_fee', 'If msg sender is different from thebank Invalid symbol ', 'contract_alive_until_this_block is equal to newblock', ' is equal to contract_alive_until_this_block', 'If contract_alive_until_this_block is less then block number Invalid symbol ', ' increments of msg value']"
LuckyDoubler,"['LuckyDoubler', 'onlyowner', 'owner', 'balance', 'fee', 'multiplier', 'users', 'entries', 'unpaidEntries', 'dValue', 'index', 'theEntry', 'payout', 'fees', 'FACTOR', 'factor', 'lastBlockNumber', 'hashVal', 'User', 'Entry', 'User has id', 'User has deposits', 'User has payoutsReceived', 'Entry has entryAddress', 'Entry has deposit', 'Entry has payout', 'Entry has paid', 'LuckyDoubler', '', 'init', 'join', 'rand', 'changeOwner', 'changeMultiplier', 'changeFee', 'multiplierFactor', 'currentFee', 'totalEntries', 'userStats', 'entryDetails', 'owner is equal to msg sender', 'If msg sender corresponds to owner', 'If msg value is less then 1 ether', 'If msg value is greater then 1 ether', 'dValue is equal to 1 ether', 'If msg sender id corresponds to address', 'msg sender id is equal to msg sender', 'msg sender deposits is equal to 0', 'msg sender payoutsReceived is equal to 0', 'Invalid symbol msg sender deposits', 'balance increments of  divided by 100', 'If balance is greater then theEntry payout', 'theEntry paid is equal to True', 'Invalid symbol theEntry entryAddress payoutsReceived', 'balance decreases of payout', 'If index is less then unpaidEntries length minus 1', ' is equal to ', 'Invalid symbol unpaidEntries length', 'If fees is greater then 0', 'owner is equal to newOwner', 'If multi is less then 110 Invalid symbol ', 'multiplier is equal to multi', 'If fee is greater then 5', 'fee is equal to newFee', 'factor is equal to multiplier', 'info is equal to The current multiplier applied to all deposits. Min 110%, max 150%.', 'feePercentage is equal to fee', 'info is equal to The fee percentage applied to all deposits. It can change to speed payouts (max 5%).', 'count is equal to entries length', 'info is equal to The number of deposits.', 'If users user id is different from address', 'deposits is equal to users user deposits', 'payouts is equal to users user payoutsReceived', 'info is equal to Users stats: total deposits, payouts received.', 'If index is less then entries length', 'user is equal to entries index entryAddress', 'payout is equal to entries index payout divided by 1 finney', 'paid is equal to entries index paid', 'info is equal to Entry info: user address, expected payout in Finneys, payout status.']"
Doubler2,"['Doubler', 'onlyowner', 'participants', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'idx', 'transactionAmount', 'Participant', 'Participant has etherAddress', 'Participant has amount', 'Doubler', '', 'enter', 'collectFees', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 ether', 'participants length increments of 1', 'participants idx etherAddress is equal to msg sender', 'participants idx amount is equal to msg value', 'If idx is different from 0', 'collectedFees increments of msg value divided by 10', 'balance increments of msg value', 'collectedFees increments of msg value', 'If balance is greater then participants payoutIdx amount multiplied by 2', 'balance decreases of participants payoutIdx amount multiplied by 2', 'payoutIdx increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', 'owner is equal to _owner']"
CrystalDoubler,"['CrystalDoubler', 'depositors', 'Total_Players', 'Balance', 'Total_Deposited', 'Total_Paid_Out', 'Message', 'owner', 'Amount', 'payout', 'nr', 'InvestorArray', 'InvestorArray has EtherAddress', 'InvestorArray has Amount', 'CrystalDoubler', '', 'enter', 'owner is equal to msg sender', 'If msg value is greater then 500 finney', 'Total_Players is equal to depositors length plus 1', 'depositors length increments of 1', 'depositors length minus 1 EtherAddress is equal to msg sender', 'depositors length minus 1 Amount is equal to Amount', 'Balance increments of Amount', 'Total_Deposited increments of Amount', 'While Balance is greater then depositors nr Amount multiplied by 200 divided by 100 Invalid symbol ', 'payout is equal to depositors nr Amount multiplied by 200 divided by 100', 'Balance decreases of depositors nr Amount multiplied by 200 divided by 100', 'Total_Paid_Out increments of depositors nr Amount multiplied by 200 divided by 100']"
PiggyBank1,"['PiggyBank', 'onlyowner', 'investors', 'k', 'fees', 'balance', 'owner', 'amount', 'total_inv', 'transactionAmount', 'InvestorArray', 'InvestorArray has etherAddress', 'InvestorArray has amount', 'PiggyBank', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 50 finney', 'investors length increments of 1', 'investors total_inv etherAddress is equal to msg sender', 'investors total_inv amount is equal to amount', 'fees is equal to amount divided by 33', 'balance increments of amount', 'If fees is different from 0', 'If balance is greater then fees', 'balance decreases of fees', 'While balance is greater then investors k amount multiplied by 3 divided by 100 Invalid symbol ', 'If k Invalid symbol 25 corresponds to 0 Invalid symbol ', 'transactionAmount is equal to investors k amount multiplied by 9 divided by 100', 'balance decreases of investors k amount multiplied by 9 divided by 100', 'transactionAmount is equal to investors k amount multiplied by 3 divided by 100', 'balance decreases of investors k amount multiplied by 3 divided by 100', 'k increments of 1', 'owner is equal to new_owner']"
BigRisk1,"['BigRisk', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'BigRisk', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'amount is equal to msg value', 'If amount Invalid symbol 100 ether is different from 0', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'balance increments of amount', 'While balance is greater or equal to persons payoutIdx amount multiplied by 2', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
Tanya1,"['Tanya', 'onlyowner', 'participants', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'fee', 'idx', 'txAmount', 'Participant', 'Participant has etherAddress', 'Participant has amount', 'Tanya', '', 'enter', 'collectFees', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'collectedFees increments of fee', 'Invalid symbol participants length', 'participants idx etherAddress is equal to msg sender', 'participants idx amount is equal to msg value', 'balance increments of msg value minus fee', 'If balance is greater or equal to txAmount', 'If not participants payoutIdx etherAddress send', 'balance decreases of txAmount', 'Invalid symbol payoutIdx', 'If collectedFees corresponds to 0', 'If not owner send', 'collectedFees is equal to 0', 'owner is equal to _owner']"
KingOfTheEtherThrone1,"['ProtectTheCastle', 'jester', 'lastReparation', 'piggyBank', 'collectedFee', 'citizensAddresses', 'citizensAmounts', 'totalCitizens', 'lastCitizenPaid', 'bribedCitizen', 'round', 'amountAlreadyPaidBack', 'amountInvested', 'SIX_HOURS', 'amount', 'ProtectTheCastle', 'repairTheCastle', '', 'newBribedCitizen', 'collectFee', 'newJester', 'bribedCitizen is equal to msg sender', 'jester is equal to msg sender', 'lastReparation is equal to block timestamp', 'amountAlreadyPaidBack is equal to 0', 'amountInvested is equal to 0', 'totalCitizens is equal to 0', 'If amount is less then 10 finney', 'If amount is greater then 100 ether', 'amount is equal to 100 ether', 'If lastReparation plus SIX_HOURS is less then block timestamp', 'If totalCitizens corresponds to 1', 'If totalCitizens corresponds to 2', 'If totalCitizens is greater or equal to 3', 'piggyBank is equal to 0', 'jester is equal to msg sender', 'lastReparation is equal to block timestamp', 'totalCitizens increments of 1', 'amountInvested increments of amount', 'piggyBank increments of amount', 'collectedFee increments of amount multiplied by 3 divided by 100', 'round increments of 1', 'lastReparation is equal to block timestamp', 'totalCitizens increments of 1', 'amountInvested increments of amount', 'piggyBank increments of ', 'collectedFee increments of amount multiplied by 3 divided by 100', 'While  is less then  Invalid symbol ', 'amountAlreadyPaidBack increments of ', 'lastCitizenPaid increments of 1', 'If msg sender corresponds to bribedCitizen', 'bribedCitizen is equal to newBribedCitizen', 'If msg sender corresponds to bribedCitizen', 'If msg sender corresponds to jester', 'jester is equal to newJester']"
Fresh,"['fresh', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'fresh', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 ether', 'If msg value is greater then 20 ether', 'amount is equal to 20 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 200', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
NanoPyramid,"['NanoPyramid', 'onlyowner', 'pyramidMultiplier', 'minAmount', 'maxAmount', 'fee', 'collectedFees', 'minFeePayout', 'owner', 'participants', 'payoutOrder', 'balance', 'amount', 'amountToRefund', 'payoutToSend', 'payout', 'idx', 'Participant', 'Participant has etherAddress', 'Participant has payout', 'NanoPyramid', '', 'enter', 'totalParticipants', 'awaitingParticipants', 'outstandingBalance', 'setOwner', 'owner is equal to msg sender', 'If msg sender corresponds to owner', 'If msg value is less then minAmount', 'collectedFees increments of msg value', 'If msg value is greater then maxAmount', 'If amountToRefund is greater or equal to minAmount', 'If not msg sender send', 'amount is equal to maxAmount', 'amount is equal to msg value', 'balance increments of  divided by 100', 'collectedFees increments of  divided by 100', 'While balance is greater then participants payoutOrder payout', 'balance decreases of payoutToSend', 'payoutOrder increments of 1', 'If collectedFees is greater or equal to minFeePayout', 'If not owner send', '', 'collectedFees is equal to 0', 'collectedFees is equal to 0', 'count is equal to participants length', 'count is equal to participants length minus payoutOrder', 'idx is equal to payoutOrder', None, 'idx is less then participants length', 'payout increments of participants idx payout', 'amount is equal to payout minus balance', 'owner is equal to _owner']"
ResetPonzi7,"['ResetPonzi', 'persons', 'niceGuys', 'payoutIdx', 'currentNiceGuyIdx', 'investor', 'currentNiceGuy', 'ngidx', 'idx', 'Person', 'NiceGuy', 'Person has addr', 'NiceGuy has addr2', 'ResetPonzi', '', 'enter', 'currentNiceGuy is equal to msg sender', 'If msg value is different from 9 divided by 10 ether', 'If investor is greater then 8', 'niceGuys length increments of 1', 'niceGuys ngidx addr2 is equal to msg sender', 'If investor corresponds to 10', 'currentNiceGuy is equal to niceGuys currentNiceGuyIdx addr2', 'currentNiceGuyIdx increments of 1', 'If investor is less then 9', 'persons length increments of 1', 'persons idx addr is equal to msg sender', 'investor increments of 1', 'If investor corresponds to 11', 'investor is equal to 0', 'While this balance is greater then 10 divided by 10 ether', 'payoutIdx increments of 1']"
Tomeka,"['Tomeka', 'onlyowner', 'balance', 'collectedFees', 'feePercent', 'pyramidMultiplier', 'payoutOrder', 'creator', 'participants', '_fee', 'payoutToSend', 'feesToCollect', 'Participant', 'Participant has etherAddress', 'Participant has payout', 'Tomeka', '', 'init', 'addPayout', 'collectAllFees', 'collectFeesInEther', 'collectPercentOfFees', 'changeOwner', 'changeMultiplier', 'changeFeePercentage', 'currentMultiplier', 'currentFeePercentage', 'currentPyramidBalanceApproximately', 'nextPayoutWhenPyramidBalanceTotalsApproximately', 'feesSeperateFromBalanceApproximately', 'totalParticipants', 'numberOfParticipantsWaitingForPayout', 'participantDetails', 'creator is equal to msg sender', 'If msg sender corresponds to creator', 'If msg value is less then 1 ether', 'collectedFees increments of msg value', 'If msg value is greater or equal to 50 ether', '_fee is divided by 2', 'If participants length corresponds to 10', 'pyramidMultiplier is equal to 200', 'If participants length corresponds to 25', 'pyramidMultiplier is equal to 150', 'balance increments of  divided by 100', 'collectedFees increments of  divided by 100', 'While balance is greater then participants payoutOrder payout', 'balance decreases of participants payoutOrder payout', 'payoutOrder increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', '_amt is multiplied by 1 ether', 'If _amt is greater then collectedFees', 'If collectedFees corresponds to 0', 'collectedFees decreases of _amt', 'If collectedFees corresponds to 0 Invalid symbol ', 'collectedFees decreases of feesToCollect', 'creator is equal to _owner', 'If _mult is greater then 300 Invalid symbol ', 'pyramidMultiplier is equal to _mult', 'If _fee is greater then 10', 'feePercent is equal to _fee', 'multiplier is equal to pyramidMultiplier', 'info is equal to This multiplier applies to you as soon as transaction is received, may be lowered to hasten payouts or increased if payouts are fast enough. Due to no float or decimals, multiplier is x100 for a fractional multiplier e.g. 250 is actually a 2.5x multiplier. Capped at 3x max and 1.2x min.', 'fee is equal to feePercent', 'info is equal to Shown in % form. Fee is halved(50%) for amounts equal or greater than 50 ethers. (Fee may change, but is capped to a maximum of 10%)', 'pyramidBalance is equal to balance divided by 1 ether', 'info is equal to All balance values are measured in Ethers, note that due to no decimal placing, these values show up as integers only, within the contract itself you will get the exact decimal value you are supposed to', 'balancePayout is equal to participants payoutOrder payout divided by 1 ether', 'fees is equal to collectedFees divided by 1 ether', 'count is equal to participants length', 'count is equal to participants length minus payoutOrder', 'If orderInPyramid is less or equal to participants length', 'Address is equal to participants orderInPyramid etherAddress', 'Payout is equal to participants orderInPyramid payout divided by 1 ether']"
Etheramid,"['Etheramid', 'Tree', 'Index', 'Count', 'top', 'contribution', 'rand', 'ida', 'amount', 'next', 'rest', 'level', 'toSend', 'Participant', 'Participant has inviter', 'Participant has itself', 'Participant has totalPayout', 'Etheramid', '', 'getParticipantById', 'getParticipantByAddress', 'addParticipant', 'getParticipantCount', 'enter', 'top is equal to msg sender', 'If id is greater or equal to Count', 'inviter is equal to Tree ida inviter', 'itself is equal to Tree ida itself', 'totalPayout is equal to Tree ida totalPayout', 'If Tree adr itself corresponds to 0x0', 'inviter is equal to Tree adr inviter', 'itself is equal to Tree adr itself', 'totalPayout is equal to Tree adr totalPayout', ' is equal to itself', ' is equal to Participant', 'Count increments of 1', 'count is equal to Count', 'If  Invalid symbol  Invalid symbol ', 'While  Invalid symbol ', 'Tree next totalPayout increments of toSend', 'rest decreases of toSend', 'next is equal to Tree next inviter', 'Invalid symbol level', 'Tree next totalPayout increments of rest']"
EtherAds,"['EtherAds', 'onlyowners', 'BuyAd', 'ResetContract', 'PayoutEarnings', 'charityFundations', 'charityFoundationIdx', 'officialWebsite', 'ads', 'payoutIdx', 'balance', 'fees', 'contractExpirationTime', 'headerColor', 'maximumDeposit', 'txsThreshold', 'prolongH', 'minDeposits', 'txsPerHour', 'lastHour', 'frozenMinDeposit', 'owners', 'value', 'minimalDeposit', 'id', 'level', 'txsThresholdIndex', 'txsPerLast24hours', 'i', 'currtHour', 'txsCounter', 'amount', 'level0Fee', 'level1Fee', 'level2Fee', 'refId', 'i', 'i', 'refId', 'sharedFee', 'i', 'i', 'id', 'Ad', 'charityFundation', 'Ad has etherAddress', 'Ad has amount', 'Ad has href', 'Ad has anchor', 'Ad has imgId', 'Ad has countryId', 'Ad has refId', 'charityFundation has href', 'charityFundation has anchor', 'charityFundation has imgId', 'EtherAds', '', 'buyAd', 'prolongateContract', 'getMinimalDeposit', 'getCurrentLevel', 'updateTxStats', 'distributeEarnings', 'resetContract', 'setReferralId', 'collectFees', 'changeOwner', 'setOfficialWebsite', 'addCharityFundation', 'resetFoundationtList', 'giveMeat', 'If msg sender corresponds to  Invalid symbol  Invalid symbol ', ' is equal to owner0', ' is equal to owner1', ' is equal to owner2', 'charityFoundationIdx increments of 1', 'If charityFoundationIdx is greater or equal to charityFundations length', 'charityFoundationIdx is equal to 0', 'If value is less then minimalDeposit', 'If value is greater then maximumDeposit', 'value is equal to maximumDeposit', 'If  is greater then 100 Invalid symbol ', 'ads length increments of 1', 'ads id etherAddress is equal to msg sender', 'ads id amount is equal to value', 'ads id href is equal to href', 'ads id imgId is equal to imgId', 'ads id anchor is equal to anchor', 'ads id countryId is equal to countryId', 'balance increments of value', 'headerColor is equal to _headerColor', 'contractExpirationTime is equal to now plus ', 'If  is greater then frozenMinDeposit', 'frozenMinDeposit is equal to ', 'While i is less then 24', 'txsPerLast24hours increments of ', 'i increments of 1', 'i is equal to 0', 'While txsPerLast24hours is greater then ', 'i is equal to i plus 1', 'If lastHour is less then currtHour', 'txsCounter is equal to 0', 'lastHour is equal to currtHour', 'txsCounter increments of 1', ' is equal to txsCounter', 'While True', 'If balance is greater or equal to amount', 'fees increments of amount divided by 100 multiplied by 15', 'If refId corresponds to ', 'balance increments of level0Fee plus level1Fee plus level2Fee', 'refId is equal to uint refId', 'If refId corresponds to ', 'balance increments of level1Fee plus level2Fee', 'refId is equal to uint refId', 'If refId corresponds to ', 'balance increments of level2Fee', 'balance decreases of amount', 'payoutIdx increments of 1', 'If now is greater then contractExpirationTime', 'balance is equal to balance divided by 2', 'ads length is equal to 0', 'payoutIdx is equal to 0', 'contractExpirationTime is equal to now plus 14 days', 'frozenMinDeposit is equal to 0', 'While i is less then 24', ' is equal to 0', 'i increments of 1', 'While i is less then ads length', 'If ads i etherAddress corresponds to referral', 'refId is equal to int', 'i increments of 1', 'ads id refId is equal to refId', 'If fees corresponds to 0', 'While i is less then 3', 'i increments of 1', 'fees is equal to 0', 'While i is less then 3', 'If msg sender corresponds to ', ' is equal to newOwner', 'i increments of 1', 'officialWebsite is equal to url', 'charityFundations length increments of 1', 'charityFundations id href is equal to href', 'charityFundations id anchor is equal to anchor', 'charityFundations id imgId is equal to imgId', 'charityFundations length is equal to 0', 'balance increments of msg value']"
EthVenturesFinal2,"['EthVenturesFinal', 'manager', 'investors', 'total_investors', 'fees', 'balance', 'totaldeposited', 'totalpaidout', 'totaldividends', 'Message_To_Investors', 'owner', 'PRE_payout', 'PRE_amount', 'PRE_i', 'amount', 'alreadyinvestor', 'alreadyinvestor_id', 'i', 'k', 'InvestorArray', 'InvestorArray has etherAddress', 'InvestorArray has amount', 'InvestorArray has percentage_ownership', 'EthVenturesFinal', '', 'Enter', 'NewOwner', 'Emergency', 'EmergencyBalanceReset', 'NewMessage', 'NewManualInvestor', 'ManualDeposit', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 2 ether', 'totalpaidout increments of PRE_amount divided by 100', 'PRE_amount decreases of PRE_amount divided by 100', 'If investors length is different from 0 Invalid symbol ', None, 'PRE_i is less then investors length', 'PRE_payout is equal to PRE_amount multiplied by investors PRE_i percentage_ownership divided by 10000000000', 'totalpaidout increments of PRE_payout', 'totaldividends increments of PRE_payout', 'Message_To_Investors is equal to Dividends have been paid out!', 'fees is equal to amount divided by 100', 'totaldeposited increments of amount', 'amount decreases of amount divided by 100', 'balance increments of amount', None, 'i is less then investors length', 'If msg sender corresponds to investors i etherAddress', 'alreadyinvestor is equal to True', 'alreadyinvestor_id is equal to i', 'If alreadyinvestor corresponds to False', 'total_investors is equal to investors length plus 1', 'investors length increments of 1', 'investors length minus 1 etherAddress is equal to msg sender', 'investors length minus 1 amount is equal to amount', 'investors length minus 1 percentage_ownership is equal to amount divided by totaldeposited multiplied by 10000000000', 'Message_To_Investors is equal to New Investor has joined us!', None, 'k is less then investors length', 'investors k percentage_ownership is equal to investors k amount divided by totaldeposited multiplied by 10000000000', 'investors alreadyinvestor_id amount increments of amount', 'investors alreadyinvestor_id percentage_ownership is equal to investors alreadyinvestor_id amount divided by totaldeposited multiplied by 10000000000', 'If fees is different from 0', 'totalpaidout increments of fees', 'owner is equal to new_owner', 'Message_To_Investors is equal to The contract has a new manager!', 'If balance is different from 0', 'balance is equal to 0', 'Message_To_Investors is equal to Emergency Withdraw has been issued!', 'balance is equal to new_balance', 'Message_To_Investors is equal to The Balance has been edited by the Manager!', 'Message_To_Investors is equal to new_sms', 'total_investors is equal to investors length plus 1', 'investors length increments of 1', 'investors length minus 1 etherAddress is equal to new_investor', 'investors length minus 1 amount is equal to new_amount', 'investors length minus 1 percentage_ownership is equal to new_amount divided by totaldeposited multiplied by 10000000000', 'Message_To_Investors is equal to New manual Investor has been added by the Manager!', 'totaldeposited increments of msg value', 'balance increments of msg value', 'Message_To_Investors is equal to Manual Deposit received from the Manager']"
TheGame1,"['TheGame', 'first_player', 'regeneration', 'jackpot', 'collectedFee', 'playersAddresses', 'playersAmounts', 'totalplayers', 'lastPlayerPaid', 'mainPlayer', 'round', 'amountAlreadyPaidBack', 'amountInvested', 'SIX_HOURS', 'amount', 'TheGame', 'contribute_toTheGame', '', 'restart', 'new_mainPlayer', 'collectFee', 'newfirst_player', 'mainPlayer is equal to msg sender', 'first_player is equal to msg sender', 'regeneration is equal to block timestamp', 'amountAlreadyPaidBack is equal to 0', 'amountInvested is equal to 0', 'totalplayers is equal to 0', 'If amount is less then 1 ether', 'If amount is greater then 100 ether', 'amount is equal to 100 ether', 'If regeneration plus SIX_HOURS is less then block timestamp', 'If totalplayers corresponds to 1', 'If totalplayers corresponds to 2', 'If totalplayers is greater or equal to 3', 'jackpot is equal to 0', 'first_player is equal to msg sender', 'regeneration is equal to block timestamp', 'totalplayers increments of 1', 'amountInvested increments of amount', 'jackpot increments of amount', 'collectedFee increments of amount multiplied by 3 divided by 100', 'round increments of 1', 'regeneration is equal to block timestamp', 'totalplayers increments of 1', 'amountInvested increments of amount', 'jackpot increments of ', 'collectedFee increments of amount multiplied by 3 divided by 100', 'While  is less then  Invalid symbol ', 'amountAlreadyPaidBack increments of ', 'lastPlayerPaid increments of 1', 'If msg sender corresponds to mainPlayer', 'If msg sender corresponds to mainPlayer', 'mainPlayer is equal to new_mainPlayer', 'If msg sender corresponds to mainPlayer', 'If msg sender corresponds to first_player', 'first_player is equal to newfirst_player']"
ProtectTheCastle1,"['ProtectTheCastle', 'jester', 'lastReparation', 'piggyBank', 'collectedFee', 'citizensAddresses', 'citizensAmounts', 'totalCitizens', 'lastCitizenPaid', 'bribedCitizen', 'round', 'amountAlreadyPaidBack', 'amountInvested', 'SIX_HOURS', 'amount', 'ProtectTheCastle', 'repairTheCastle', '', 'surrender', 'newBribedCitizen', 'collectFee', 'newJester', 'bribedCitizen is equal to msg sender', 'jester is equal to msg sender', 'lastReparation is equal to block timestamp', 'amountAlreadyPaidBack is equal to 0', 'amountInvested is equal to 0', 'totalCitizens is equal to 0', 'If amount is less then 10 finney', 'If amount is greater then 100 ether', 'amount is equal to 100 ether', 'If lastReparation plus SIX_HOURS is less then block timestamp', 'If totalCitizens corresponds to 1', 'If totalCitizens corresponds to 2', 'If totalCitizens is greater or equal to 3', 'piggyBank is equal to 0', 'jester is equal to msg sender', 'lastReparation is equal to block timestamp', 'totalCitizens increments of 1', 'amountInvested increments of amount', 'piggyBank increments of amount', 'collectedFee increments of amount multiplied by 3 divided by 100', 'round increments of 1', 'lastReparation is equal to block timestamp', 'totalCitizens increments of 1', 'amountInvested increments of amount', 'piggyBank increments of ', 'collectedFee increments of amount multiplied by 3 divided by 100', 'While  is less then  Invalid symbol ', 'amountAlreadyPaidBack increments of ', 'lastCitizenPaid increments of 1', 'If msg sender corresponds to bribedCitizen', 'If msg sender corresponds to bribedCitizen', 'bribedCitizen is equal to newBribedCitizen', 'If msg sender corresponds to bribedCitizen', 'If msg sender corresponds to jester', 'jester is equal to newJester']"
Matthew,"['Matthew', 'onlyOwner', 'MatthewWon', 'StakeIncreased', 'owner', 'whale', 'blockheight', 'stake', 'period', 'DELTA', 'WINNERTAX_PRECENT', 'mustBeDestroyed', 'newPeriod', 'isSuccess', 'nextStake', 'isOtherSuccess', 'Matthew', 'setFacts', '', 'destroyWhenRoundOver', 'setNewPeriod', 'getPeriod', 'getNewPeriod', 'getDestroyedWhenRoundOver', 'getBlocksTillMatthew', 'owner is equal to msg sender', 'stake is equal to this balance', 'period is equal to newPeriod', 'blockheight is equal to block number', 'whale is equal to msg sender', 'If block number minus period is greater or equal to blockheight', 'If isSuccess corresponds to False', 'isSuccess is equal to whale send', '', 'If msg value is less then stake plus DELTA', 'mustBeDestroyed is equal to True', 'newPeriod is equal to _newPeriod', 'If blockheight plus period is greater then block number', 'If msg sender is different from owner']"
ResetPonzi8,"['ResetPonzi', 'persons', 'niceGuys', 'payoutIdx', 'currentNiceGuyIdx', 'investor', 'currentNiceGuy', 'ngidx', 'idx', 'Person', 'NiceGuy', 'Person has addr', 'NiceGuy has addr2', 'ResetPonzi', '', 'enter', 'currentNiceGuy is equal to msg sender', 'If msg value is different from 9 ether', 'If investor is greater then 8', 'niceGuys length increments of 1', 'niceGuys ngidx addr2 is equal to msg sender', 'If investor corresponds to 10', 'currentNiceGuy is equal to niceGuys currentNiceGuyIdx addr2', 'currentNiceGuyIdx increments of 1', 'If investor is less then 9', 'persons length increments of 1', 'persons idx addr is equal to msg sender', 'investor increments of 1', 'If investor corresponds to 11', 'investor is equal to 0', 'If idx is different from 0', 'While this balance is greater then 10 ether', 'payoutIdx increments of 1']"
TreasureChest,"['TreasureChest', 'onlyowner', 'investors', 'investors_needed_until_jackpot', 'totalplayers', 'fees', 'balance', 'totaldeposited', 'totalpaidout', 'owner', 'amount', 'tot_pl', 'payout', 'nr', 'InvestorArray', 'InvestorArray has etherAddress', 'InvestorArray has amount', 'TreasureChest', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 50 finney', 'totalplayers is equal to tot_pl plus 1', 'investors_needed_until_jackpot is equal to 30 minus ', 'investors length increments of 1', 'investors tot_pl etherAddress is equal to msg sender', 'investors tot_pl amount is equal to amount', 'fees is equal to amount divided by 15', 'balance increments of amount', 'totaldeposited increments of amount', 'If fees is different from 0', 'If balance is greater then fees', 'balance decreases of fees', 'totalpaidout increments of fees', 'While balance is greater then investors nr amount multiplied by 6 divided by 100 Invalid symbol ', 'If nr Invalid symbol 30 corresponds to 0 Invalid symbol ', 'payout is equal to investors nr amount multiplied by 18 divided by 100', 'balance decreases of investors nr amount multiplied by 18 divided by 100', 'totalpaidout increments of investors nr amount multiplied by 18 divided by 100', 'payout is equal to investors nr amount multiplied by 6 divided by 100', 'balance decreases of investors nr amount multiplied by 6 divided by 100', 'totalpaidout increments of investors nr amount multiplied by 6 divided by 100', 'nr increments of 1', 'owner is equal to new_owner']"
TimeGame3,"['timegame', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'TWELEVE_HOURS', 'regeneration', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'timegame', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'regeneration is equal to block timestamp', 'If regeneration plus TWELEVE_HOURS is less then block timestamp', 'If msg value is less then 1 ether', 'If msg value is greater then 50 ether', 'amount is equal to 50 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'regeneration is equal to block timestamp', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 200', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
NanoPyramid1,"['NanoPyramid', 'onlyowner', 'pyramidMultiplier', 'minAmount', 'maxAmount', 'fee', 'collectedFees', 'minFeePayout', 'owner', 'participants', 'payoutOrder', 'balance', 'amount', 'amountToRefund', 'payoutToSend', 'payout', 'idx', 'Participant', 'Participant has etherAddress', 'Participant has payout', 'NanoPyramid', '', 'enter', 'totalParticipants', 'awaitingParticipants', 'outstandingBalance', 'setOwner', 'owner is equal to msg sender', 'If msg sender corresponds to owner', 'If msg value is less then minAmount', 'collectedFees increments of msg value', 'If msg value is greater then maxAmount', 'If amountToRefund is greater or equal to minAmount', 'If not msg sender send', 'amount is equal to maxAmount', 'amount is equal to msg value', 'balance increments of  divided by 100', 'collectedFees increments of  divided by 100', 'While balance is greater then participants payoutOrder payout', 'balance decreases of payoutToSend', 'payoutOrder increments of 1', 'If collectedFees is greater or equal to minFeePayout', 'If not owner send', '', 'collectedFees is equal to 0', 'collectedFees is equal to 0', 'count is equal to participants length', 'count is equal to participants length minus payoutOrder', 'idx is equal to payoutOrder', None, 'idx is less then participants length', 'payout increments of participants idx payout', 'amount is equal to payout minus balance', 'owner is equal to _owner']"
Test,"['test', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'test', '', 'enter', 'kill', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value Invalid symbol 2 is different from 0', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount multiplied by 2', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'If msg sender corresponds to owner', 'owner is equal to _owner']"
The10ETHPyramid1,"['The10ETHPyramid', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'The10ETHPyramid', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 ether', 'If msg value is greater then 1 ether', 'amount is equal to 1 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 150', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
FiveTimes,"['fivetimes', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'fivetimes', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 divided by 100 ether', 'If msg value is greater then 999 ether', 'amount is equal to 999 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 500', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
SmartRevshare1,"['Managed', 'OfficialWebsite', 'SmartRevshare', 'OfficialWebsite inherits from Managed', 'SmartRevshare inherits from OfficialWebsite', 'onlyManager', 'manager', 'Invest', 'Payout', 'currentManager', 'officialWebsite', 'investors', 'payoutIdx', 'currentManager', 'balanc', 'payoutValue', 'currDay', 'idx', 'Investor', 'Investor has addr', 'Investor has value', 'Investor has lastDay', 'Investor has leftPayDays', 'Managed', '', 'setOfficialWebsite', '', 'SmartRevshare', 'found', '', 'invest', 'payout', 'testingContract', 'getDay', 'calculateROI', 'currentManager is equal to msg sender', 'If msg sender is different from currentManager', 'officialWebsite is equal to url', 'If msg sender corresponds to currentManager', 'currentManager is equal to msg sender', 'balanc increments of msg value', 'balanc increments of msg value', 'If msg value is less then 1 finney Invalid symbol ', None, 'idx is less then investors length', 'payoutValue is equal to investors idx value divided by 100', 'If balanc is less then payoutValue', 'If investors idx lastDay is greater or equal to currDay', 'If investors idx leftPayDays is less or equal to 0', 'payoutIdx is equal to idx', 'investors idx lastDay is equal to currDay', 'investors idx leftPayDays decreases of 1', 'balanc decreases of payoutValue', 'If msg value corresponds to 1 finney', 'If msg value corresponds to 2 finney', 'If msg value corresponds to 3 finney']"
DoubleYour5,"['doubleyour5', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'doubleyour5', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 divided by 100 ether', 'If msg value is greater then 5 ether', 'amount is equal to 5 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 200', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
CopyPaste,"['copypaste', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'copypaste', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 1 divided by 100 ether', 'If msg value is greater then 10 ether', 'amount is equal to 10 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 10', 'collectedFees is equal to 0', 'balance increments of amount minus amount divided by 10', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 125', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
Highlander,"['Highlander', 'onlyowner', 'contestant', 'PreviousTime', 'CurrentTime', 'active', 'Current_balance', 'owner', 'idx', 'Contestant', 'Contestant has etherAddress', 'Highlander', '', 'enter', 'kill', 'setOwner', 'CT', 'PT', 'bal', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is different from 5 ether', 'contestant length increments of 1', 'contestant idx etherAddress is equal to msg sender', 'Current_balance is equal to this balance', 'CurrentTime is equal to now', 'If idx corresponds to 0', 'PreviousTime is equal to now', 'If CurrentTime minus PreviousTime is greater then 1 days', 'PreviousTime is equal to CurrentTime', 'PreviousTime is equal to CurrentTime', 'Current_balance is equal to this balance', 'If msg sender corresponds to owner Invalid symbol ', 'active is equal to 0', 'owner is equal to _owner', 'CurrTime is equal to CurrentTime', 'PrevTime is equal to PreviousTime', 'WebBal is equal to Current_balance']"
ResetPonzi1,"['ResetPonzi', 'persons', 'niceGuys', 'payoutIdx', 'currentNiceGuyIdx', 'investor', 'currentNiceGuy', 'beta', 'idx', 'ngidx', 'Person', 'NiceGuy', 'Person has addr', 'NiceGuy has addr2', 'ResetPonzi', '', 'currentNiceGuy is equal to msg sender', 'If msg value is different from 9 ether', 'If investor is less then 8', 'persons length increments of 1', 'persons idx addr is equal to msg sender', 'If investor is greater then 7', 'niceGuys length increments of 1', 'niceGuys ngidx addr2 is equal to msg sender', 'If investor is greater then 8', 'currentNiceGuy is equal to niceGuys currentNiceGuyIdx addr2', 'currentNiceGuyIdx increments of 1', 'If investor is less then 9', 'investor increments of 1', 'investor is equal to 0', 'While this balance is greater or equal to 10 ether', 'payoutIdx increments of 1']"
ResetPonzi3,"['ResetPonzi', 'persons', 'niceGuys', 'payoutIdx', 'currentNiceGuyIdx', 'investor', 'currentNiceGuy', 'beta', 'ngidx', 'idx', 'Person', 'NiceGuy', 'Person has addr', 'NiceGuy has addr2', 'ResetPonzi', '', 'funnel', 'currentNiceGuy is equal to msg sender', 'beta is equal to msg sender', 'If msg value is different from 9 ether', 'If investor is greater then 8', 'niceGuys length increments of 1', 'niceGuys ngidx addr2 is equal to msg sender', 'If investor corresponds to 10', 'currentNiceGuy is equal to niceGuys currentNiceGuyIdx addr2', 'currentNiceGuyIdx increments of 1', 'If investor is less then 9', 'persons length increments of 1', 'persons idx addr is equal to msg sender', 'investor increments of 1', 'If investor corresponds to 11', 'investor is equal to 0', 'While this balance is greater or equal to 10 ether', 'payoutIdx increments of 1']"
Tanya2,"['Tanya', 'onlyowner', 'participants', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'fee', 'idx', 'txAmount', 'Participant', 'Participant has etherAddress', 'Participant has amount', 'Tanya', '', 'enter', 'collectFees', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'collectedFees increments of fee', 'Invalid symbol participants length', 'participants idx etherAddress is equal to msg sender', 'participants idx amount is equal to msg value minus fee', 'balance increments of msg value minus fee', 'If balance is greater or equal to txAmount', 'If not participants payoutIdx etherAddress send', 'balance decreases of txAmount', 'Invalid symbol payoutIdx', 'If collectedFees corresponds to 0', 'If not owner send', 'collectedFees is equal to 0', 'owner is equal to _owner']"
x15v1,"['x15', 'onlyowner', 'crazyearners', 'deposits_until_jackpot', 'totalearners', 'feerate', 'profitrate', 'jackpotrate', 'alpha', 'feeamount', 'balance', 'totaldeposited', 'totalmoneyearned', 'kappa', 'calculator', 'beta', 'amount', 'tot_pl', 'payout', 'nr', 'earnerarray', 'earnerarray has etherAddress', 'earnerarray has amount', 'x15', '', 'enter', 'If msg sender corresponds to kappa', 'kappa is equal to msg sender', 'If msg value is less then 30 ether', 'totalearners is equal to tot_pl plus 1', 'deposits_until_jackpot is equal to 20 minus ', 'crazyearners length increments of 1', 'crazyearners tot_pl etherAddress is equal to msg sender', 'crazyearners tot_pl amount is equal to amount', 'feeamount is equal to amount multiplied by alpha divided by 100', 'balance increments of amount', 'totaldeposited increments of amount', 'If feeamount is different from 0', 'If balance is greater then feeamount', 'balance decreases of feeamount', 'totalmoneyearned increments of feeamount', 'If alpha is less then 100', 'alpha increments of 30', 'beta is equal to alpha plus crazyearners tot_pl amount', 'calculator is equal to alpha plus beta divided by 2', 'alpha is equal to 100', 'While balance is greater then crazyearners nr amount multiplied by 500 divided by 100 Invalid symbol ', 'If  Invalid symbol balance is greater then crazyearners nr amount multiplied by 1500 divided by 100', 'payout is equal to crazyearners nr amount multiplied by 1500 divided by 100', 'balance decreases of crazyearners nr amount multiplied by 1500 divided by 100', 'totalmoneyearned increments of crazyearners nr amount multiplied by 1500 divided by 100', 'payout is equal to crazyearners nr amount multiplied by 500 divided by 100', 'balance decreases of crazyearners nr amount multiplied by 500 divided by 100', 'totalmoneyearned increments of crazyearners nr amount multiplied by 500 divided by 100', 'nr increments of 1']"
NiceGuyTax3,"['NiceGuyTax', 'investors', 'niceGuys', 'payoutIndex', 'currentNiceGuyIndex', 'investorIndex', 'currentNiceGuy', 'index', 'niceGuyIndex', 'Investor', 'NiceGuy', 'Investor has addr', 'NiceGuy has addr', 'NiceGuyTax', '', 'currentNiceGuy is equal to msg sender', 'If msg value is different from 9 ether', 'If investorIndex is less then 8', 'investors length increments of 1', 'investors index addr is equal to msg sender', 'If investorIndex is greater then 7', 'niceGuys length increments of 1', 'niceGuys niceGuyIndex addr is equal to msg sender', 'If investorIndex is greater then 8', 'currentNiceGuy is equal to niceGuys currentNiceGuyIndex addr', 'currentNiceGuyIndex increments of 1', 'If investorIndex is less then 9', 'investorIndex increments of 1', 'investorIndex is equal to 0', 'While this balance is greater then 9 ether', 'payoutIndex increments of 1']"
SwarmRedistribution5,"['RES', 'SwarmRedistribution', 'SwarmRedistribution inherits from RES', 'onlyJohan', 'Transfer', 'Bought', 'Sold', 'Swarm', 'name', 'symbol', 'decimals', 'totalSupply', 'balanceOf', 'JohanNygren', 'dividendPathways', 'totalBasicIncome', 'taxRate', 'swarmTree', 'inSwarmTree', 'JohanInSwarm', 'taxCollected', 'sentAmount', 'i', 'timeStamp', 'node', 'share', 'i', 'node', 'parent', 'index', 'isJohan', 'JohanWasInSwarm', 'i', 'dividendPathway', 'Node', 'dividendPathway has from', 'dividendPathway has amount', 'dividendPathway has timeStamp', 'Node has node', 'Node has parent', 'Node has index', 'RES', 'buy', 'SwarmRedistribution', 'changeJohanNygrensAddress', 'sell', 'transfer', 'swarmRedistribution', 'iterateThroughSwarm', 'doSwarm', 'removeDividendPathway', 'name is equal to RES', 'symbol is equal to RES', 'decimals is equal to 18', ' is equal to msg value', 'totalSupply increments of msg value', 'taxRate is equal to 20', 'JohanNygren is equal to 0x948176CB42B65d835Ee4324914B104B66fB93B52', 'If msg sender is different from JohanNygren', 'JohanNygren is equal to _newAddress', 'If  is less then _value', ' decreases of _value', 'totalSupply decreases of _value', 'If _to corresponds to msg sender', 'If  is less then _value', 'If  plus _value is less then ', 'If swarmRedistribution corresponds to True', 'sentAmount is equal to _value', 'sentAmount is equal to _value minus taxCollected', ' decreases of sentAmount', ' increments of _value minus taxCollected', 'If swarmTree length is different from 0', 'If dividendPathways _node length is different from 0', None, 'i is less then dividendPathways _node length', 'If  corresponds to False', 'If timeStamp is less or equal to _timeStamp', 'If dividendPathways _node i from corresponds to JohanNygren', 'JohanInSwarm is equal to True', '', 'share is equal to _taxCollected', 'share is equal to 0', None, 'i is less then swarmTree length', 'If node corresponds to JohanNygren', 'isJohan is equal to True', '', ' increments of share', ' increments of share', 'If dividendPathways parent index amount minus _taxCollected is greater then 0', 'dividendPathways parent index amount decreases of _taxCollected', '', 'Invalid symbol swarmTree', 'Invalid symbol JohanInSwarm', 'If not JohanWasInSwarm', 'Invalid symbol dividendPathways node index', None, 'i is less then dividendPathways node length minus 1', ' is equal to ', 'Invalid symbol dividendPathways node length']"
WealthRedistributionProject,"['WealthRedistributionProject', 'benefactor', 'balance', 'totalBalance', 'transactionAmount', 'k', 'total_inv', 'BenefactorArray', 'BenefactorArray has etherAddress', 'BenefactorArray has amount', '', 'enter', 'If msg value is different from 1 ether', 'benefactor length increments of 1', 'benefactor total_inv etherAddress is equal to msg sender', 'benefactor total_inv amount is equal to msg value', 'balance increments of msg value', 'While k is less then total_inv', 'transactionAmount is equal to msg value multiplied by benefactor k amount divided by totalBalance', 'balance decreases of transactionAmount', 'k increments of 1', 'totalBalance increments of msg value']"
TheUltimatePyramid,"['theultimatepyramid', 'onlyowner', 'persons', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Person', 'Person has etherAddress', 'Person has amount', 'theultimatepyramid', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 80 divided by 100 ether', 'If msg value is greater then 40 ether', 'amount is equal to 10 ether', 'amount is equal to msg value', 'persons length increments of 1', 'persons idx etherAddress is equal to msg sender', 'persons idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of 0', 'collectedFees is equal to 0', 'balance increments of amount', 'balance increments of amount', 'While balance is greater then persons payoutIdx amount divided by 100 multiplied by 180', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'owner is equal to _owner']"
Etheramid1,"['Etheramid1', 'Etheramid2', 'Tree', 'Index', 'Count', 'top', 'contribution', 'eth1', 'oldUserCount', 'inviter', 'itself', 'totalPayout', 'ida', 'amount', 'next', 'rest', 'level', 'toSend', 'Participant', 'Participant has inviter', 'Participant has itself', 'Participant has totalPayout', 'getParticipantById', 'getParticipantCount', 'Etheramid2', '', 'moveOldUser', 'getParticipantById', 'getParticipantByAddress', 'addParticipant', 'getParticipantCount', 'enter', 'top is equal to ', ' is equal to eth1 getParticipantById', 'If  Invalid symbol ', 'If id is greater or equal to Count', 'inviter is equal to Tree ida inviter', 'itself is equal to Tree ida itself', 'totalPayout is equal to Tree ida totalPayout', 'If Tree adr itself corresponds to 0x0', 'inviter is equal to Tree adr inviter', 'itself is equal to Tree adr itself', 'totalPayout is equal to Tree adr totalPayout', ' is equal to itself', ' is equal to Participant', 'Count increments of 1', 'count is equal to Count', 'If  Invalid symbol  Invalid symbol ', 'While  Invalid symbol ', 'Tree next totalPayout increments of toSend', 'rest decreases of toSend', 'next is equal to Tree next inviter', 'Invalid symbol level', 'Tree next totalPayout increments of rest']"
Kardashian,"['Kardashian', 'onlyowner', 'participants', 'payoutIdx', 'collectedFees', 'balance', 'owner', 'amount', 'idx', 'transactionAmount', 'Participant', 'Participant has etherAddress', 'Participant has amount', 'Kardashian', '', 'enter', 'collectFees', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 10 finney', 'If msg value is greater then 100 ether', 'amount is equal to 100 ether', 'amount is equal to msg value', 'participants length increments of 1', 'participants idx etherAddress is equal to msg sender', 'participants idx amount is equal to amount', 'If idx is different from 0', 'collectedFees increments of amount divided by 20', 'balance increments of amount minus amount divided by 20', 'collectedFees increments of amount', 'While balance is greater then participants payoutIdx amount divided by 100 multiplied by 190', 'balance decreases of transactionAmount', 'payoutIdx increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', 'owner is equal to _owner']"
PiggyBank2,"['PiggyBank', 'onlyowner', 'investors', 'k', 'fees', 'balance', 'owner', 'amount', 'total_inv', 'transactionAmount', 'InvestorArray', 'InvestorArray has etherAddress', 'InvestorArray has amount', 'PiggyBank', '', 'enter', 'setOwner', 'If msg sender corresponds to owner', 'owner is equal to msg sender', 'If msg value is less then 50 finney', 'investors length increments of 1', 'investors total_inv etherAddress is equal to msg sender', 'investors total_inv amount is equal to amount', 'fees increments of amount divided by 33', 'balance increments of amount', 'If fees is different from 0', 'If balance is greater then fees', 'balance decreases of fees', 'While balance is greater then investors k amount multiplied by 3 divided by 100 Invalid symbol ', 'If k Invalid symbol 25 corresponds to 0 Invalid symbol ', 'transactionAmount is equal to investors k amount multiplied by 9 divided by 100', 'balance decreases of investors k amount multiplied by 9 divided by 100', 'transactionAmount is equal to investors k amount multiplied by 3 divided by 100', 'balance decreases of investors k amount multiplied by 3 divided by 100', 'k increments of 1', 'owner is equal to new_owner']"
DynamicPyramid3,"['DynamicPyramid', 'onlyowner', 'balance', 'collectedFees', 'feePercent', 'pyramidMultiplier', 'payoutOrder', 'creator', 'participants', '_fee', 'payoutToSend', 'feesToCollect', 'Participant', 'Participant has etherAddress', 'Participant has payout', 'DynamicPyramid', '', 'init', 'addPayout', 'collectAllFees', 'collectFeesInEther', 'collectPercentOfFees', 'changeOwner', 'changeMultiplier', 'changeFeePercentage', 'currentMultiplier', 'currentFeePercentage', 'currentPyramidBalanceApproximately', 'nextPayoutWhenPyramidBalanceTotalsApproximately', 'feesSeperateFromBalanceApproximately', 'totalParticipants', 'numberOfParticipantsWaitingForPayout', 'participantDetails', 'creator is equal to msg sender', 'If msg sender corresponds to creator', 'If msg value is less then 1 ether', 'collectedFees increments of msg value', 'If msg value is greater or equal to 50 ether', '_fee is divided by 2', 'If participants length corresponds to 10', 'pyramidMultiplier is equal to 200', 'If participants length corresponds to 25', 'pyramidMultiplier is equal to 150', 'balance increments of  divided by 100', 'collectedFees increments of  divided by 100', 'While balance is greater then participants payoutOrder payout', 'balance decreases of participants payoutOrder payout', 'payoutOrder increments of 1', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', '_amt is multiplied by 1 ether', 'If _amt is greater then collectedFees', 'If collectedFees corresponds to 0', 'collectedFees decreases of _amt', 'If collectedFees corresponds to 0 Invalid symbol ', 'collectedFees decreases of feesToCollect', 'creator is equal to _owner', 'If _mult is greater then 300 Invalid symbol ', 'pyramidMultiplier is equal to _mult', 'If _fee is greater then 10', 'feePercent is equal to _fee', 'multiplier is equal to pyramidMultiplier', 'info is equal to This multiplier applies to you as soon as transaction is received, may be lowered to hasten payouts or increased if payouts are fast enough. Due to no float or decimals, multiplier is x100 for a fractional multiplier e.g. 250 is actually a 2.5x multiplier. Capped at 3x max and 1.2x min.', 'fee is equal to feePercent', 'info is equal to Shown in % form. Fee is halved(50%) for amounts equal or greater than 50 ethers. (Fee may change, but is capped to a maximum of 10%)', 'pyramidBalance is equal to balance divided by 1 ether', 'info is equal to All balance values are measured in Ethers, note that due to no decimal placing, these values show up as integers only, within the contract itself you will get the exact decimal value you are supposed to', 'balancePayout is equal to participants payoutOrder payout divided by 1 ether', 'fees is equal to collectedFees divided by 1 ether', 'count is equal to participants length', 'count is equal to participants length minus payoutOrder', 'If orderInPyramid is less or equal to participants length', 'Address is equal to participants orderInPyramid etherAddress', 'Payout is equal to participants orderInPyramid payout divided by 1 ether']"
SwarmRedistribution3,"['RES', 'SwarmRedistribution', 'SwarmRedistribution inherits from RES', 'onlyJohan', 'isOpen', 'Transfer', 'Bought', 'Sold', 'BoughtViaJohan', 'Swarm', 'name', 'symbol', 'decimals', 'totalSupply', 'balanceOf', 'JohanNygren', 'campaignOpen', 'dividendPathways', 'totalBasicIncome', 'taxRate', 'swarmTree', 'inSwarmTree', 'JohanInSwarm', 'taxCollected', 'sentAmount', 'i', 'timeStamp', 'node', 'share', 'i', 'node', 'parent', 'index', 'isJohan', 'JohanWasInSwarm', 'i', 'dividendPathway', 'Node', 'dividendPathway has from', 'dividendPathway has amount', 'dividendPathway has timeStamp', 'Node has node', 'Node has parent', 'Node has index', 'RES', 'SwarmRedistribution', 'changeJohanNygrensAddress', 'closeCampaign', 'buy', 'buyViaJohan', 'sell', 'transfer', 'swarmRedistribution', 'iterateThroughSwarm', 'doSwarm', 'removeDividendPathway', 'name is equal to RES', 'symbol is equal to RES', 'decimals is equal to 18', 'taxRate is equal to 20', 'JohanNygren is equal to 0x948176CB42B65d835Ee4324914B104B66fB93B52', 'campaignOpen is equal to True', 'If msg sender is different from JohanNygren', 'If campaignOpen is different from True', 'JohanNygren is equal to _newAddress', 'campaignOpen corresponds to False', ' is equal to msg value', 'totalSupply increments of msg value', ' is equal to msg value', 'totalSupply increments of msg value', 'If  is less then _value', ' decreases of _value', 'If not msg sender send', 'totalSupply decreases of _value', 'If _to corresponds to msg sender', 'If  is less then _value', 'If  plus _value is less then ', 'If swarmRedistribution corresponds to True', 'sentAmount is equal to _value', 'sentAmount is equal to _value minus taxCollected', ' decreases of sentAmount', ' increments of _value minus taxCollected', 'If swarmTree length is different from 0', 'If dividendPathways _node length is different from 0', None, 'i is less then dividendPathways _node length', 'If  corresponds to False', 'If timeStamp is less or equal to _timeStamp', 'If dividendPathways _node i from corresponds to JohanNygren', 'JohanInSwarm is equal to True', ' is equal to True', '', 'share is equal to _taxCollected', 'share is equal to 0', None, 'i is less then swarmTree length', 'If node corresponds to JohanNygren', 'isJohan is equal to True', '', ' increments of share', ' increments of share', 'If dividendPathways parent index amount minus _taxCollected is greater then 0', 'dividendPathways parent index amount decreases of _taxCollected', ' is equal to False', '', 'Invalid symbol swarmTree', 'Invalid symbol JohanInSwarm', 'If not JohanWasInSwarm', 'Invalid symbol dividendPathways node index', None, 'i is less then dividendPathways node length minus 1', ' is equal to ', 'Invalid symbol dividendPathways node length']"
Doubler3,"['Doubler', 'onlyowner', 'participants', 'payoutIdx', 'collectedFees', 'balance', 'timeout', 'owner', 'idx', 'NeedAmount', 'NeedAmount', 'Participant', 'Participant has etherAddress', 'Participant has PayAmount', 'Doubler', '', 'enter', 'NextPayout', 'collectFees', 'collectBalance', 'setOwner', 'If msg sender corresponds to owner', 'collectedFees increments of msg value', 'owner is equal to msg sender', 'If msg value is greater or equal to 100 finney Invalid symbol ', 'collectedFees increments of msg value divided by 20', 'balance increments of msg value minus msg value divided by 20', 'participants length increments of 1', 'participants idx etherAddress is equal to msg sender', 'participants idx PayAmount is equal to 2 multiplied by ', 'If balance is greater or equal to NeedAmount', 'balance decreases of NeedAmount', 'payoutIdx increments of 1', 'collectedFees increments of msg value', 'balance increments of msg value', 'If balance is greater or equal to NeedAmount', 'balance decreases of NeedAmount', 'payoutIdx increments of 1', 'collectedFees increments of msg value', 'If collectedFees corresponds to 0', 'collectedFees is equal to 0', 'balance increments of msg value', 'If balance corresponds to 0 Invalid symbol ', 'balance is equal to 0', 'collectedFees increments of msg value', 'owner is equal to _owner']"
